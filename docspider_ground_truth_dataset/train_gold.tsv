query	db
db.head.aggregate([ { $match: { age: { $gt: 56 } } }, { $count: "total_heads_older_than_56" } ])	department_management
db.head.find({}, {name: 1, born_state: 1, age: 1}).sort({age: 1})	department_management
db.department.find({}, { Creation: 1, Name: 1, Budget_in_Billions: 1 })	department_management
db.department.aggregate([ { $group: { _id: null, maxBudget: { $max: "$Budget_in_Billions" }, minBudget: { $min: "$Budget_in_Billions" } } }, { $project: { maxBudget: 1, minBudget: 1 } } ])	department_management
db.department.aggregate([ { $match: { Ranking: { $gte: 10, $lte: 15 } } }, { $group: { _id: null, average: { $avg: "$Num_Employees" } } }, { $project: { avg: "$average" } } ])	department_management
db.head.find({born_state: {$ne: 'California'}}, {name: 1})	department_management
db.department.aggregate([ { $lookup: { from: "management", localField: "Department_ID", foreignField: "department_ID", as: "management_info" } }, { $unwind: "$management_info" }, { $lookup: { from: "head", localField: "management_info.head_ID", foreignField: "head_ID", as: "head_info" } }, { $unwind: "$head_info" }, { $match: { "head_info.born_state": "Alabama" } }, { $group: { _id: "$Creation" } } ])	department_management
db.head.aggregate([ { $group: { _id: "$born_state", count: { $sum: 1 } } }, { $match: { count: { $gte: 3 } } }, { $project: { born_state: "$_id" } } ])	department_management
db.department.aggregate([ { $group: { _id: "$Creation", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { year: "$_id" } } ])	department_management
db.department.aggregate([ { $lookup: { from: "management", localField: "Department_ID", foreignField: "department_ID", as: "management_info" } }, { $unwind: "$management_info" }, { $match: { "management_info.temporary_acting": "Yes" } }, { $project: { name: "$Name", num_employees: "$Num_Employees" } } ])	department_management
db.department.aggregate([ { $lookup: { from: "management", localField: "Department_ID", foreignField: "department_ID", as: "management_info" } }, { $match: { "management_info": { $size: 0 } } }, { $count: "num_departments_with_no_heads" } ])	department_management
db.management.aggregate([ { $match: { temporary_acting: "Yes" } }, { $lookup: { from: "head", localField: "head_ID", foreignField: "head_ID", as: "head_details" } }, { $unwind: "$head_details" }, { $group: { _id: "$head_details.age" } }, { $project: { age: "$_id" } } ])	department_management
db.department.aggregate([ { $match: { $or: [ { Name: "Treasury" }, { Name: "Homeland Security" } ] } }, { $lookup: { from: "management", localField: "Department_ID", foreignField: "department_ID", as: "dept_management" } }, { $unwind: "$dept_management" }, { $lookup: { from: "head", localField: "dept_management.head_ID", foreignField: "head_ID", as: "head_info" } }, { $unwind: "$head_info" }, { $group: { _id: "$head_info.born_state", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { born_state: "$_id" } } ])	department_management
db.management.aggregate([ { $lookup: { from: "department", localField: "department_ID", foreignField: "Department_ID", as: "department_info" } }, { $unwind: "$department_info" }, { $group: { _id: "$department_ID", name: { $first: "$department_info.Name" }, count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { department_ID: "$_id", name: 1, count: 1 } } ])	department_management
db.farm.find({}, {Total_Horses: 1}).sort({Total_Horses: 1})	farm
db.farm.aggregate([ { $project: { Total_Horses: 1 } }, { $sort: { Total_Horses: 1 } } ])	farm
db.farm_competition.find({Theme: {$ne: 'Aliens'}}, {Hosts: 1})	farm
db.farm_competition.find({Theme: {$ne: 'Aliens'}}, {Hosts: 1})	farm
db.farm_competition.find({}, { Theme: 1}).sort({Year: 1})	farm
db.farm_competition.find({}, { Theme: 1}).sort({Year: 1})	farm
db.farm.aggregate([ { $group: { _id: null, maxCows: { $max: "$Cows" }, minCows: { $min: "$Cows" } } }, { $project: { maxCows: 1, minCows: 1 } } ])	farm
db.farm.aggregate([ { $group: { _id: null, maxCows: { $max: "$Cows" }, minCows: { $min: "$Cows" } } }, { $project: { maxCows: 1, minCows: 1 } } ])	farm
db.city.find({}, {Official_Name: 1}).sort({Population: -1})	farm
db.city.find({}, {Official_Name: 1}).sort({Population: -1})	farm
db.city.find({}, {Official_Name: 1, Status: 1}).sort({Population: -1}).limit(1)	farm
db.city.find({}, {Official_Name: 1, Status: 1}).sort({Population: -1}).limit(1)	farm
db.city.aggregate([ { $lookup: { from: "farm_competition", localField: "City_ID", foreignField: "Host_city_ID", as: "host_city_info" } }, { $unwind: "$host_city_info" }, { $project: { "_id": 0, "Year": "$host_city_info.Year", "Official_Name": 1 } } ])	farm
db.city.aggregate([ { $lookup: { from: "farm_competition", localField: "City_ID", foreignField: "Host_city_ID", as: "competitions" } }, { $match: { "competitions.1": { $exists: true } } }, { $project: { "_id": 0, "Official_Name": 1 } } ])	farm
db.city.aggregate([ { $lookup: { from: "farm_competition", localField: "City_ID", foreignField: "Host_city_ID", as: "competitions" } }, { $match: { "competitions.1": { $exists: true } } }, { $project: { Official_Name: 1 } } ])	farm
db.city.aggregate([ { $lookup: { from: "farm_competition", localField: "City_ID", foreignField: "Host_city_ID", as: "competitions" } }, { $project: { Status: 1 } }, { $sort: { numCompetitions: -1 } }, { $limit: 1 } ])	farm
db.city.aggregate([ { $lookup: { from: "farm_competition", localField: "City_ID", foreignField: "Host_city_ID", as: "competitions" } }, { $project: { Status: 1 } }, { $sort: { numCompetitions: -1 } }, { $limit: 1 } ])	farm
db.city.aggregate([ { $match: { Population: { $gt: 1000 } } }, { $lookup: { from: "farm_competition", localField: "City_ID", foreignField: "Host_city_ID", as: "competitions" } }, { $unwind: "$competitions" }, { $project: { Theme: "$competitions.Theme" } } ])	farm
db.city.aggregate([ { $match: { Population: { $gt: 1000 } } }, { $lookup: { from: "farm_competition", localField: "City_ID", foreignField: "Host_city_ID", as: "competitions" } }, { $unwind: "$competitions" }, { $project: { Theme: "$competitions.Theme" } } ])	farm
db.city.aggregate([ { $group: { _id: "$Status", averagePopulation: { $avg: "$Population" } } } ])	farm
db.city.aggregate([ { $group: { _id: "$Status", averagePopulation: { $avg: "$Population" } } } ])	farm
db.city.aggregate([ { $group: { _id: "$Status", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $project: { Status: "$_id"} } ])	farm
db.city.aggregate([ { $group: { _id: "$Status", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $project: { Status: "$_id" } } ])	farm
db.city.aggregate([ { $group: { _id: "$Status", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Status: "$_id" } } ])	farm
db.city.aggregate([ { $group: { _id: "$Status", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Status: "$_id" } } ])	farm
db.city.find({$or: [{Population: {$gt: 1500}}, {Population: {$lt: 500}}]}, { Official_Name: 1})	farm
db.city.find( { $or: [ {Population: {$gt: 1500}}, {Population: {$lt: 500}} ] }, {Official_Name: 1} )	farm
db.city.find({Status: {$ne: 'Village'}}, {Census_Ranking: 1})	farm
db.city.find({Status: {$ne: 'Village'}}, {Census_Ranking: 1})	farm
db.Students.find({ "student_id": { "$nin": db.Student_Course_Attendance.distinct("student_id") } }, { "student_id": 1, "_id": 0 })	student_assessment
db.Students.find( { "student_id": { "$nin": db.Student_Course_Attendance.distinct("student_id") } }, { "_id": 0, "student_id": 1 } )	student_assessment
db.Student_Course_Attendance.aggregate([ { $match: { student_id: 171 } }, { $group: { _id: "$course_id" } }, { $count: "total_courses" } ])	student_assessment
db.Student_Course_Attendance.aggregate([ { $match: { student_id: 171 } }, { $group: { _id: "$course_id" } }, { $count: "number_of_courses_attended" } ])	student_assessment
db.People.aggregate([ { $match: { email_address: "stanley.monahan@example.org" } }, { $lookup: { from: "Candidates", localField: "person_id", foreignField: "candidate_id", as: "candidate_info" } }, { $unwind: "$candidate_info" }, { $project: { candidate_id: "$candidate_info.candidate_id" } } ])	student_assessment
db.People.aggregate([ { $match: { email_address: 'stanley.monahan@example.org' } }, { $lookup: { from: 'Candidates', localField: 'person_id', foreignField: 'candidate_id', as: 'candidate_info' } }, { $unwind: '$candidate_info' }, { $project: { candidate_id: '$candidate_info.candidate_id' } } ])	student_assessment
db.Candidate_Assessments.find({}, { candidate_id: 1 }).sort({ assessment_date: -1 }).limit(1)	student_assessment
db.Candidate_Assessments.find({}, { candidate_id: 1 }).sort({ assessment_date: -1 }).limit(1)	student_assessment
db.Students.aggregate([ { $lookup: { from: "Student_Course_Registrations", localField: "student_id", foreignField: "student_id", as: "registrations" } }, { $project: { "student_details": 1, "numberOfCourses": { $size: "$registrations" } } }, { $sort: { "numberOfCourses": -1 } }, { $limit: 1 }, { $project: { student_details: 1} } ])	student_assessment
db.Candidate_Assessments.find({asessment_outcome_code: 'Pass'}, {candidate_id: 1})	student_assessment
db.Candidate_Assessments.find({asessment_outcome_code: 'Pass'}, {candidate_id: 1})	student_assessment
db.Candidates.aggregate([ { $lookup: { from: "Candidate_Assessments", localField: "candidate_id", foreignField: "candidate_id", as: "candidate_assessments" } }, { $unwind: "$candidate_assessments" }, { $match: { "candidate_assessments.asessment_outcome_code": "Fail" } }, { $lookup: { from: "People", localField: "candidate_id", foreignField: "person_id", as: "people" } }, { $unwind: "$people" }, { $project: { cell_mobile_number: "$people.cell_mobile_number" } } ])	student_assessment
db.Candidates.aggregate([ { $lookup: { from: "Candidate_Assessments", localField: "candidate_id", foreignField: "candidate_id", as: "candidate_assessments" } }, { $unwind: "$candidate_assessments" }, { $match: { "candidate_assessments.asessment_outcome_code": "Fail" } }, { $lookup: { from: "People", localField: "candidate_id", foreignField: "person_id", as: "people" } }, { $unwind: "$people" }, { $project: { cell_mobile_number: "$people.cell_mobile_number" } } ])	student_assessment
db.Student_Course_Registrations.find({course_id: 301}, {student_id: 1})	student_assessment
db.Student_Course_Registrations.find({course_id: 301}, {student_id: 1})	student_assessment
db.Addresses.aggregate([ { $lookup: { from: "People_Addresses", localField: "address_id", foreignField: "address_id", as: "pa" } }, { $unwind: "$pa" }, { $group: { _id: "$city" } }, { $project: { city: "$_id" } } ])	student_assessment
db.Addresses.aggregate([ { $lookup: { from: "People_Addresses", localField: "address_id", foreignField: "address_id", as: "address_join" } }, { $unwind: "$address_join" }, { $lookup: { from: "Students", localField: "address_join.person_id", foreignField: "student_id", as: "student_join" } }, { $unwind: "$student_join" }, { $group: { _id: "$city" } }, { $project: { city: "$_id" } } ])	student_assessment
db.Addresses.aggregate([ { $lookup: { from: "People_Addresses", localField: "address_id", foreignField: "address_id", as: "address_join" } }, { $unwind: "$address_join" }, { $lookup: { from: "Students", localField: "address_join.person_id", foreignField: "student_id", as: "student_join" } }, { $unwind: "$student_join" }, { $group: { _id: "$city" } }, { $project: { city: "$_id" } } ])	student_assessment
db.Courses.find({}, { course_name: 1 }).sort({ course_name: 1 })	student_assessment
db.Courses.find({}, { course_name: 1 }).sort({ course_name: 1 })	student_assessment
db.People.find({}, {first_name: 1}).sort({first_name: 1})	student_assessment
db.People.find({}, {first_name: 1}).sort({first_name: 1})	student_assessment
db.Student_Course_Registrations.aggregate([ { $lookup: { from: "Student_Course_Attendance", localField: "student_id", foreignField: "student_id", as: "attendance" } }, { $project: { student_id: 1 } }, { $unionWith: { coll: "Student_Course_Attendance", pipeline: [ { $project: { student_id: 1 } } ] } }, { $group: { _id: "$student_id" } }, { $project: { student_id: "$_id" } } ])	student_assessment
db.Student_Course_Registrations.aggregate([ { $match: { student_id: 121 } }, { $group: { _id: "$course_id" } }, { $unionWith: { coll: "Student_Course_Attendance", pipeline: [ { $match: { student_id: 121 } }, { $group: { _id: "$course_id" } } ] } }, { $group: { _id: "$_id" } }, { $project: { course_id: "$_id" } } ])	student_assessment
db.Student_Course_Registrations.aggregate([ { $match: { student_id: 121 } }, { $group: { _id: "$course_id" } }, { $unionWith: { coll: "Student_Course_Attendance", pipeline: [ { $match: { student_id: 121 } }, { $group: { _id: "$course_id" } } ] } }, { $group: { _id: "$_id" } }, { $project: { course_id: "$_id" } } ])	student_assessment
db.station.aggregate([ { $group: { _id: "$city", maxLat: { $max: "$lat" } } } ])	bike_1
db.station.aggregate([ { $group: { _id: "$city", maxLat: { $max: "$lat" } } } ])	bike_1
db.trip.find({}, { start_station_name: 1, end_station_name: 1}).sort({id: 1}).limit(3)	bike_1
db.trip.find({}, { start_station_name: 1, end_station_name: 1}).sort({id: 1}).limit(3)	bike_1
db.station.aggregate([ { $match: { city: "San Jose" } }, { $group: { _id: null, avgLat: { $avg: "$lat" }, avgLong: { $avg: "$long" } } }, { $project: { avgLat: 1, avgLong: 1 } } ])	bike_1
db.station.aggregate([ { $match: { city: "San Jose" } }, { $group: { _id: null, avgLat: { $avg: "$lat" }, avgLong: { $avg: "$long" } } }, { $project: { avgLat: 1, avgLong: 1 } } ])	bike_1
db.trip.find({}, {id: 1}).sort({duration: 1}).limit(1)	bike_1
db.trip.aggregate([ { $match: { bike_id: 636 } }, { $group: { _id: null, totalDuration: { $sum: "$duration" }, maxDuration: { $max: "$duration" } }}, { $project: { totalDuration: 1, maxDuration: 1 } } ])	bike_1
db.trip.aggregate([ { $match: { bike_id: 636 } }, { $group: { _id: null, totalDuration: { $sum: "$duration" }, maxDuration: { $max: "$duration" } }}, { $project: { totalDuration: 1, maxDuration: 1 } } ])	bike_1
db.station.aggregate([ { $group: { _id: "$city" } }, { $count: "distinct_cities" } ])	bike_1
db.station.aggregate([ { $lookup: { from: "status", localField: "id", foreignField: "station_id", as: "status_info" } }, { $match: { "status_info.bikes_available": 7 } }, { $project: { name: 1 } } ])	bike_1
db.station.aggregate([ { $lookup: { from: "status", localField: "id", foreignField: "station_id", as: "status_info" } }, { $unwind: "$status_info" }, { $match: { "status_info.bikes_available": 7 } }, { $group: { _id: "$name" } }, { $project: { name: "$_id" } } ])	bike_1
db.trip.aggregate([ { $match: { start_date: { $regex: /^8\// } } }, { $group: { _id: { start_station_name: "$start_station_name", start_station_id: "$start_station_id" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { start_station_name: "$_id.start_station_name", start_station_id: "$_id.start_station_id" } } ])	bike_1
db.trip.aggregate([ { $match: { start_date: { $regex: /^8\// } } }, { $group: { _id: { start_station_name: "$start_station_name", start_station_id: "$start_station_id" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { start_station_name: "$_id.start_station_name", start_station_id: "$_id.start_station_id" } } ])	bike_1
db.station.aggregate([ { $lookup: { from: "trip", localField: "id", foreignField: "start_station_id", as: "trips" } }, { $unwind: "$trips" }, { $sort: { "trips.duration": 1 } }, { $limit: 1 }, { $project: { lat: 1, long: 1, city: 1 } } ])	bike_1
db.station.aggregate([ { $lookup: { from: "trip", localField: "id", foreignField: "start_station_id", as: "trips" } }, { $unwind: "$trips" }, { $sort: { "trips.duration": 1 } }, { $limit: 1 }, { $project: { lat: 1, long: 1, city: 1 } } ])	bike_1
db.station.aggregate([ { $match: { city: "San Francisco" } }, { $lookup: { from: "status", localField: "id", foreignField: "station_id", as: "status_data" } }, { $unwind: "$status_data" }, { $group: { _id: "$id", avgBikesAvailable: { $avg: "$status_data.bikes_available" } } }, { $match: { avgBikesAvailable: { $gt: 10 } } }, { $project: { _id: 1 } } ])	bike_1
db.station.aggregate([ { $match: { city: "San Francisco" } }, { $lookup: { from: "status", localField: "id", foreignField: "station_id", as: "status_info" } }, { $unwind: "$status_info" }, { $group: { _id: "$status_info.station_id", averageBikes: { $avg: "$status_info.bikes_available" } } }, { $match: { averageBikes: { $gt: 10 } } }, { $project: { _id: 1 } } ])	bike_1
db.station.aggregate([ { $lookup: { from: "status", localField: "id", foreignField: "station_id", as: "status_info" } }, { $unwind: "$status_info" }, { $group: { _id: "$id", name: { $first: "$name" }, averageBikesAvailable: { $avg: "$status_info.bikes_available" } } }, { $match: { $or: [ { averageBikesAvailable: { $gt: 14 } }, { installation_date: { $regex: /^12\// } } ] } }, { $project: { name: 1, id: "$_id" } }, { $unionWith: { coll: "station", pipeline: [ { $match: { installation_date: { $regex: /^12\// } } }, { $project: { name: 1, id: 1 } } ] } } ])	bike_1
db.station.aggregate([ { $lookup: { from: "status", localField: "id", foreignField: "station_id", as: "status_info" } }, { $addFields: { average_bikes_available: { $avg: "$status_info.bikes_available" } } }, { $match: { $or: [ { average_bikes_available: { $gt: 14 } }, { installation_date: { $regex: '^12/' } } ] } }, { $project: { id: 1, name: 1 } } ])	bike_1
db.weather.aggregate([ { $match: { zip_code: 94107 } }, { $group: { _id: "$cloud_cover", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 3 } , { $project: { cloud_cover: "$_id" } }])	bike_1
db.weather.aggregate([ { $match: { zip_code: 94107 } }, { $group: { _id: "$cloud_cover", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 3 } , { $project: { cloud_cover: "$_id" } }])	bike_1
db.station.aggregate([ { $match: { city: { $ne: "Palo Alto" } } }, { $lookup: { from: "status", localField: "id", foreignField: "station_id", as: "status" } }, { $unwind: "$status" }, { $group: { _id: null, avgBikesAvailable: { $avg: "$status.bikes_available" } } }, { $project: { avgBikesAvailable: 1 } } ])	bike_1
db.station.aggregate([ { $match: { city: { $ne: "Palo Alto" } } }, { $lookup: { from: "status", localField: "id", foreignField: "station_id", as: "status" } }, { $unwind: "$status" }, { $group: { _id: null, avgBikesAvailable: { $avg: "$status.bikes_available" } } }, { $project: { avgBikesAvailable: 1 } } ])	bike_1
db.weather.aggregate([ { $match: { min_dew_point_f: { $lt: db.weather.aggregate([ { $match: { zip_code: 94107 } }, { $group: { _id: null, min_dew_point_f: { $min: "$min_dew_point_f" } } } ]).toArray()[0].min_dew_point_f } } }, { $project: { date: 1, zip_code: 1 } } ])	bike_1
db.weather.aggregate([ { $match: { min_dew_point_f: { $lt: db.weather.aggregate([ { $match: { zip_code: 94107 } }, { $group: { _id: null, min_dew_point_f: { $min: "$min_dew_point_f" } } } ]).toArray()[0].min_dew_point_f } } }, { $project: { date: 1, zip_code: 1 } } ])	bike_1
db.trip.aggregate([ { $lookup: { from: "station", localField: "start_station_id", foreignField: "id", as: "start_station" } }, { $unwind: "$start_station" }, { $sort: { "start_station.dock_count": -1 } }, { $limit: 1 }, { $project: { id: "$id" } } ])	bike_1
db.trip.aggregate([ { $lookup: { from: "station", localField: "start_station_id", foreignField: "id", as: "station" } }, { $unwind: "$station" }, { $sort: { "station.dock_count": -1 } }, { $limit: 1 }, { $project: { "_id": 0, "id": 1 } } ])	bike_1
db.trip.aggregate([ { $lookup: { from: "station", localField: "end_station_id", foreignField: "id", as: "end_station" } }, { $match: { "end_station.city": { $ne: "San Francisco" } } }, { $count: "total" } ])	bike_1
db.trip.aggregate([ { $lookup: { from: "station", localField: "end_station_id", foreignField: "id", as: "end_station" } }, { $match: { "end_station.city": { $ne: "San Francisco" } } }, { $count: "total" } ])	bike_1
db.station.aggregate([ { $lookup: { from: "status", localField: "id", foreignField: "station_id", as: "status_info" } }, { $match: { city: { $ne: "San Jose" } } }, { $unwind: "$status_info" }, { $group: { _id: "$_id", name: { $first: "$name" }, avgBikesAvailable: { $avg: "$status_info.bikes_available" } } }, { $match: { avgBikesAvailable: { $gt: 10 } } }, { $project: { name: 1 } } ])	bike_1
db.station.aggregate([ { $lookup: { from: "status", localField: "id", foreignField: "station_id", as: "station_status" } }, { $match: { city: { $ne: "San Jose" } } }, { $unwind: "$station_status" }, { $group: { _id: "$station_status.station_id", averageBikesAvailable: { $avg: "$station_status.bikes_available" }, name: { $first: "$name" } } }, { $match: { averageBikesAvailable: { $gt: 10 } } }, { $project: { name: 1 } } ])	bike_1
db.station.find({}, {name: 1, lat: 1, city: 1}).sort({lat: 1}).limit(1)	bike_1
db.station.find({}, {name: 1, lat: 1, city: 1}).sort({lat: 1}).limit(1)	bike_1
db.weather.find({}, {date: 1, mean_temperature_f: 1, mean_humidity: 1}).sort({max_gust_speed_mph: -1}).limit(3)	bike_1
db.weather.find({}, {date: 1, mean_temperature_f: 1, mean_humidity: 1}).sort({max_gust_speed_mph: -1}).limit(3)	bike_1
db.station.aggregate([ { $group: { _id: "$city", count: { $sum: 1 } } }, { $match: { count: { $gte: 15 } } }, { $project: { city: "$_id", count: 1 } } ])	bike_1
db.station.aggregate([ { $group: { _id: "$city", count: { $sum: 1 } } }, { $match: { count: { $gte: 15 } } } ])	bike_1
db.trip.aggregate([ { $group: { _id: { start_station_id: "$start_station_id", start_station_name: "$start_station_name" }, count: { $sum: 1 } } }, { $match: { count: { $gte: 200 } } }, { $project: { start_station_id: "$_id.start_station_id", start_station_name: "$_id.start_station_name" } } ])	bike_1
db.trip.aggregate([ { $group: { _id: { start_station_id: "$start_station_id", start_station_name: "$start_station_name" }, count: { $sum: 1 } } }, { $match: { count: { $gte: 200 } } }, { $project: { start_station_id: "$_id.start_station_id", start_station_name: "$_id.start_station_name" } } ])	bike_1
db.weather.aggregate([ { $group: { _id: "$zip_code", avgVisibility: { $avg: "$mean_visibility_miles" } } }, { $match: { avgVisibility: { $lt: 10 } } }, { $project: { zip_code: "$_id" } } ])	bike_1
db.weather.aggregate([ { $group: { _id: "$zip_code", avgVisibility: { $avg: "$mean_visibility_miles" } } }, { $match: { avgVisibility: { $lt: 10 } } }, { $project: { zip_code: "$_id" } } ])	bike_1
db.station.aggregate([ { $group: { _id: "$city", maxLat: { $max: "$lat" } } }, { $sort: { maxLat: -1 } }, { $project: { city: "$_id" } } ])	bike_1
db.station.aggregate([ { $group: { _id: "$city", maxLat: { $max: "$lat" } } }, { $sort: { maxLat: -1 } }, { $project: { city: "$_id" } } ])	bike_1
db.trip.find({}, { id: 1, duration: 1}).sort({duration: -1}).limit(3)	bike_1
db.trip.find({}, { id: 1, duration: 1}).sort({duration: -1}).limit(3)	bike_1
db.weather.aggregate([ { $group: { _id: "$zip_code", maxDew: { $max: "$max_dew_point_f" } } }, { $match: { maxDew: { $lt: 70 } } }, { $project: { zip_code: "$_id" } } ])	bike_1
db.weather.aggregate([ { $group: { _id: "$zip_code", maxDewPoint: { $max: "$max_dew_point_f" } } }, { $match: { maxDewPoint: { $lt: 70 } } }, { $project: { _id: 1 } } ])	bike_1
db.trip.aggregate([ { $group: { _id: "$zip_code", count: { $sum: 1 } } }, { $match: { count: { $gte: 100 } } }, { $lookup: { from: "weather", localField: "_id", foreignField: "zip_code", as: "weather_data" } }, { $unwind: "$weather_data" }, { $group: { _id: "$_id", avgHumidity: { $avg: "$weather_data.mean_humidity" } } }, { $match: { avgHumidity: { $lt: 70 } } } , { $project: { zip_code: 1 } } ])	bike_1
db.trip.aggregate([ { $group: { _id: "$zip_code", count: { $sum: 1 } } }, { $match: { count: { $gte: 100 } } }, { $lookup: { from: "weather", localField: "_id", foreignField: "zip_code", as: "weather_data" } }, { $unwind: "$weather_data" }, { $group: { _id: "$_id", avgHumidity: { $avg: "$weather_data.mean_humidity" } } }, { $match: { avgHumidity: { $lt: 70 } } }, { $project: { _id: 1 } } ])	bike_1
db.station.aggregate([ { $match: { city: "Palo Alto" } }, { $lookup: { from: "trip", localField: "name", foreignField: "end_station_name", as: "trips" } }, { $project: { name: 1, endTripCount: { $size: "$trips" } } }, { $match: { endTripCount: { $lte: 100 } } }, { $project: { name: 1 } } ])	bike_1
db.station.aggregate([ { $match: { city: "Mountain View" } }, { $lookup: { from: "trip", localField: "id", foreignField: "start_station_id", as: "start_trips" } }, { $unwind: "$start_trips" }, { $lookup: { from: "station", localField: "start_trips.end_station_id", foreignField: "id", as: "end_station" } }, { $unwind: "$end_station" }, { $match: { "end_station.city": "Palo Alto" } }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1 } } ])	bike_1
db.station.aggregate([ { $match: { city: "Mountain View" } }, { $lookup: { from: "trip", localField: "id", foreignField: "start_station_id", as: "start_trips" } }, { $unwind: "$start_trips" }, { $lookup: { from: "station", localField: "start_trips.end_station_id", foreignField: "id", as: "end_station" } }, { $unwind: "$end_station" }, { $match: { "end_station.city": "Palo Alto" } }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1 } } ])	bike_1
db.book.find({}, { Writer: 1 }).sort({ Writer: 1 })	book_2
db.publication.find({}, {Publication_Date: 1}).sort({Price: -1})	book_2
db.publication.find({}, { Publisher: 1 }).sort({ Price: -1 }).limit(1)	book_2
db.book.aggregate([ { $lookup: { from: "publication", localField: "Book_ID", foreignField: "Book_ID", as: "publication_info" } }, { $unwind: "$publication_info" }, { $match: { "publication_info.Price": { $gt: 4000000 } } }, { $project: { Writer: 1 } } ])	book_2
db.publication.aggregate([ { $group: { _id: "$Publisher", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Publisher: "$_id" } } ])	book_2
db.publication.aggregate([ { $group: { _id: "$Publisher", count: { $sum: 1 } } } ])	book_2
db.publication.aggregate([ { $group: { _id: "$Publication_Date", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Publication_Date: "$_id" } } ])	book_2
db.book.aggregate([ { $group: { _id: "$Writer", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Writer: "$_id" } } ])	book_2
db.book.aggregate([ { $lookup: { from: "publication", localField: "Book_ID", foreignField: "Book_ID", as: "publications" } }, { $match: { "publications": { $size: 0 } } }, { $project: { Title: 1 } } ])	book_2
db.publication.aggregate([ { $match: { $or: [ { Price: { $gt: 10000000 } }, { Price: { $lt: 5000000 } } ] } }, { $group: { _id: "$Publisher", maxPrice: { $max: "$Price" }, minPrice: { $min: "$Price" } } }, { $match: { $and: [ { maxPrice: { $gt: 10000000 } }, { minPrice: { $lt: 5000000 } } ] } }, { $project: { Publisher: "$_id" } } ])	book_2
db.publication.find( { Publisher: { $in: ['Person', 'Wiley'] } }, { Price: 1 } )	book_2
db.actor.find({}, {Name: 1}).sort({Name: 1})	musical
db.actor.find({}, {Name: 1}).sort({Name: 1})	musical
db.actor.find({}, {Character: 1, Duration: 1})	musical
db.actor.find({}, {Character: 1, Duration: 1})	musical
db.actor.find({age: {$ne: 20}}, { Name: 1})	musical
db.actor.find({age: {$ne: 20}}, { Name: 1})	musical
db.actor.aggregate([ { $sort: { age: -1 } }, { $project: { Character: 1 } } ])	musical
db.actor.find({}, {Character: 1}).sort({age: -1})	musical
db.actor.find({}, {Duration: 1}).sort({Age: -1}).limit(1)	musical
db.actor.find({}, {Duration: 1}).sort({Age: -1}).limit(1)	musical
db.musical.find({Nominee: 'Bob Fosse'}, { Name: 1})	musical
db.musical.find({Nominee: 'Bob Fosse'}, {Name: 1})	musical
db.actor.aggregate([ { $lookup: { from: "musical", localField: "Musical_ID", foreignField: "Musical_ID", as: "musical_info" } }, { $unwind: "$musical_info" }, { $project: { "Actor Name": "$Name", "Musical Name": "$musical_info.Name" } } ])	musical
db.actor.aggregate([ { $lookup: { from: "musical", localField: "Musical_ID", foreignField: "Musical_ID", as: "musical_info" } }, { $unwind: "$musical_info" }, { $project: { actor_name: "$Name", musical_name: "$musical_info.Name" } } ])	musical
db.actor.aggregate([ { $lookup: { from: "musical", localField: "Musical_ID", foreignField: "Musical_ID", as: "musical_info" } }, { $match: { "musical_info.Name": "The Phantom of the Opera" } }, { $project: { Name: 1 } } ])	musical
db.actor.aggregate([ { $lookup: { from: "musical", localField: "Musical_ID", foreignField: "Musical_ID", as: "musical_info" } }, { $match: { "musical_info.Name": "The Phantom of the Opera" } }, { $project: { Name: 1 } } ])	musical
db.actor.aggregate([ { $lookup: { from: "musical", localField: "Musical_ID", foreignField: "Musical_ID", as: "musical_info" } }, { $unwind: "$musical_info" }, { $sort: { "musical_info.Year": -1 } }, { $project: { Name: 1 } } ])	musical
db.actor.aggregate([ { $lookup: { from: "musical", localField: "Musical_ID", foreignField: "Musical_ID", as: "musical_info" } }, { $unwind: "$musical_info" }, { $sort: { "musical_info.Year": -1 } }, { $project: { Name: 1 } } ])	musical
db.actor.aggregate([ { $group: { _id: "$Musical_ID", num_actors: { $sum: 1 } } }, { $lookup: { from: "musical", localField: "_id", foreignField: "Musical_ID", as: "musical_info" } }, { $unwind: "$musical_info" }, { $project: { Name: "$musical_info.Name", num_actors: 1 } } ])	musical
db.actor.aggregate([ { $group: { _id: "$Musical_ID", count: { $sum: 1 } } }, { $lookup: { from: "musical", localField: "_id", foreignField: "Musical_ID", as: "musical_info" } }, { $project: { Name: { $arrayElemAt: ["$musical_info.Name", 0] }, count: 1 } } ])	musical
db.musical.aggregate([ { $lookup: { from: "actor", localField: "Musical_ID", foreignField: "Musical_ID", as: "actors" } }, { $match: { "actors.3": { $exists: true } } }, { $project: { Name: 1 } } ])	musical
db.musical.aggregate([ { $lookup: { from: "actor", localField: "Musical_ID", foreignField: "Musical_ID", as: "actors" } }, { $match: { "actors.3": { $exists: true } } }, { $project: { Name: 1 } } ])	musical
db.musical.aggregate([ { $group: { _id: "$Nominee", count: { $sum: 1 } } } ])	musical
db.musical.aggregate([ { $group: { _id: "$Nominee", count: { $sum: 1 } } } ])	musical
db.musical.aggregate([ { $group: { _id: "$Nominee", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Nominee: "$_id" } } ])	musical
db.musical.aggregate([ { $group: { _id: "$Nominee", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Nominee: "$_id" } } ])	musical
db.musical.aggregate([ { $group: { _id: "$Result", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Result: "$_id" } } ])	musical
db.musical.aggregate([ { $group: { _id: "$Result", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Result: "$_id" } } ])	musical
db.musical.aggregate([ { $group: { _id: "$Nominee", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Nominee: "$_id" } } ])	musical
db.musical.aggregate([ { $group: { _id: "$Nominee", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Nominee: "$_id" } } ])	musical
db.musical.aggregate([ { $lookup: { from: "actor", localField: "Musical_ID", foreignField: "Musical_ID", as: "actor_info" } }, { $match: { "actor_info": { $size: 0 } } }, { $project: { "_id": 0, "Name": 1 } } ])	musical
db.musical.aggregate([ { $lookup: { from: "actor", localField: "Musical_ID", foreignField: "Musical_ID", as: "actor_info" } }, { $match: { "actor_info": { $size: 0 } } }, { $project: { Name: 1 } } ])	musical
db.musical.aggregate([ { $match: { Award: { $in: ['Tony Award', 'Drama Desk Award'] } } }, { $group: { _id: "$Nominee", awards: { $addToSet: "$Award" } } }, { $match: { awards: { $all: ['Tony Award', 'Drama Desk Award'] } } }, { $project: { _id: 1 } } ])	musical
db.musical.aggregate([ { $match: { Award: { $in: ["Tony Award", "Drama Desk Award"] } } }, { $group: { _id: "$Nominee", awards: { $addToSet: "$Award" } } }, { $match: { awards: { $all: ["Tony Award", "Drama Desk Award"] } } }, { $project: { _id: 1 } } ])	musical
db.user_profiles.find({name: 'Mary'}, {email: 1})	twitter_1
db.user_profiles.find({name: 'Iron Man'}, {partitionid: 1})	twitter_1
db.follows.aggregate([ { $group: { _id: "$f1", followers: { $sum: 1 } } }, { $project: { followers: 1 } } ])	twitter_1
db.user_profiles.find({name: {$regex: /Swift/}}, {name: 1, email: 1})	twitter_1
db.user_profiles.find( { email: { $in: [ /superstar/, /edu/ ] } }, { name: 1 } )	twitter_1
db.tweets.find({ text: { $regex: /intern/ } }, { text: 1 })	twitter_1
db.user_profiles.find({followers: {$gt: 1000}}, {name: 1, email: 1})	twitter_1
db.user_profiles.aggregate([ { $lookup: { from: "tweets", localField: "uid", foreignField: "uid", as: "tweets" } }, { $match: { "tweets.1": { $exists: true } } }, { $project: { name: 1 } } ])	twitter_1
db.user_profiles.aggregate([ { $match: { $or: [ { name: "Mary" }, { name: "Susan" } ] } }, { $lookup: { from: "follows", localField: "uid", foreignField: "f2", as: "followers" } }, { $unwind: "$followers" }, { $project: { f1: "$followers.f1" } } ])	twitter_1
db.user_profiles.find({}, {name: 1}).sort({followers: -1}).limit(1)	twitter_1
db.user_profiles.find({}, {name: 1, email: 1}).sort({followers: 1}).limit(1)	twitter_1
db.user_profiles.find({}, {name: 1, followers: 1}).sort({followers: -1})	twitter_1
db.user_profiles.find({}, {name: 1}).sort({followers: -1}).limit(5)	twitter_1
db.tweets.find({}, { text: 1}).sort({createdate: 1})	twitter_1
db.user_profiles.aggregate([ { $lookup: { from: "tweets", localField: "uid", foreignField: "uid", as: "tweets" } }, { $match: { "tweets.1": { $exists: true } } }, { $project: { name: 1, count: { $size: "$tweets" } } } ])	twitter_1
db.user_profiles.aggregate([ { $lookup: { from: "tweets", localField: "uid", foreignField: "uid", as: "tweets" } }, { $match: { "tweets": { $size: 0 } } }, { $group: { _id: null, averageFollowers: { $avg: "$followers" } } }, { $project: { averageFollowers: 1 } } ])	twitter_1
db.user_profiles.aggregate([ { $match: { uid: { $in: db.tweets.distinct("uid") } } }, { $group: { _id: null, avgFollowers: { $avg: "$followers" } } }, { $project: { avgFollowers: 1 } } ])	twitter_1
db.user_profiles.aggregate([ { $group: { _id: null, maxFollowers: { $max: "$followers" }, totalFollowers: { $sum: "$followers" } } } , { $project: { totalFollowers: 1 } }])	twitter_1
db.Attribute_Definitions.aggregate([ { $group: { _id: "$attribute_data_type", count: { $sum: 1 } } }, { $match: { count: { $gt: 3 } } }, { $project: { attribute_data_type: "$_id" } } ])	product_catalog
db.Attribute_Definitions.aggregate([ { $group: { _id: "$attribute_data_type", count: { $sum: 1 } } }, { $match: { count: { $gt: 3 } } }, { $project: { attribute_data_type: "$_id" } } ])	product_catalog
db.Attribute_Definitions.find( { attribute_name: 'Green' }, { attribute_data_type: 1 } )	product_catalog
db.Attribute_Definitions.find( { attribute_name: 'Green' }, { attribute_data_type: 1 } )	product_catalog
db.Catalog_Structure.find( { catalog_level_number: { $gte: 5, $lte: 10 } }, { catalog_level_name: 1, catalog_level_number: 1 } )	product_catalog
db.Catalog_Structure.find( { catalog_level_number: {$gte: 5, $lte: 10} }, { catalog_level_name: 1, catalog_level_number: 1 } )	product_catalog
db.Catalog_Contents_Additional_Attributes.aggregate([ { $group: { _id: "$attribute_value", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Catalog_Contents_Additional_Attributes", localField: "_id", foreignField: "attribute_value", as: "entriesWithMostAttributes" } }, { $unwind: "$entriesWithMostAttributes" }, { $lookup: { from: "Catalog_Contents", localField: "entriesWithMostAttributes.catalog_entry_id", foreignField: "catalog_entry_id", as: "entryNames" } }, { $unwind: "$entryNames" }, { $project: { catalog_entry_name: "$entryNames.catalog_entry_name" } } ])	product_catalog
db.Catalog_Contents.find({}, {catalog_entry_name: 1}).sort({price_in_dollars: -1}).limit(1)	product_catalog
db.Catalog_Contents.aggregate([ { $sort: { "price_in_dollars": -1 } }, { $limit: 1 }, { $project: { "_id": 0, "catalog_entry_name": 1 } } ])	product_catalog
db.Catalog_Contents.find({}, {catalog_entry_name: 1}).sort({height: -1}).limit(1)	product_catalog
db.Catalog_Contents.find({}, {catalog_entry_name: 1}).sort({height: -1}).limit(1)	product_catalog
db.Catalog_Contents.find({}, {catalog_entry_name: 1}).sort({capacity: 1}).limit(1)	product_catalog
db.Catalog_Contents.find({}, {catalog_entry_name: 1}).sort({capacity: 1}).limit(1)	product_catalog
db.Catalog_Contents.find( { product_stock_number: /^2/ }, { catalog_entry_name: 1 } )	product_catalog
db.Catalog_Contents.find( { product_stock_number: /^2/ }, { catalog_entry_name: 1 } )	product_catalog
db.Attribute_Definitions.aggregate([ { $lookup: { from: "Catalog_Contents_Additional_Attributes", localField: "attribute_id", foreignField: "attribute_id", as: "attributes" } }, { $unwind: "$attributes" }, { $match: { "attributes.attribute_value": "0" } }, { $project: { attribute_name: 1, attribute_id: 1 } } ])	product_catalog
db.Attribute_Definitions.aggregate([ { $lookup: { from: "Catalog_Contents_Additional_Attributes", localField: "attribute_id", foreignField: "attribute_id", as: "additional_attributes" } }, { $unwind: "$additional_attributes" }, { $match: { "additional_attributes.attribute_value": "0" } }, { $project: { attribute_name: 1, attribute_id: 1 } } ])	product_catalog
db.Catalog_Contents.find( { price_in_dollars: { $gt: 700 } }, { catalog_entry_name: 1, capacity: 1 } )	product_catalog
db.Catalog_Contents.find( { price_in_dollars: { $gt: 700 } }, { catalog_entry_name: 1, capacity: 1 } )	product_catalog
db.Catalog_Contents.find( { next_entry_id: { $gt: 8 } }, { catalog_entry_name: 1 } )	product_catalog
db.Catalog_Contents.find( { next_entry_id: { $gt: 8 } }, { catalog_entry_name: 1 } )	product_catalog
db.aircraft.find({}, { name: 1, distance: 1})	flight_1
db.aircraft.find({}, { name: 1, distance: 1})	flight_1
db.aircraft.find({distance: {$gt: 1000}}, { aid: 1})	flight_1
db.aircraft.find({distance: {$gt: 1000}}, { aid: 1})	flight_1
db.aircraft.find({aid: 12}, { name: 1, distance: 1})	flight_1
db.aircraft.find({aid: 12}, { name: 1, distance: 1})	flight_1
db.aircraft.aggregate([ { $group: { _id: null, minDistance: { $min: "$distance" }, avgDistance: { $avg: "$distance" }, maxDistance: { $max: "$distance" } } }, { $project: { minDistance: 1, avgDistance: 1, maxDistance: 1 } } ])	flight_1
db.aircraft.aggregate([ { $group: { _id: null, minDistance: { $min: "$distance" }, avgDistance: { $avg: "$distance" }, maxDistance: { $max: "$distance" } } }, { $project: { minDistance: 1, avgDistance: 1, maxDistance: 1 } } ])	flight_1
db.aircraft.find({}, { aid: 1, name: 1}).sort({distance: -1}).limit(1)	flight_1
db.aircraft.find({}, { aid: 1, name: 1}).sort({distance: -1}).limit(1)	flight_1
db.aircraft.find({}, {name: 1}).sort({distance: 1}).limit(3)	flight_1
db.aircraft.find({}, {name: 1}).sort({distance: 1}).limit(3)	flight_1
db.aircraft.aggregate([ { $group: { _id: null, avgDistance: { $avg: "$distance" } } }, { $lookup: { from: "aircraft", let: { averageDistance: "$avgDistance" }, pipeline: [ { $match: { $expr: { $gt: ["$distance", "$$averageDistance"] } } }, { $project: { name: 1 } } ], as: "aircrafts_above_average" } }, { $unwind: "$aircrafts_above_average" }, { $replaceRoot: { newRoot: "$aircrafts_above_average" } } ])	flight_1
db.aircraft.aggregate([ { $group: { _id: null, averageDistance: { $avg: "$distance" } } }, { $addFields: { averageDistance: "$averageDistance" } }, { $lookup: { from: "aircraft", let: { avgDist: "$averageDistance" }, pipeline: [ { $match: { $expr: { $gt: ["$distance", "$$avgDist"] } } }, { $project: { name: 1 } } ], as: "aircraftsWithMoreDistance" } }, { $unwind: "$aircraftsWithMoreDistance" }, { $replaceRoot: { newRoot: "$aircraftsWithMoreDistance" } } ])	flight_1
db.employee.find({salary: {$gt: 100000}}, { eid: 1})	flight_1
db.employee.find({salary: {$gt: 100000}}, { eid: 1})	flight_1
db.employee.find({eid: 242518965}, { name: 1, salary: 1})	flight_1
db.employee.find({eid: 242518965}, { name: 1, salary: 1})	flight_1
db.employee.aggregate([ { $group: { _id: null, avgSalary: { $avg: "$salary" }, maxSalary: { $max: "$salary" } } }, { $project: { avgSalary: 1, maxSalary: 1 } } ])	flight_1
db.employee.aggregate([ { $group: { _id: null, averageSalary: { $avg: "$salary" }, maxSalary: { $max: "$salary" } } }, { $project: { averageSalary: 1, maxSalary:1 } } ])	flight_1
db.employee.find({}, { eid: 1, name: 1}).sort({salary: -1}).limit(1)	flight_1
db.employee.find({}, { eid: 1, name: 1}).sort({salary: -1}).limit(1)	flight_1
db.employee.find({}, { name: 1}).sort({salary: 1}).limit(3)	flight_1
db.employee.find({}, {name: 1}).sort({salary: 1}).limit(3)	flight_1
db.employee.aggregate([ { $group: { _id: null, averageSalary: { $avg: "$salary" } } }, { $lookup: { from: "employee", let: { avgSalary: "$averageSalary" }, pipeline: [ { $match: { $expr: { $gt: [ "$salary", "$$avgSalary" ] } } }, { $project: { name: 1 } } ], as: "employees" } }, { $unwind: "$employees" }, { $replaceRoot: { newRoot: "$employees" } } ])	flight_1
db.employee.aggregate([ { $group: { _id: null, averageSalary: { $avg: "$salary" } } }, { $lookup: { from: "employee", let: { avgSalary: "$averageSalary" }, pipeline: [ { $match: { $expr: { $gt: [ "$salary", "$$avgSalary" ] } } }, { $project: { name: 1 } } ], as: "employees" } }, { $unwind: "$employees" }, { $replaceRoot: { newRoot: "$employees" } } ])	flight_1
db.employee.find({ name: "Mark Young" }, { eid: 1, salary: 1 })	flight_1
db.employee.find({name: "Mark Young"}, { eid: 1, salary: 1})	flight_1
db.flight.find({}, { flno: 1, origin: 1, destination: 1}).sort({origin: 1})	flight_1
db.flight.find({}, {flno: 1, origin: 1, destination: 1}).sort({origin: 1})	flight_1
db.flight.find({origin: 'Los Angeles'}, {flno: 1})	flight_1
db.flight.find({origin: 'Los Angeles'}, {flno: 1})	flight_1
db.flight.aggregate([ { $match: { destination: 'Honolulu' } }, { $project: { origin: 1 } } ])	flight_1
db.flight.find({ destination: 'Honolulu' }, { origin: 1 })	flight_1
db.flight.find({distance: {$gt: 2000}}, {flno: 1})	flight_1
db.flight.find({distance: {$gt: 2000}}, {flno: 1})	flight_1
db.flight.aggregate([ { $match: { origin: "Los Angeles", destination: "Honolulu" } }, { $group: { _id: null, averagePrice: { $avg: "$price" } } }, { $project: { averagePrice: 1 } }])	flight_1
db.flight.aggregate([ { $match: { origin: "Los Angeles", destination: "Honolulu" } }, { $group: { _id: null, averagePrice: { $avg: "$price" } } }, { $project: { averagePrice: 1 } }])	flight_1
db.flight.find({price: {$gt: 300}}, { origin: 1, destination: 1})	flight_1
db.flight.find({price: {$gt: 300}}, { origin: 1, destination: 1})	flight_1
db.flight.find({}, {flno: 1, distance: 1}).sort({price: -1}).limit(1)	flight_1
db.flight.find({}, {flno: 1, distance: 1}).sort({price: -1}).limit(1)	flight_1
db.flight.aggregate([ { $match: { origin: "Los Angeles" } }, { $group: { _id: null, avgDistance: { $avg: "$distance" }, avgPrice: { $avg: "$price" } } } , { $project: { avgDistance:1, averagePrice: 1 } }])	flight_1
db.flight.aggregate([ { $match: { origin: "Los Angeles" } }, { $group: { _id: null, avgDistance: { $avg: "$distance" }, avgPrice: { $avg: "$price" } } } , { $project: { avgDistance:1, averagePrice: 1 } }])	flight_1
db.flight.aggregate([ { $group: { _id: "$origin", count: { $sum: 1 } } } ])	flight_1
db.flight.aggregate([ { $group: { _id: "$origin", count: { $sum: 1 } } } ])	flight_1
db.flight.aggregate([ { $group: { _id: "$destination", count: { $sum: 1 } } } ])	flight_1
db.flight.aggregate([ { $group: { _id: "$destination", count: { $sum: 1 } } } ])	flight_1
db.flight.aggregate([ { $group: { _id: "$origin", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { origin: "$_id" } } ])	flight_1
db.flight.aggregate([ { $group: { _id: "$origin", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { origin: "$_id" } } ])	flight_1
db.flight.aggregate([ { $group: { _id: "$destination", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	flight_1
db.flight.aggregate([ { $group: { _id: "$destination", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	flight_1
db.flight.aggregate([ { $lookup: { from: "aircraft", localField: "aid", foreignField: "aid", as: "aircraft_info" } }, { $match: { "aircraft_info.name": "Airbus A340-300" } }, { $project: { flno: 1 } } ])	flight_1
db.flight.aggregate([ { $lookup: { from: "aircraft", localField: "aid", foreignField: "aid", as: "aircraft_info" } }, { $match: { "aircraft_info.name": "Airbus A340-300" } }, { $project: { flno: 1 } } ])	flight_1
db.flight.aggregate([ { $group: { _id: "$aid", count: { $sum: 1 } } }, { $lookup: { from: "aircraft", localField: "_id", foreignField: "aid", as: "aircraft_data" } }, { $unwind: "$aircraft_data" }, { $project: { name: "$aircraft_data.name", numberOfFlights: "$count" } } ])	flight_1
db.flight.aggregate([ { $lookup: { from: "aircraft", localField: "aid", foreignField: "aid", as: "aircraft_info" } }, { $unwind: "$aircraft_info" }, { $group: { _id: "$aircraft_info.name", count: { $sum: 1 } } }, { $project: { name: "$_id", count: 1 } } ])	flight_1
db.flight.aggregate([ { $lookup: { from: "aircraft", localField: "aid", foreignField: "aid", as: "aircraft_info" } }, { $unwind: "$aircraft_info" }, { $group: { _id: "$aircraft_info.aid", name: { $first: "$aircraft_info.name" }, count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { name: 1 } } ])	flight_1
db.aircraft.aggregate([ { $lookup: { from: "flight", localField: "aid", foreignField: "aid", as: "flights" } }, { $match: { $expr: { $gte: [{ $size: "$flights" }, 2] } } }, { $project: { name: 1 } } ])	flight_1
db.employee.aggregate([ { $lookup: { from: "certificate", localField: "eid", foreignField: "eid", as: "certificates" } }, { $match: { "certificates": { $size: 0 } } }, { $project: { eid: 1 } }])	flight_1
db.employee.aggregate([ { $lookup: { from: "certificate", localField: "eid", foreignField: "eid", as: "certificates" } }, { $match: { "certificates": { $size: 0 } } }, { $project: { eid: 1 } } ])	flight_1
db.employee.aggregate([ { $match: { name: "John Williams" } }, { $lookup: { from: "certificate", localField: "eid", foreignField: "eid", as: "certificates" } }, { $unwind: "$certificates" }, { $lookup: { from: "aircraft", localField: "certificates.aid", foreignField: "aid", as: "aircraft" } }, { $unwind: "$aircraft" }, { $project: { name: "$aircraft.name" } } ])	flight_1
db.employee.aggregate([ { $match: { name: "John Williams" } }, { $lookup: { from: "certificate", localField: "eid", foreignField: "eid", as: "certificates" } }, { $unwind: "$certificates" }, { $lookup: { from: "aircraft", localField: "certificates.aid", foreignField: "aid", as: "aircraft" } }, { $unwind: "$aircraft" }, { $project: { name: "$aircraft.name" } } ])	flight_1
db.employee.aggregate([ { $lookup: { from: "certificate", localField: "eid", foreignField: "eid", as: "certificate_info" } }, { $unwind: "$certificate_info" }, { $lookup: { from: "aircraft", localField: "certificate_info.aid", foreignField: "aid", as: "aircraft_info" } }, { $unwind: "$aircraft_info" }, { $match: { "aircraft_info.name": "Boeing 737-800" } }, { $project: { name: 1 } } ])	flight_1
db.employee.aggregate([ { $lookup: { from: "certificate", localField: "eid", foreignField: "eid", as: "certificate_info" } }, { $unwind: "$certificate_info" }, { $lookup: { from: "aircraft", localField: "certificate_info.aid", foreignField: "aid", as: "aircraft_info" } }, { $unwind: "$aircraft_info" }, { $match: { "aircraft_info.name": "Boeing 737-800" } }, { $project: { name: 1 } } ])	flight_1
db.employee.aggregate([ { $lookup: { from: "certificate", localField: "eid", foreignField: "eid", as: "certificates" } }, { $unwind: "$certificates" }, { $lookup: { from: "aircraft", localField: "certificates.aid", foreignField: "aid", as: "aircrafts" } }, { $unwind: "$aircrafts" }, { $match: { $or: [ { "aircrafts.name": "Boeing 737-800" }, { "aircrafts.name": "Airbus A340-300" } ] } }, { $group: { _id: "$eid", name: { $first: "$name" }, aircrafts: { $addToSet: "$aircrafts.name" } } }, { $match: { aircrafts: { $all: ["Boeing 737-800", "Airbus A340-300"] } } }, { $project: { name: 1 } } ])	flight_1
db.employee.aggregate([ { $lookup: { from: "certificate", localField: "eid", foreignField: "eid", as: "certificates" } }, { $lookup: { from: "aircraft", localField: "certificates.aid", foreignField: "aid", as: "aircrafts" } }, { $match: { "aircrafts.name": { $all: ["Boeing 737-800", "Airbus A340-300"] } } }, { $project: { name: 1 } } ])	flight_1
db.aircraft.aggregate([ { $lookup: { from: "certificate", localField: "aid", foreignField: "aid", as: "certificates" } }, { $match: { distance: { $gt: 5000 }, "certificates.eid": { $exists: true } } }, { $project: { name: 1} }, { $sort: { count: 1 } } ])	flight_1
db.employee.aggregate([ { $lookup: { from: "certificate", localField: "eid", foreignField: "eid", as: "certificates" } }, { $project: { name: 1, salary: 1 } }, { $sort: { numCertificates: -1 } }, { $limit: 1 } ])	flight_1
db.employee.aggregate([ { $lookup: { from: "certificate", localField: "eid", foreignField: "eid", as: "certificates" } }, { $unwind: "$certificates" }, { $group: { _id: "$eid", name: { $first: "$name" }, salary: { $first: "$salary" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { name: 1, salary: 1 } } ])	flight_1
db.Allergy_Type.find({}, { Allergy: 1, AllergyType: 1 })	allergy_1
db.Allergy_Type.find({}, { Allergy: 1, AllergyType: 1})	allergy_1
db.Allergy_Type.find({AllergyType: 'food'}, { Allergy: 1})	allergy_1
db.Allergy_Type.find({Allergy: 'Cat'}, {AllergyType: 1})	allergy_1
db.Allergy_Type.find({Allergy: 'Cat'}, {AllergyType: 1})	allergy_1
db.Allergy_Type.aggregate([ { $lookup: { from: "Has_Allergy", localField: "Allergy", foreignField: "Allergy", as: "allergy_count" } }, { $project: { "_id": 0, "AllergyType": 1, "allergy_count": { $size: "$allergy_count" } } }, { $group: { "_id": "$AllergyType", "count": { $sum: 1 } } } ])	allergy_1
db.Allergy_Type.aggregate([ { $group: { _id: "$AllergyType", count: { $sum: 1 } } }, { $project: { allergytype: "$_id", count: 1 } } ])	allergy_1
db.Allergy_Type.aggregate([ { $lookup: { from: "Has_Allergy", localField: "Allergy", foreignField: "Allergy", as: "AllergyCount" } }, { $group: { _id: "$AllergyType", count: { $sum: { $size: "$AllergyCount" } } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	allergy_1
db.Student.aggregate([ { $lookup: { from: "Has_Allergy", localField: "StuID", foreignField: "StuID", as: "student_allergies" } }, { $unwind: "$student_allergies" }, { $lookup: { from: "Allergy_Type", localField: "student_allergies.Allergy", foreignField: "Allergy", as: "allergy_type" } }, { $unwind: "$allergy_type" }, { $group: { _id: "$allergy_type.AllergyType", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { allergy_type: "$_id" } } ])	allergy_1
db.Allergy_Type.aggregate([ { $group: { _id: "$AllergyType", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { AllergyType: "$_id" } }])	allergy_1
db.Student.find({Age: {$gt: 20}}, {StuID: 1})	allergy_1
db.Student.find({Age: {$gt: 20}}, {StuID: 1})	allergy_1
db.Student.findOne({LName: 'Kim'}, {city_code: 1})	allergy_1
db.Student.findOne({LName: 'Kim'}, {city_code: 1})	allergy_1
db.Student.find({StuID: 1004}, {Advisor: 1})	allergy_1
db.Student.find({StuID: 1004}, {Advisor: 1})	allergy_1
db.Student.aggregate([ { $group: { _id: null, minAge: { $min: "$Age" }, avgAge: { $avg: "$Age" }, maxAge: { $max: "$Age" } } }, { $project: { minAge: 1, avgAge:1, maxAge:1 } } ])	allergy_1
db.Student.aggregate([ { $group: { _id: null, minAge: { $min: "$Age" }, avgAge: { $avg: "$Age" }, maxAge: { $max: "$Age" } } }, { $project: { minAge: 1, avgAge:1, maxAge:1 } } ])	allergy_1
db.Student.find({}, {LName: 1}).sort({Age: 1}).limit(1)	allergy_1
db.Student.find({}, {LName: 1}).sort({Age: 1}).limit(1)	allergy_1
db.Student.find({}, { StuID: 1 }).sort({ Age: -1 }).limit(1)	allergy_1
db.Student.find({}, {StuID: 1}).sort({Age: -1}).limit(1)	allergy_1
db.Student.aggregate([ { $group: { _id: "$Major", count: { $sum: 1 } } } ])	allergy_1
db.Student.aggregate([ { $group: { _id: "$Major", count: { $sum: 1 } } } ])	allergy_1
db.Student.aggregate([ { $group: { _id: "$Major", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Major: "$_id" } } ])	allergy_1
db.Student.aggregate([ { $group: { _id: "$Major", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { major: "$_id" } } ])	allergy_1
db.Student.aggregate([ { $group: { _id: "$Age", count: { $sum: 1 } } }, { $project: { age: "$_id", count: 1 } } ])	allergy_1
db.Student.aggregate([ { $group: { _id: "$Age", count: { $sum: 1 } } }, { $project: { age: "$_id", count: 1 } } ])	allergy_1
db.Student.aggregate([ { $group: { _id: "$Sex", averageAge: { $avg: "$Age" } } } ])	allergy_1
db.Student.aggregate([ { $group: { _id: "$Sex", averageAge: { $avg: "$Age" } } } ])	allergy_1
db.Student.aggregate([ { $group: { _id: "$city_code", count: { $sum: 1 } } } ])	allergy_1
db.Student.aggregate([ { $group: { _id: "$city_code", count: { $sum: 1 } } } ])	allergy_1
db.Student.aggregate([ { $group: { _id: "$Advisor", count: { $sum: 1 } } }, { $project: { Advisor: "$_id", count: 1 } } ])	allergy_1
db.Student.aggregate([ { $group: { _id: "$Advisor", count: { $sum: 1 } } } ])	allergy_1
db.Student.aggregate([ { $group: { _id: "$Advisor", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { Advisor: "$_id" } } ])	allergy_1
db.Student.aggregate([ { $group: { _id: "$Advisor", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Advisor: "$_id" } } ])	allergy_1
db.Has_Allergy.aggregate([ { $group: { _id: "$StuID", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { StuID: "$_id" } } ])	allergy_1
db.Has_Allergy.aggregate([ { $group: { _id: "$StuID", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { StuID: "$_id" } } ])	allergy_1
db.Student.aggregate([ { $lookup: { from: "Has_Allergy", localField: "StuID", foreignField: "StuID", as: "hasAllergy" } }, { $match: { "hasAllergy": { $size: 0 } } }, { $project: { StuID: 1 } } ])	allergy_1
db.Student.aggregate([ { $lookup: { from: "Has_Allergy", localField: "StuID", foreignField: "StuID", as: "allergies" } }, { $match: { "allergies": { $size: 0 } } }, { $project: { StuID: 1 } } ])	allergy_1
db.Has_Allergy.aggregate([ { $lookup: { from: "Allergy_Type", localField: "Allergy", foreignField: "Allergy", as: "allergy_info" } }, { $match: { "allergy_info.AllergyType": "food" } }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count:1 } } ])	allergy_1
db.Has_Allergy.aggregate([ { $lookup: { from: "Allergy_Type", localField: "Allergy", foreignField: "Allergy", as: "allergy_info" } }, { $match: { "allergy_info.AllergyType": "food" } }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count:1 } } ])	allergy_1
db.Has_Allergy.aggregate([ { $group: { _id: "$Allergy", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Allergy: "$_id" } } ])	allergy_1
db.Has_Allergy.aggregate([ { $group: { _id: "$Allergy", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Allergy: "$_id" } } ])	allergy_1
db.Has_Allergy.aggregate([ { $group: { _id: "$Allergy", count: { $sum: 1 } } }, { $project: { Allergy: "$_id", count: 1 } } ])	allergy_1
db.Has_Allergy.aggregate([ { $group: { _id: "$Allergy", count: { $sum: 1 } } } ])	allergy_1
db.Has_Allergy.aggregate([ { $lookup: { from: "Allergy_Type", localField: "Allergy", foreignField: "Allergy", as: "allergy_info" } }, { $unwind: "$allergy_info" }, { $group: { _id: "$allergy_info.AllergyType", count: { $sum: 1 } } }, { $project: { allergytype: "$_id", count: 1 } } ])	allergy_1
db.Has_Allergy.aggregate([ { $lookup: { from: "Allergy_Type", localField: "Allergy", foreignField: "Allergy", as: "allergy_info" } }, { $unwind: "$allergy_info" }, { $group: { _id: "$allergy_info.AllergyType", count: { $sum: 1 } } }, { $project: { allergytype: "$_id", count: 1 } } ])	allergy_1
db.Student.aggregate([ { $lookup: { from: "Has_Allergy", localField: "StuID", foreignField: "StuID", as: "allergies" } }, { $match: { "allergies.Allergy": { $all: ["Milk", "Cat"] } } }, { $project: { LName: 1, Age: 1 } } ])	allergy_1
db.Student.aggregate([ { $lookup: { from: "Has_Allergy", localField: "StuID", foreignField: "StuID", as: "allergies" } }, { $match: { "allergies.Allergy": { $all: ["Milk", "Cat"] } } }, { $project: { LName: 1, Age: 1 } } ])	allergy_1
db.Allergy_Type.aggregate([ { $lookup: { from: "Has_Allergy", localField: "Allergy", foreignField: "Allergy", as: "allergy_info" } }, { $unwind: "$allergy_info" }, { $lookup: { from: "Student", localField: "allergy_info.StuID", foreignField: "StuID", as: "student_info" } }, { $unwind: "$student_info" }, { $match: { "student_info.Fname": "Lisa" } }, { $project: { Allergy: 1, AllergyType: 1 } }, { $sort: { Allergy: 1 } } ])	allergy_1
db.Allergy_Type.aggregate([ { $lookup: { from: "Has_Allergy", localField: "Allergy", foreignField: "Allergy", as: "allergy_info" } }, { $unwind: "$allergy_info" }, { $lookup: { from: "Student", localField: "allergy_info.StuID", foreignField: "StuID", as: "student_info" } }, { $unwind: "$student_info" }, { $match: { "student_info.Fname": "Lisa" } }, { $project: { Allergy: 1, AllergyType: 1 } }, { $sort: { Allergy: 1 } } ])	allergy_1
db.Student.aggregate([ { $lookup: { from: "Has_Allergy", localField: "StuID", foreignField: "StuID", as: "Allergies" } }, { $match: { "Allergies.Allergy": "Milk" } }, { $lookup: { from: "Has_Allergy", localField: "StuID", foreignField: "StuID", as: "CatAllergies" } }, { $match: { "CatAllergies.Allergy": { $ne: "Cat" } } }, { $project: { Fname: 1, Sex: 1 } } ])	allergy_1
db.Student.aggregate([ { $lookup: { from: "Has_Allergy", localField: "StuID", foreignField: "StuID", as: "Allergies" } }, { $lookup: { from: "Allergy_Type", localField: "Allergies.Allergy", foreignField: "Allergy", as: "AllergyDetails" } }, { $match: { AllergyDetails: { $not: { $elemMatch: { AllergyType: "food" } } } } }, { $project: { Fname: 1, LName: 1 } } ])	allergy_1
db.Student.aggregate([ { $lookup: { from: "Has_Allergy", localField: "StuID", foreignField: "StuID", as: "Allergies" } }, { $match: { "Allergies.Allergy": { $in: ["Milk", "Cat"] } } }, { $group: { _id: { Fname: "$Fname", City_code: "$city_code" } } }, { $project: { Fname: "$_id.Fname", City_code: "$_id.City_code" } } ])	allergy_1
db.Student.aggregate([ { $lookup: { from: "Has_Allergy", localField: "StuID", foreignField: "StuID", as: "has_allergy" } }, { $unwind: "$has_allergy" }, { $match: { "has_allergy.Allergy": { $in: ["Milk", "Cat"] } } }, { $group: { _id: { fname: "$Fname", city_code: "$city_code" } } }, { $project: { fname: "$_id.fname", city_code: "$_id.city_code" } } ])	allergy_1
db.invoices.aggregate([ { $group: { _id: "$billing_country", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 5 } ])	store_1
db.invoices.aggregate([ { $group: { _id: "$billing_country", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 5 } ])	store_1
db.customers.aggregate([ { $lookup: { from: "invoices", localField: "id", foreignField: "customer_id", as: "invoices" } }, { $unwind: "$invoices" }, { $sort: { "invoices.invoice_date": -1 } }, { $limit: 5 }, { $project: { first_name: 1, last_name: 1 } } ])	store_1
db.customers.aggregate([ { $lookup: { from: "invoices", localField: "id", foreignField: "customer_id", as: "invoices" } }, { $unwind: "$invoices" }, { $sort: { "invoices.invoice_date": -1 } }, { $limit: 5 }, { $project: { first_name: 1, last_name: 1 } } ])	store_1
db.customers.aggregate([ { $lookup: { from: "invoices", localField: "id", foreignField: "customer_id", as: "orders" } }, { $project: { first_name: 1, last_name: 1, totalOrders: { $size: "$orders" } } }, { $sort: { totalOrders: -1 } }, { $limit: 10 } ])	store_1
db.customers.aggregate([ { $lookup: { from: "invoices", localField: "id", foreignField: "customer_id", as: "orders" } }, { $project: { first_name: 1, last_name: 1, totalOrders: { $size: "$orders" } } }, { $sort: { totalOrders: -1 } }, { $limit: 10 } ])	store_1
db.genres.aggregate([ { $lookup: { from: "tracks", localField: "id", foreignField: "genre_id", as: "tracks" } }, { $project: { name: 1, totalTracks: { $size: "$tracks" } } }, { $sort: { totalTracks: -1 } }, { $limit: 5 } ])	store_1
db.genres.aggregate([ { $lookup: { from: "tracks", localField: "id", foreignField: "genre_id", as: "tracks" } }, { $project: { name: 1, trackCount: { $size: "$tracks" } } }, { $sort: { trackCount: -1 } }, { $limit: 5 } ])	store_1
db.invoices.aggregate([ { $sort: { total: 1 } }, { $limit: 10 }, { $lookup: { from: "customers", localField: "customer_id", foreignField: "id", as: "customer_info" } }, { $unwind: "$customer_info" }, { $project: { first_name: "$customer_info.first_name", last_name: "$customer_info.last_name" } } ])	store_1
db.invoices.aggregate([ { $match: { billing_city: "Chicago", billing_state: "IL" } }, { $group: { _id: null, total: { $sum: "$total" } } }, { $project: { total: 1 } } ])	store_1
db.invoices.aggregate([ { $match: { billing_city: "Chicago", billing_state: "IL" } }, { $group: { _id: null, total: { $sum: "$total" } } }, { $project: { total: 1 } } ])	store_1
db.invoices.aggregate([ { $match: { billing_country: "USA" } }, { $group: { _id: "$billing_state", count: { $sum: 1 } } } ])	store_1
db.invoices.aggregate([ { $match: { billing_country: "USA" } }, { $group: { _id: "$billing_state", count: { $sum: 1 } } } ])	store_1
db.invoices.aggregate([ { $match: { billing_country: "USA" } }, { $group: { _id: "$billing_state", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	store_1
db.invoices.aggregate([ { $match: { billing_country: "USA" } }, { $group: { _id: "$billing_state", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	store_1
db.albums.aggregate([ { $lookup: { from: "artists", localField: "artist_id", foreignField: "id", as: "artist_info" } }, { $unwind: "$artist_info" }, { $match: { "artist_info.name": "Aerosmith" } }, { $project: { title: 1 } } ])	store_1
db.albums.aggregate([ { $lookup: { from: "artists", localField: "artist_id", foreignField: "id", as: "artist_info" } }, { $match: {"artist_info.name": "Aerosmith"} }, { $project: { title: 1 } } ])	store_1
db.artists.aggregate([ { $match: { name: "Billy Cobham" } }, { $lookup: { from: "albums", localField: "id", foreignField: "artist_id", as: "albums" } }, { $project: { albums: { $size: "$albums" } } } ])	store_1
db.artists.aggregate([ { $match: { name: 'Billy Cobham' } }, { $lookup: { from: "albums", localField: "id", foreignField: "artist_id", as: "albums" }}, { $project: { numberOfAlbums: { $size: "$albums" } } } ])	store_1
db.customers.find( { first_name: 'Eduardo', last_name: 'Martins' }, { company: 1 } )	store_1
db.customers.find( { first_name: 'Eduardo', last_name: 'Martins' }, { company: 1 } )	store_1
db.customers.find( { first_name: 'Astrid', last_name: 'Gruber' }, { email: 1, phone: 1 } )	store_1
db.customers.find( { first_name: 'Astrid', last_name: 'Gruber' }, { email: 1, phone: 1 } )	store_1
db.customers.find( { first_name: "Roberto", last_name: "Almeida" }, { country: 1 } )	store_1
db.customers.find( { first_name: "Roberto", last_name: "Almeida" }, { country: 1 } )	store_1
db.albums.aggregate([ { $lookup: { from: "artists", localField: "artist_id", foreignField: "id", as: "artist_info" } }, { $match: { "artist_info.name": { $regex: /Led/ } } }, { $project: { title: 1 } } ])	store_1
db.artists.aggregate([ { $match: { name: { $regex: /Led/ } } }, { $lookup: { from: "albums", localField: "id", foreignField: "artist_id", as: "album_info" } }, { $unwind: "$album_info" }, { $project: { title: "$album_info.title" } } ])	store_1
db.employees.aggregate([ { $match: { first_name: "Steve", last_name: "Johnson" } }, { $lookup: { from: "customers", localField: "id", foreignField: "support_rep_id", as: "customers" } }, { $project: { customers: { $size: "$customers" } } } ])	store_1
db.employees.aggregate([ { $lookup: { from: "employees", localField: "id", foreignField: "reports_to", as: "reporting_employees" } }, { $match: { first_name: "Nancy", last_name: "Edwards" } }, { $unwind: "$reporting_employees" }, { $project: { first_name: "$reporting_employees.first_name", last_name: "$reporting_employees.last_name" } } ])	store_1
db.employees.find( { first_name: 'Nancy', last_name: 'Edwards' }, { address: 1 } )	store_1
db.employees.find({first_name: 'Nancy', last_name: 'Edwards'}, {address: 1})	store_1
db.employees.aggregate([ { $lookup: { from: "customers", localField: "id", foreignField: "support_rep_id", as: "support_customers" } }, { $project: { first_name: 1, last_name: 1} }, { $sort: { support_customer_count: -1 } }, { $limit: 1 } ])	store_1
db.employees.aggregate([ { $lookup: { from: "customers", localField: "id", foreignField: "support_rep_id", as: "support_customers" } }, { $project: { first_name: 1, last_name: 1} }, { $sort: { support_customer_count: -1 } }, { $limit: 1 } ])	store_1
db.employees.find( { first_name: 'Nancy', last_name: 'Edwards' }, { phone: 1 } )	store_1
db.employees.find( { first_name: 'Nancy', last_name: 'Edwards' }, { phone: 1 } )	store_1
db.employees.find({}, {first_name: 1, last_name: 1}).sort({birth_date: -1}).limit(1)	store_1
db.employees.find({}, {first_name: 1, last_name: 1}).sort({birth_date: -1}).limit(1)	store_1
db.employees.find({}, {first_name: 1, last_name: 1}).sort({hire_date: 1}).limit(10)	store_1
db.employees.find({}, {first_name: 1, last_name: 1}).sort({hire_date: 1}).limit(10)	store_1
db.employees.aggregate([ { $match: { title: "IT Staff" } }, { $group: { _id: "$city", count: { $sum: 1 } } } ])	store_1
db.employees.aggregate([ { $match: { title: "IT Staff" } }, { $group: { _id: "$city", count: { $sum: 1 } } } ])	store_1
db.employees.aggregate([ { $lookup: { from: "employees", localField: "id", foreignField: "reports_to", as: "reports" } }, { $project: { first_name: 1, last_name: 1, reports_count: { $size: "$reports" } } }, { $sort: { reports_count: -1 } }, { $limit: 1 } ])	store_1
db.customers.aggregate([ { $match: { first_name: "Lucas", last_name: "Mancini" } }, { $lookup: { from: "invoices", localField: "id", foreignField: "customer_id", as: "invoices" } }, { $project: { invoices: { $size: "$invoices" } } } ])	store_1
db.customers.aggregate([ { $match: { first_name: "Lucas", last_name: "Mancini" } }, { $lookup: { from: "invoices", localField: "id", foreignField: "customer_id", as: "invoices" } }, { $project: { invoices: { $size: "$invoices" } } } ])	store_1
db.media_types.find({}, { name: 1})	store_1
db.media_types.find({}, { name: 1 })	store_1
db.playlists.find({}, {name: 1})	store_1
db.playlists.find({}, { name: 1})	store_1
db.tracks.find({name: 'Fast As a Shark'}, {composer: 1})	store_1
db.tracks.findOne({name: 'Fast As a Shark'}, {composer: 1})	store_1
db.tracks.find({name: 'Fast As a Shark'}, {milliseconds: 1})	store_1
db.tracks.findOne({name: 'Fast As a Shark'}, {milliseconds: 1})	store_1
db.playlist_tracks.aggregate([ { $lookup: { from: "playlists", localField: "playlist_id", foreignField: "id", as: "playlist_info" } }, { $unwind: "$playlist_info" }, { $group: { _id: "$playlist_id", name: { $first: "$playlist_info.name" }, count: { $sum: 1 } } }, { $match: { count: { $gt: 100 } } }, { $project: { name: 1 } } ])	store_1
db.tracks.findOne({name: 'Fast As a Shark'}, { unit_price: 1})	store_1
db.tracks.findOne({name: 'Fast As a Shark'}, { unit_price: 1})	store_1
db.editor.find({}, {Name: 1}).sort({Age: 1})	journal_committee
db.editor.aggregate([ { $lookup: { from: "journal_committee", localField: "Editor_ID", foreignField: "Editor_ID", as: "committee_info" } }, { $project: { Name: 1, Age: 1 } } ])	journal_committee
db.editor.find({Age: {$gt: 25}}, {Name: 1})	journal_committee
db.editor.find({ Age: { $in: [24, 25] } }, { Name: 1 })	journal_committee
db.editor.find({}, {Name: 1}).sort({Age: 1}).limit(1)	journal_committee
db.editor.aggregate([ { $group: { _id: "$Age", count: { $sum: 1 } } }, { $project: { Age: "$_id", count: 1 } } ])	journal_committee
db.editor.aggregate([ { $lookup: { from: "journal_committee", localField: "Editor_ID", foreignField: "Editor_ID", as: "committee_info" } }, { $unwind: "$committee_info" }, { $lookup: { from: "journal", localField: "committee_info.Journal_ID", foreignField: "Journal_ID", as: "journal_info" } }, { $unwind: "$journal_info" }, { $project: { Name: 1, Theme: "$journal_info.Theme" } } ])	journal_committee
db.journal_committee.aggregate([ { $lookup: { from: "editor", localField: "Editor_ID", foreignField: "Editor_ID", as: "editor_info" } }, { $lookup: { from: "journal", localField: "Journal_ID", foreignField: "Journal_ID", as: "journal_info" } }, { $unwind: "$editor_info" }, { $unwind: "$journal_info" }, { $project: { Name: "$editor_info.Name", Age: "$editor_info.Age", Theme: "$journal_info.Theme" } }, { $sort: { Theme: 1 } } ])	journal_committee
db.journal_committee.aggregate([ { $lookup: { from: "editor", localField: "Editor_ID", foreignField: "Editor_ID", as: "editor_info" } }, { $lookup: { from: "journal", localField: "Journal_ID", foreignField: "Journal_ID", as: "journal_info" } }, { $unwind: "$editor_info" }, { $unwind: "$journal_info" }, { $match: { "journal_info.Sales": { $gt: 3000 } } }, { $project: { Name: "$editor_info.Name" } } ])	journal_committee
db.editor.aggregate([ { $lookup: { from: "journal_committee", localField: "Editor_ID", foreignField: "Editor_ID", as: "committee_membership" } }, { $match: { "committee_membership.1": { $exists: true } } }, { $project: { Name: 1 } } ])	journal_committee
db.editor.aggregate([ { $lookup: { from: "journal_committee", localField: "Editor_ID", foreignField: "Editor_ID", as: "committee" } }, { $match: { committee: { $size: 0 } } }, { $project: { Name: 1 } } ])	journal_committee
db.journal.aggregate([ { $lookup: { from: "journal_committee", localField: "Journal_ID", foreignField: "Journal_ID", as: "committee" } }, { $match: { "committee": { $size: 0 } } }, { $project: { Date: 1, Theme: 1, Sales: 1 } } ])	journal_committee
db.journal.aggregate([ { $lookup: { from: "journal_committee", localField: "Journal_ID", foreignField: "Journal_ID", as: "committee" } }, { $match: { "committee.Work_Type": "Photo" } }, { $group: { _id: null, averageSales: { $avg: "$Sales" } } }, { $project: { averageSales: 1 } } ])	journal_committee
db.Accounts.aggregate([ { $project: { account_id: 1, customer_id: 1, account_name: 1 } } ])	customers_card_transactions
db.Accounts.find({}, {account_id: 1, customer_id: 1, account_name: 1})	customers_card_transactions
db.Accounts.find({account_name: '338'}, { other_account_details: 1})	customers_card_transactions
db.Accounts.findOne({account_name: '338'}, {other_account_details: 1})	customers_card_transactions
db.Accounts.aggregate([ { $match: { account_name: "162" } }, { $lookup: { from: "Customers", localField: "customer_id", foreignField: "customer_id", as: "customer_info" } }, { $unwind: "$customer_info" }, { $project: { customer_first_name: "$customer_info.customer_first_name", customer_last_name: "$customer_info.customer_last_name", customer_phone: "$customer_info.customer_phone" } } ])	customers_card_transactions
db.Accounts.aggregate([ { $match: { account_name: "162" } }, { $lookup: { from: "Customers", localField: "customer_id", foreignField: "customer_id", as: "customer_info" } }, { $unwind: "$customer_info" }, { $project: { customer_first_name: "$customer_info.customer_first_name", customer_last_name: "$customer_info.customer_last_name", customer_phone: "$customer_info.customer_phone" } } ])	customers_card_transactions
db.Customers.aggregate([ { $match: { customer_first_name: "Art", customer_last_name: "Turcotte" } }, { $lookup: { from: "Accounts", localField: "customer_id", foreignField: "customer_id", as: "accounts" } }, { $project: { accounts: { $size: "$accounts" } } } ])	customers_card_transactions
db.Accounts.aggregate([ { $lookup: { from: "Customers", localField: "customer_id", foreignField: "customer_id", as: "customer_info" } }, { $match: { "customer_info.customer_first_name": "Art", "customer_info.customer_last_name": "Turcotte" } }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1} } ])	customers_card_transactions
db.Accounts.aggregate([ { $group: { _id: "$customer_id", count: { $sum: 1 } } } ])	customers_card_transactions
db.Accounts.aggregate([ { $group: { _id: "$customer_id", count: { $sum: 1 } } } ])	customers_card_transactions
db.Accounts.aggregate([ { $group: { _id: "$customer_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { customer_id: "$_id", count: 1 } } ])	customers_card_transactions
db.Accounts.aggregate([ { $group: { _id: "$customer_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	customers_card_transactions
db.Accounts.aggregate([ { $group: { _id: "$customer_id", num_accounts: { $sum: 1 } } }, { $sort: { num_accounts: 1 } }, { $limit: 1 }, { $lookup: { from: "Customers", localField: "_id", foreignField: "customer_id", as: "customer_details" } }, { $unwind: "$customer_details" }, { $project: { customer_first_name: "$customer_details.customer_first_name", customer_last_name: "$customer_details.customer_last_name", customer_id: "$_id" } } ])	customers_card_transactions
db.Customers.aggregate([ { $lookup: { from: "Accounts", localField: "customer_id", foreignField: "customer_id", as: "accounts" } }, { $match: { accounts: { $size: 0 } } }, { $count: "customers_without_account" } ])	customers_card_transactions
db.Customers.aggregate([ { $lookup: { from: "Accounts", localField: "customer_id", foreignField: "customer_id", as: "accounts" } }, { $match: { accounts: { $size: 0 } } }, { $count: "customers_without_accounts" } ])	customers_card_transactions
db.Customers.aggregate([ { $lookup: { from: "Accounts", localField: "customer_id", foreignField: "customer_id", as: "accounts" } }, { $match: { "accounts": { $eq: [] } } }, { $project: { customer_first_name: 1, customer_last_name: 1 } } ])	customers_card_transactions
db.Customers.aggregate([ { $lookup: { from: "Accounts", localField: "customer_id", foreignField: "customer_id", as: "accounts" } }, { $match: { "accounts": { $size: 0 } } }, { $project: { customer_first_name: 1, customer_last_name: 1 } } ])	customers_card_transactions
db.Customers.aggregate([ { $lookup: { from: "Accounts", localField: "customer_id", foreignField: "customer_id", as: "accounts" } }, { $match: {"accounts": {$ne: []}} }, { $group: { _id: {first_name: "$customer_first_name", last_name: "$customer_last_name"} } }, { $project: { customer_first_name: "$_id.first_name", customer_last_name: "$_id.last_name" } } ])	customers_card_transactions
db.Customers.aggregate([ { $lookup: { from: "Accounts", localField: "customer_id", foreignField: "customer_id", as: "accounts" } }, { $match: { "accounts.0": { $exists: true } } }, { $project: { customer_first_name: 1, customer_last_name: 1 } } ])	customers_card_transactions
db.Accounts.aggregate([ { $group: { _id: "$customer_id" } }, { $count: "unique_customers" } ])	customers_card_transactions
db.Customers.aggregate([ { $count: "numberOfCustomers" } ])	customers_card_transactions
db.Customers.find({}, {customer_id: 1, customer_first_name: 1, customer_last_name: 1, customer_phone: 1})	customers_card_transactions
db.Customers.aggregate([ { $project: { customer_id: 1, customer_first_name: 1, customer_last_name: 1, customer_phone: 1 } } ])	customers_card_transactions
db.Customers.find({customer_first_name: 'Aniyah', customer_last_name: 'Feest'}, {customer_phone: 1, customer_email: 1})	customers_card_transactions
db.Customers.find( { customer_first_name: 'Aniyah', customer_last_name: 'Feest' }, { customer_phone: 1, customer_email: 1 } )	customers_card_transactions
db.Customers_Cards.find({}, {card_id: 1, customer_id: 1, card_type_code: 1, card_number: 1})	customers_card_transactions
db.Customers_Cards.find({}, {card_id: 1, customer_id: 1, card_type_code: 1, card_number: 1})	customers_card_transactions
db.Customers_Cards.aggregate([ { $match: { card_number: "4560596484842" } }, { $lookup: { from: "Customers", localField: "customer_id", foreignField: "customer_id", as: "customer_info" } }, { $unwind: "$customer_info" }, { $project: { customer_first_name: "$customer_info.customer_first_name", customer_last_name: "$customer_info.customer_last_name", customer_phone: "$customer_info.customer_phone" } } ])	customers_card_transactions
db.Customers_Cards.aggregate([ { $match: { card_number: "4560596484842" } }, { $lookup: { from: "Customers", localField: "customer_id", foreignField: "customer_id", as: "customer_info" } }, { $unwind: "$customer_info" }, { $project: { customer_first_name: "$customer_info.customer_first_name", customer_last_name: "$customer_info.customer_last_name", customer_phone: "$customer_info.customer_phone" } } ])	customers_card_transactions
db.Customers.aggregate([ { $match: { $and: [ { customer_first_name: 'Art' }, { customer_last_name: 'Turcotte' } ] } }, { $lookup: { from: "Customers_Cards", localField: "customer_id", foreignField: "customer_id", as: "cards" } }, { $project: { totalCards: { $size: "$cards" } } } ])	customers_card_transactions
db.Customers.aggregate([ { $match: { customer_first_name: "Blanche", customer_last_name: "Huels" } }, { $lookup: { from: "Customers_Cards", localField: "customer_id", foreignField: "customer_id", as: "cards" } }, { $unwind: "$cards" }, { $match: { "cards.card_type_code": "Credit" } }, { $count: "credit_card_count" } ])	customers_card_transactions
db.Customers_Cards.aggregate([ { $lookup: { from: "Customers", localField: "customer_id", foreignField: "customer_id", as: "customer_info" } }, { $match: { "customer_info.customer_first_name": "Blanche", "customer_info.customer_last_name": "Huels", "card_type_code": "Credit" } }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1} } ])	customers_card_transactions
db.Customers_Cards.aggregate([ { $group: { _id: "$customer_id", count: { $sum: 1 } } } ])	customers_card_transactions
db.Customers_Cards.aggregate([ { $group: { _id: "$customer_id", count: { $sum: 1 } } } ])	customers_card_transactions
db.Customers_Cards.aggregate([ { $group: { _id: "$customer_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	customers_card_transactions
db.Customers_Cards.aggregate([ { $group: { _id: "$customer_id", cardCount: { $sum: 1 } } }, { $sort: { cardCount: -1 } }, { $limit: 1 }, { $project: { customer_id: "$_id", numberOfCards: "$cardCount" } } ])	customers_card_transactions
db.Customers_Cards.aggregate([ { $lookup: { from: "Customers", localField: "customer_id", foreignField: "customer_id", as: "customer_info" } }, { $unwind: "$customer_info" }, { $group: { _id: "$customer_id", firstName: { $first: "$customer_info.customer_first_name" }, lastName: { $first: "$customer_info.customer_last_name" }, count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { _id: 1, firstName: 1, lastName: 1 } } ])	customers_card_transactions
db.Customers_Cards.aggregate([ { $lookup: { from: "Customers", localField: "customer_id", foreignField: "customer_id", as: "customer_info" } }, { $unwind: "$customer_info" }, { $group: { _id: "$customer_id", firstName: { $first: "$customer_info.customer_first_name" }, lastName: { $first: "$customer_info.customer_last_name" }, count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { customer_id: "$_id", customer_first_name: "$firstName", customer_last_name: "$lastName" } } ])	customers_card_transactions
db.Customers_Cards.aggregate([ { $group: { _id: "$card_type_code", count: { $sum: 1 } } }, { $project: { card_type_code: "$_id", count: 1 } } ])	customers_card_transactions
db.Customers_Cards.aggregate([ { $group: { _id: "$card_type_code", count: { $sum: 1 } } } ])	customers_card_transactions
db.Customers_Cards.aggregate([ { $group: { _id: "$card_type_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { card_type_code: "$_id"} } ])	customers_card_transactions
db.Customers_Cards.aggregate([ { $group: { _id: "$card_type_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	customers_card_transactions
db.Customers_Cards.aggregate([ { $group: { _id: "$card_type_code", count: { $sum: 1 } } }, { $match: { count: { $gte: 5 } } }, { $project: { card_type_code: "$_id" } } ])	customers_card_transactions
db.Customers_Cards.aggregate([ { $group: { _id: "$card_type_code", count: { $sum: 1 } } }, { $match: { count: { $gte: 5 } } }, { $project: { card_type_code: "$_id" } } ])	customers_card_transactions
db.Customers_Cards.aggregate([ { $group: { _id: "$card_type_code", count: { $addToSet: "$customer_id" } } }, { $project: { card_type_code: "$_id", count: { $size: "$count" } } } ])	customers_card_transactions
db.Customers_Cards.aggregate([ { $group: { _id: "$card_type_code", uniqueCustomers: { $addToSet: "$customer_id" } } }, { $project: { card_type_code: "$_id", uniqueCustomersCount: { $size: "$uniqueCustomers" } } } ])	customers_card_transactions
db.Customers.aggregate([ { $lookup: { from: "Customers_Cards", localField: "customer_id", foreignField: "customer_id", as: "cards" } }, { $match: { "cards.card_type_code": { $ne: "Credit" } } }, { $project: { customer_id: 1, customer_first_name: 1 } } ])	customers_card_transactions
db.Customers.aggregate([ { $lookup: { from: "Customers_Cards", localField: "customer_id", foreignField: "customer_id", as: "cards" } }, { $match: { "cards.card_type_code": { $ne: "Credit" } } }, { $project: { customer_id: 1, customer_first_name: 1 } } ])	customers_card_transactions
db.Financial_Transactions.aggregate([ { $group: { _id: "$transaction_type" } }, { $count: "distinct_transaction_types" } ])	customers_card_transactions
db.Financial_Transactions.aggregate([ { $group: { _id: null, average: { $avg: "$transaction_amount" }, total: { $sum: "$transaction_amount" } } }, { $project: { average: 1, total:1 } }])	customers_card_transactions
db.Financial_Transactions.aggregate([ { $group: { _id: null, average: { $avg: "$transaction_amount" }, total: { $sum: "$transaction_amount" } } }, { $project: { average: 1, total:1 } }])	customers_card_transactions
db.Financial_Transactions.aggregate([ { $lookup: { from: "Customers_Cards", localField: "card_id", foreignField: "card_id", as: "card_info" } }, { $unwind: "$card_info" }, { $group: { _id: "$card_info.card_type_code", count: { $sum: 1 } } }, { $project: { card_type_code: "$_id", count: 1 } } ])	customers_card_transactions
db.Financial_Transactions.aggregate([ { $lookup: { from: "Customers_Cards", localField: "card_id", foreignField: "card_id", as: "card_info" } }, { $unwind: "$card_info" }, { $group: { _id: "$card_info.card_type_code", count: { $sum: 1 } } }, { $project: { card_type_code: "$_id", count: 1 } } ])	customers_card_transactions
db.Financial_Transactions.aggregate([ { $group: { _id: "$transaction_type", count: { $sum: 1 } } }, { $project: { transaction_type: "$_id", count: 1 } } ])	customers_card_transactions
db.Financial_Transactions.aggregate([ { $group: { _id: "$transaction_type", count: { $sum: 1 } } } ])	customers_card_transactions
db.Financial_Transactions.aggregate([ { $group: { _id: "$transaction_type", totalAmount: { $sum: "$transaction_amount" } } }, { $sort: { totalAmount: -1 } }, { $limit: 1 }, { $project: { transaction_type: "$_id" } } ])	customers_card_transactions
db.Financial_Transactions.aggregate([ { $group: { _id: "$transaction_type", totalAmount: { $sum: "$transaction_amount" } } }, { $sort: { totalAmount: -1 } }, { $limit: 1 }, { $project: { transaction_type: "$_id" } } ])	customers_card_transactions
db.Financial_Transactions.aggregate([ { $group: { _id: "$account_id", count: { $sum: 1 } } } ])	customers_card_transactions
db.Financial_Transactions.aggregate([ { $group: { _id: "$account_id", count: { $sum: 1 } } } ])	customers_card_transactions
db.track.find({}, { Name: 1, Location: 1 })	race_track
db.track.aggregate([ { $project: { Name: 1, Location: 1 } } ])	race_track
db.track.find({ Year_Opened: { $gt: 2000 }}, { Name: 1, Seating: 1 }).sort({ Seating: 1 })	race_track
db.track.find({ Year_Opened: { $gt: 2000 } }, { Name: 1, Seating: 1 }).sort({ Seating: 1 })	race_track
db.track.find({}, { Name: 1, Location: 1, Seating: 1 }).sort({ Year_Opened: -1 }).limit(1)	race_track
db.track.find({}, { Name: 1, Location: 1, Seating: 1 }).sort({ Year_Opened: -1 }).limit(1)	race_track
db.track.aggregate([ { $group: { _id: null, minSeating: { $min: "$Seating" }, maxSeating: { $max: "$Seating" }, avgSeating: { $avg: "$Seating" } } }, { $project: { minSeating:1, maxSeating: 1, avgSeating:1 } } ])	race_track
db.track.aggregate([ { $group: { _id: null, minSeating: { $min: "$Seating" }, maxSeating: { $max: "$Seating" }, avgSeating: { $avg: "$Seating" } } }, { $project: { minSeating:1, maxSeating: 1, avgSeating:1 } } ])	race_track
db.race.find({}, { Name: 1, Class: 1, Date: 1 })	race_track
db.race.aggregate([ { $project: { Name: 1, Class: 1, Date: 1 } } ])	race_track
db.race.aggregate([ { $group: { _id: "$Class", count: { $sum: 1 } } }, { $project: { Class: "$_id", NumberOfRaces: "$count" } } ])	race_track
db.race.aggregate([ { $group: { _id: "$Class", count: { $sum: 1 } } } ])	race_track
db.race.aggregate([ { $group: { _id: "$Class", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Class: "$_id" } } ])	race_track
db.race.aggregate([ { $group: { _id: "$Class", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Class: "$_id" } } ])	race_track
db.race.aggregate([ { $group: { _id: "$Class", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Class: "$_id" } } ])	race_track
db.race.aggregate([ { $group: { _id: "$Class", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Class: "$_id" } } ])	race_track
db.member.aggregate([ { $group: { _id: "$Address", count: { $sum: 1 } } } ])	coffee_shop
db.member.find( { Address: { $in: ['Harford', 'Waterbury'] }}, { Name: 1 } )	coffee_shop
db.member.find( { $or: [ { Membership_card: 'Black' }, { Age: { $lt: 30 } } ] }, { Member_ID: 1, Name: 1 } )	coffee_shop
db.member.find({}, { Time_of_purchase: 1, Age: 1, Address: 1 }).sort({ Time_of_purchase: 1 })	coffee_shop
db.member.aggregate([ { $group: { _id: "$Membership_card", count: { $sum: 1 } } }, { $match: { count: { $gt: 5 } } }, { $project: { Membership_card: "$_id" } } ])	coffee_shop
db.member.aggregate([ { $match: { $or: [{ Address: 'Hartford' }, { Address: 'Waterbury' }] } }, { $group: { _id: "$Membership_card", Hartford: { $sum: { $cond: [{ $eq: ["$Address", "Hartford"] }, 1, 0] } }, Waterbury: { $sum: { $cond: [{ $eq: ["$Address", "Waterbury"] }, 1, 0] } } } }, { $match: { Hartford: { $gt: 0 }, Waterbury: { $gt: 0 } } }, { $project: { _id: 1 } } ])	coffee_shop
db.member.aggregate([ { $match: { Address: { $ne: "Hartford" } } }, { $count: "TotalMembersNotInHartford" } ])	coffee_shop
db.member.aggregate([ { $group: { _id: "$Address", hasBlackCard: { $max: { $cond: [{ $eq: ["$Membership_card", "Black"] }, 1, 0] } } } }, { $match: { hasBlackCard: 0 } }, { $project: { _id: 1 } } ])	coffee_shop
db.shop.aggregate([ { $project: { Address: 1 } }, { $sort: { Open_Year: 1 } } ])	coffee_shop
db.shop.aggregate([ { $group: { _id: null, avgScore: { $avg: "$Score" } } }, { $lookup: { from: "shop", let: { averageScore: "$avgScore" }, pipeline: [ { $match: { $expr: { $lt: ["$Score", "$$averageScore"] } } }, { $project: { Shop_ID: 1, Address: 1 } } ], as: "belowAvgShops" }}, { $unwind: "$belowAvgShops" }, { $replaceRoot: { newRoot: "$belowAvgShops" } } ])	coffee_shop
db.shop.aggregate([ { $lookup: { from: "happy_hour", localField: "Shop_ID", foreignField: "Shop_ID", as: "happy_hours" } }, { $match: { "happy_hours": { $size: 0 } } }, { $project: { Address: 1, Num_of_staff: 1 } } ])	coffee_shop
db.shop.aggregate([ { $lookup: { from: "happy_hour", localField: "Shop_ID", foreignField: "Shop_ID", as: "happy_hour_info" } }, { $unwind: "$happy_hour_info" }, { $match: { "happy_hour_info.Month": "May" } }, { $project: { Shop_ID: 1, Address: 1 } } ])	coffee_shop
db.happy_hour.aggregate([ { $group: { _id: "$Shop_ID", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	coffee_shop
db.happy_hour.aggregate([ { $group: { _id: "$Month", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	coffee_shop
db.happy_hour.aggregate([ { $group: { _id: "$Month", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Month: "$_id" } } ])	coffee_shop
db.Employee.find({City: "Calgary"}, {FirstName: 1, LastName: 1})	chinook_1
db.Employee.find({City: "Calgary"}, {FirstName: 1, LastName: 1})	chinook_1
db.Album.aggregate([ { $lookup: { from: "Artist", localField: "ArtistId", foreignField: "ArtistId", as: "artist_info" } }, { $match: { "artist_info.Name": "AC/DC" } }, { $project: { Title: 1 } } ])	chinook_1
db.Album.aggregate([ { $lookup: { from: "Artist", localField: "ArtistId", foreignField: "ArtistId", as: "artist_info" } }, { $unwind: "$artist_info" }, { $match: { "artist_info.Name": "AC/DC" } }, { $project: { Title: 1 } } ])	chinook_1
db.Album.aggregate([ { $lookup: { from: "Artist", localField: "ArtistId", foreignField: "ArtistId", as: "artist_info" } }, { $match: { "artist_info.Name": "Metallica" } }, { $count: "total" } ])	chinook_1
db.Album.aggregate([ { $lookup: { from: "Artist", localField: "ArtistId", foreignField: "ArtistId", as: "artist_info" } }, { $match: { "artist_info.Name": "Metallica" } }, { $count: "total" } ])	chinook_1
db.Album.aggregate([ { $lookup: { from: "Artist", localField: "ArtistId", foreignField: "ArtistId", as: "artist_info" } }, { $unwind: "$artist_info" }, { $group: { _id: "$artist_info.Name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { name:"$_id" } } ])	chinook_1
db.Album.aggregate([ { $lookup: { from: "Artist", localField: "ArtistId", foreignField: "ArtistId", as: "artist_info" } }, { $unwind: "$artist_info" }, { $group: { _id: "$artist_info.Name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Name: "$_id" } } ])	chinook_1
db.Track.aggregate([ { $group: { _id: null, maxDuration: { $max: "$Milliseconds" }, minDuration: { $min: "$Milliseconds" } } }, { $project: { maxDuration: 1, minDuration: 1 } } ])	chinook_1
db.Track.aggregate([ { $group: { _id: null, maxDuration: { $max: "$Milliseconds" }, minDuration: { $min: "$Milliseconds" } } }, { $project: { maxDuration: 1, minDuration: 1 } } ])	chinook_1
db.Genre.aggregate([ { $lookup: { from: "Track", localField: "GenreId", foreignField: "GenreId", as: "tracks" } }, { $project: { Name: 1, trackCount: { $size: "$tracks" } } }, { $sort: { trackCount: -1 } }, { $limit: 1 }	chinook_1
db.MediaType.aggregate([ { $lookup: { from: "Track", localField: "MediaTypeId", foreignField: "MediaTypeId", as: "tracks" } }, { $project: { Name: 1} }, { $sort: { trackCount: 1 } }, { $limit: 1 } ])	chinook_1
db.MediaType.aggregate([ { $lookup: { from: "Track", localField: "MediaTypeId", foreignField: "MediaTypeId", as: "tracks" } }, { $project: { Name: 1} }, { $sort: { trackCount: 1 } }, { $limit: 1 } ])	chinook_1
db.Genre.aggregate([ { $match: { Name: 'Rock' } }, { $lookup: { from: "Track", localField: "GenreId", foreignField: "GenreId", as: "Tracks" } }, { $unwind: "$Tracks" }, { $count: "NumberOfRockTracks" } ])	chinook_1
db.Track.aggregate([ { $lookup: { from: "Genre", localField: "GenreId", foreignField: "GenreId", as: "genre_info" } }, { $match: { "genre_info.Name": "Rock" } }, { $count: "rock_tracks" } ])	chinook_1
db.Customer.findOne({Email: 'luisg@embraer.com.br'}, {FirstName: 1, LastName: 1})	chinook_1
db.Customer.findOne({Email: 'luisg@embraer.com.br'}, {FirstName: 1, LastName: 1})	chinook_1
db.Customer.aggregate([ { $match: { FirstName: "Leonie" } }, { $lookup: { from: "Employee", localField: "SupportRepId", foreignField: "EmployeeId", as: "employee" } }, { $unwind: "$employee" }, { $project: { FirstName: "$employee.FirstName", LastName: "$employee.LastName" } } ])	chinook_1
db.Customer.aggregate([ { $match: { PostalCode: "70174" } }, { $lookup: { from: "Employee", localField: "SupportRepId", foreignField: "EmployeeId", as: "employee" } }, { $unwind: "$employee" }, { $project: { City: "$employee.City" } } ])	chinook_1
db.Customer.aggregate([ { $match: { PostalCode: "70174" } }, { $lookup: { from: "Employee", localField: "SupportRepId", foreignField: "EmployeeId", as: "employee" } }, { $unwind: "$employee" }, { $project: { City: "$employee.City" } } ])	chinook_1
db.Employee.aggregate([ { $group: { _id: "$City" } }, { $count: "distinct_cities_count" } ])	chinook_1
db.Customer.aggregate([ { $lookup: { from: "Invoice", localField: "CustomerId", foreignField: "CustomerId", as: "invoices" } }, { $match: { Country: "Brazil", "invoices.0": { $exists: true } } }, { $group: { _id: "$FirstName" } }, { $project: { FirstName: "$_id" } } ])	chinook_1
db.Customer.aggregate([ { $lookup: { from: "Invoice", localField: "CustomerId", foreignField: "CustomerId", as: "invoices" } }, { $match: { Country: "Brazil", invoices: { $ne: [] } } }, { $group: { _id: "$FirstName" } }, { $project: { FirstName: "$_id" } } ])	chinook_1
db.Customer.aggregate([ { $match: { Country: "Germany" } }, { $lookup: { from: "Invoice", localField: "CustomerId", foreignField: "CustomerId", as: "invoices" } }, { $match: { "invoices.0": { $exists: true } } }, { $project: { Address: 1 } } ])	chinook_1
db.Customer.aggregate([ { $match: { Country: "Germany" } }, { $lookup: { from: "Invoice", localField: "CustomerId", foreignField: "CustomerId", as: "invoices" } }, { $match: { invoices: { $ne: [] } } }, { $project: { Address: 1 } } ])	chinook_1
db.Employee.find({}, {Phone: 1})	chinook_1
db.Employee.find({}, {Phone: 1})	chinook_1
db.MediaType.aggregate([ { $match: { Name: "AAC audio file" } }, { $lookup: { from: "Track", localField: "MediaTypeId", foreignField: "MediaTypeId", as: "tracks" } }, { $project: { trackCount: { $size: "$tracks" } } } ])	chinook_1
db.MediaType.aggregate([ { $match: { Name: "AAC audio file" } }, { $lookup: { from: "Track", localField: "MediaTypeId", foreignField: "MediaTypeId", as: "tracks" } }, { $project: { count: { $size: "$tracks" } } } ])	chinook_1
db.Track.aggregate([ { $lookup: { from: "Genre", localField: "GenreId", foreignField: "GenreId", as: "genre_info" } }, { $match: { "genre_info.Name": { $in: ["Latin", "Pop"] } } }, { $group: { _id: null, averageDuration: { $avg: "$Milliseconds" } } }, { $project: { averageDuration:1 } } ])	chinook_1
db.Genre.aggregate([ { $match: { $or: [ { Name: "Latin" }, { Name: "Pop" } ] } }, { $lookup: { from: "Track", localField: "GenreId", foreignField: "GenreId", as: "tracks" } }, { $unwind: "$tracks" }, { $group: { _id: null, averageMilliseconds: { $avg: "$tracks.Milliseconds" } } }, { $project: { averageMilliseconds:1 } } ])	chinook_1
db.Genre.aggregate([ { $match: { Name: 'Pop' } }, { $lookup: { from: "Track", localField: "GenreId", foreignField: "GenreId", as: "Tracks" } }, { $unwind: "$Tracks" }, { $group: { _id: null, LongestTrackDuration: { $max: "$Tracks.Milliseconds" }, ShortestTrackDuration: { $min: "$Tracks.Milliseconds" } } }, { $project: { LongestTrackDuration: 1, ShortestTrackDuration: 1 } } ])	chinook_1
db.Genre.aggregate([ { $match: { Name: "Pop" } }, { $lookup: { from: "Track", localField: "GenreId", foreignField: "GenreId", as: "pop_tracks" } }, { $unwind: "$pop_tracks" }, { $group: { _id: null, max_milliseconds: { $max: "$pop_tracks.Milliseconds" }, min_milliseconds: { $min: "$pop_tracks.Milliseconds" } } }, { $project: { max_milliseconds:1, min_milliseconds:1 } } ])	chinook_1
db.Artist.aggregate([ { $lookup: { from: "Album", localField: "ArtistId", foreignField: "ArtistId", as: "Albums" } }, { $match: { Albums: { $size: 0 } } }, { $count: "NumberOfArtistsWithoutAlbums" } ])	chinook_1
db.Album.aggregate([ { $lookup: { from: "Track", localField: "AlbumId", foreignField: "AlbumId", as: "tracks" } }, { $unwind: "$tracks" }, { $lookup: { from: "Genre", localField: "tracks.GenreId", foreignField: "GenreId", as: "genres" } }, { $unwind: "$genres" }, { $group: { _id: "$AlbumId", Title: { $first: "$Title" }, Genres: { $addToSet: "$genres.Name" } } }, { $match: { Genres: { $all: ["Reggae", "Rock"] } } }, { $project: { Title: 1 } } ])	chinook_1
db.Available_Policies.find({}, { Customer_Phone: 1 })	insurance_fnol
db.Available_Policies.find({ policy_type_code: 'Life Insurance' }, { Customer_Phone: 1 })	insurance_fnol
db.Available_Policies.find({policy_type_code: 'Life Insurance'}, {Customer_Phone: 1})	insurance_fnol
db.Available_Policies.aggregate([ { $group: { _id: "$policy_type_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	insurance_fnol
db.Available_Policies.aggregate([ { $group: { _id: "$policy_type_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Available_Policies", localField: "_id", foreignField: "policy_type_code", as: "popular_policies" } }, { $unwind: "$popular_policies" }, { $replaceRoot: { newRoot: "$popular_policies" } }, { $project: { Customer_Phone: 1 } } ])	insurance_fnol
db.First_Notification_of_Loss.aggregate([ { $lookup: { from: "Services", localField: "Service_ID", foreignField: "Service_ID", as: "service_info" } }, { $unwind: "$service_info" }, { $group: { _id: "$service_info.Service_name", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { service_name: "$_id" } } ])	insurance_fnol
db.First_Notification_of_Loss.aggregate([ { $lookup: { from: "Services", localField: "Service_ID", foreignField: "Service_ID", as: "service_info" } }, { $unwind: "$service_info" }, { $group: { _id: "$service_info.Service_name", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { service_name: "$_id" } } ])	insurance_fnol
db.Claims.aggregate([ { $lookup: { from: "Settlements", localField: "Claim_ID", foreignField: "Claim_ID", as: "settlements" } }, { $unwind: "$settlements" }, { $group: { _id: "$Claim_ID", Effective_Date: { $first: "$Effective_Date" }, totalSettlement: { $sum: "$settlements.Settlement_Amount" } } }, { $sort: { totalSettlement: -1 } }, { $limit: 1 }, { $project: { Effective_Date: 1 } } ])	insurance_fnol
db.Claims.aggregate([ { $lookup: { from: "Settlements", localField: "Claim_ID", foreignField: "Claim_ID", as: "settlements" } }, { $unwind: "$settlements" }, { $group: { _id: "$Claim_ID", Effective_Date: { $first: "$Effective_Date" }, totalSettlementAmount: { $sum: "$settlements.Settlement_Amount" } } }, { $sort: { totalSettlementAmount: -1 } }, { $limit: 1 }, { $project: { Effective_Date: 1 } } ])	insurance_fnol
db.Customers.aggregate([ { $match: { Customer_name: "Dayana Robel" } }, { $lookup: { from: "Customers_Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "policies" } }, { $project: { policies: { $size: "$policies" } } } ])	insurance_fnol
db.Customers.aggregate([ { $match: { Customer_name: "Dayana Robel" } }, { $lookup: { from: "Customers_Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "policies" } }, { $unwind: "$policies" }, { $group: { _id: null, totalPolicies: { $sum: 1 } } }, { $project: { totalPolicies:1 } } ])	insurance_fnol
db.Customers.aggregate([ { $lookup: { from: "Customers_Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "policies" }}, { $unwind: "$policies" }, { $group: { _id: "$Customer_name", policyCount: { $sum: 1 } }}, { $sort: { policyCount: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	insurance_fnol
db.Customers.aggregate([ { $lookup: { from: "Customers_Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "policies" } }, { $unwind: "$policies" }, { $group: { _id: "$Customer_name", policyCount: { $sum: 1 } } }, { $sort: { policyCount: -1 } }, { $limit: 1 }, { $project: { Customer_name: "$_id" } } ])	insurance_fnol
db.Customers.aggregate([ { $match: { Customer_name: "Dayana Robel" } }, { $lookup: { from: "Customers_Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "customer_policies" } }, { $unwind: "$customer_policies" }, { $lookup: { from: "Available_Policies", localField: "customer_policies.Policy_ID", foreignField: "Policy_ID", as: "available_policies" } }, { $unwind: "$available_policies" }, { $group: { _id: "$available_policies.policy_type_code" } }, { $project: { policy_type_code: "$_id" } } ])	insurance_fnol
db.Customers.aggregate([ { $match: { Customer_name: "Dayana Robel" } }, { $lookup: { from: "Customers_Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "customer_policies" } }, { $unwind: "$customer_policies" }, { $lookup: { from: "Available_Policies", localField: "customer_policies.Policy_ID", foreignField: "Policy_ID", as: "available_policies" } }, { $unwind: "$available_policies" }, { $group: { _id: "$available_policies.policy_type_code" } }, { $project: { policy_type_code: "$_id" } } ])	insurance_fnol
db.Customers.aggregate([ { $lookup: { from: "Customers_Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "policies" } }, { $addFields: { policiesCount: { $size: "$policies" } } }, { $sort: { policiesCount: -1 } }, { $limit: 1 }, { $lookup: { from: "Available_Policies", localField: "policies.Policy_ID", foreignField: "Policy_ID", as: "policy_types" } }, { $unwind: "$policy_types" }, { $group: { _id: "$policy_types.policy_type_code" } }, { $project: { policy_type_code: "$_id" } } ])	insurance_fnol
db.Services.find({}, { Service_name: 1 }).sort({ Service_name: 1 })	insurance_fnol
db.Services.find({}, { Service_name: 1 }).sort({ Service_name: 1 })	insurance_fnol
db.Customers.aggregate([ { $lookup: { from: "First_Notification_of_Loss", localField: "Customer_ID", foreignField: "Customer_ID", as: "fnol" } }, { $match: { "fnol": { $size: 0 } } }, { $project: { Customer_name: 1 } } ])	insurance_fnol
db.Customers.aggregate([ { $lookup: { from: "First_Notification_of_Loss", localField: "Customer_ID", foreignField: "Customer_ID", as: "fnol" } }, { $match: { "fnol": { $size: 0 } } }, { $project: { Customer_name: 1 } } ])	insurance_fnol
db.Customers.aggregate([ { $lookup: { from: "First_Notification_of_Loss", localField: "Customer_ID", foreignField: "Customer_ID", as: "fnol" } }, { $unwind: "$fnol" }, { $lookup: { from: "Services", localField: "fnol.Service_ID", foreignField: "Service_ID", as: "service" } }, { $unwind: "$service" }, { $match: { "service.Service_name": { $in: ["Close a policy", "Upgrade a policy"] } } }, { $project: { Customer_name: 1 } } ])	insurance_fnol
db.Customers.aggregate([ { $lookup: { from: "First_Notification_of_Loss", localField: "Customer_ID", foreignField: "Customer_ID", as: "fnol" } }, { $unwind: "$fnol" }, { $lookup: { from: "Services", localField: "fnol.Service_ID", foreignField: "Service_ID", as: "service" } }, { $unwind: "$service" }, { $match: { "service.Service_name": { $in: ["Close a policy", "Upgrade a policy"] } } }, { $project: { Customer_name: 1 } } ])	insurance_fnol
db.Customers.find({ Customer_name: /Diana/ }, { Customer_ID: 1 })	insurance_fnol
db.Customers.find({Customer_name: {$regex: /Diana/}}, {Customer_ID: 1})	insurance_fnol
db.Settlements.aggregate([ { $group: { _id: null, MaxSettlementAmount: { $max: "$Settlement_Amount" }, MinSettlementAmount: { $min: "$Settlement_Amount" } } }, { $project: { MaxSettlementAmount: 1, MinSettlementAmount: 1 } } ])	insurance_fnol
db.Settlements.aggregate([ { $group: { _id: null, maxSettlementAmount: { $max: "$Settlement_Amount" }, minSettlementAmount: { $min: "$Settlement_Amount" } } }, { $project: { maxSettlementAmount: 1, minSettlementAmount: 1 } } ])	insurance_fnol
db.Customers.find({}, { Customer_ID: 1, Customer_name: 1}).sort({Customer_ID: 1})	insurance_fnol
db.Customers.find({}, { Customer_ID: 1, Customer_name: 1}).sort({Customer_ID: 1})	insurance_fnol
db.Customers.aggregate([ { $match: { Customer_name: { $regex: /Diana/ } } }, { $lookup: { from: "Customers_Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "customer_policies" } }, { $unwind: "$customer_policies" }, { $project: { Date_Opened: "$customer_policies.Date_Opened", Date_Closed: "$customer_policies.Date_Closed" } } ])	insurance_fnol
db.Customers.aggregate([ { $match: { Customer_name: { $regex: /Diana/, $options: "i" } } }, { $lookup: { from: "Customers_Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "customer_policies" } }, { $unwind: "$customer_policies" }, { $project: { Date_Opened: "$customer_policies.Date_Opened", Date_Closed: "$customer_policies.Date_Closed" } } ])	insurance_fnol
db.enzyme.find({}, { name: 1}).sort({name: -1})	medicine_enzyme_interaction
db.enzyme.find({}, { name: 1}).sort({name: -1})	medicine_enzyme_interaction
db.enzyme.find( {}, { name: 1, Location: 1 } )	medicine_enzyme_interaction
db.enzyme.find({}, { name: 1, Location: 1 })	medicine_enzyme_interaction
db.enzyme.aggregate([ { $group: { _id: null, maxOMIM: { $max: "$OMIM" } } }, { $project: { maxOMIM: 1 } } ])	medicine_enzyme_interaction
db.enzyme.aggregate([ { $group: { _id: null, maxOMIM: { $max: "$OMIM" } } }, { $project: { maxOMIM: 1 } } ])	medicine_enzyme_interaction
db.enzyme.find({ Location: "Cytosol" }, { Product: 1, Chromosome: 1, Porphyria: 1 })	medicine_enzyme_interaction
db.enzyme.find({Location: 'Cytosol'}, { Product: 1, Chromosome: 1, Porphyria: 1})	medicine_enzyme_interaction
db.enzyme.find({ Product: { $ne: 'Heme' } }, { name: 1 })	medicine_enzyme_interaction
db.enzyme.find({Product: {$ne: 'Heme'}}, { name: 1})	medicine_enzyme_interaction
db.medicine.find({ FDA_approved: "Yes" }, { name: 1, Trade_Name: 1 })	medicine_enzyme_interaction
db.medicine.find({ FDA_approved: "Yes" }, { name: 1, Trade_Name: 1 })	medicine_enzyme_interaction
db.enzyme.aggregate([ { $lookup: { from: "medicine_enzyme_interaction", localField: "id", foreignField: "enzyme_id", as: "interactions" } }, { $unwind: "$interactions" }, { $lookup: { from: "medicine", localField: "interactions.medicine_id", foreignField: "id", as: "medicine" } }, { $unwind: "$medicine" }, { $match: { "medicine.name": "Amisulpride", "interactions.interaction_type": "inhibitor" } }, { $project: { name: 1 } } ])	medicine_enzyme_interaction
db.enzyme.aggregate([ { $lookup: { from: "medicine_enzyme_interaction", localField: "id", foreignField: "enzyme_id", as: "interactions" } }, { $unwind: "$interactions" }, { $lookup: { from: "medicine", localField: "interactions.medicine_id", foreignField: "id", as: "medicine" } }, { $unwind: "$medicine" }, { $match: { "medicine.name": "Amisulpride", "interactions.interaction_type": "inhibitor" } }, { $project: { name: 1 } } ])	medicine_enzyme_interaction
db.medicine.aggregate([ { $lookup: { from: "medicine_enzyme_interaction", localField: "id", foreignField: "medicine_id", as: "interactions" } }, { $match: { "interactions.1": { $exists: true } } }, { $project: { id: 1, name: 1 } } ])	medicine_enzyme_interaction
db.medicine.aggregate([ { $lookup: { from: "medicine_enzyme_interaction", localField: "id", foreignField: "medicine_id", as: "interactions" } }, { $match: { "interactions.1": { $exists: true } } }, { $project: { id: 1, name: 1 } } ])	medicine_enzyme_interaction
db.medicine_enzyme_interaction.aggregate([ { $lookup: { from: "medicine", localField: "medicine_id", foreignField: "id", as: "medicine" } }, { $lookup: { from: "enzyme", localField: "enzyme_id", foreignField: "id", as: "enzyme" } }, { $match: { "enzyme.name": "ALA synthase", "medicine.name": "Aripiprazole" } }, { $project: { interaction_type: 1 } } ])	medicine_enzyme_interaction
db.medicine_enzyme_interaction.aggregate([ { $lookup: { from: "medicine", localField: "medicine_id", foreignField: "id", as: "medicine" } }, { $lookup: { from: "enzyme", localField: "enzyme_id", foreignField: "id", as: "enzyme" } }, { $match: { "enzyme.name": "ALA synthase", "medicine.name": "Aripiprazole" } }, { $project: { interaction_type: 1 } } ])	medicine_enzyme_interaction
db.medicine_enzyme_interaction.aggregate([ { $group: { _id: "$interaction_type", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	medicine_enzyme_interaction
db.medicine_enzyme_interaction.aggregate([ { $group: { _id: "$interaction_type", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	medicine_enzyme_interaction
db.enzyme.aggregate([ { $lookup: { from: "medicine_enzyme_interaction", localField: "id", foreignField: "enzyme_id", as: "interactions" } }, { $match: { interactions: { $size: 0 } } }, { $count: "no_interaction_count" } ])	medicine_enzyme_interaction
db.medicine.aggregate([ { $lookup: { from: "medicine_enzyme_interaction", localField: "id", foreignField: "medicine_id", as: "interactions" } }, { $project: { id: 1, Trade_Name: 1, numberOfInteractions: { $size: "$interactions" } } }, { $match: { numberOfInteractions: { $gte: 3 } } }, { $project: { id: 1, Trade_Name: 1 } } ])	medicine_enzyme_interaction
db.medicine.aggregate([ { $lookup: { from: "medicine_enzyme_interaction", localField: "id", foreignField: "medicine_id", as: "interactions" } }, { $match: { "interactions.2": { $exists: true } } }, { $project: { id: "$id", Trade_Name: "$Trade_Name" } } ])	medicine_enzyme_interaction
db.enzyme.aggregate([ { $lookup: { from: "medicine_enzyme_interaction", localField: "id", foreignField: "enzyme_id", as: "interaction" } }, { $unwind: "$interaction" }, { $match: { "interaction.interaction_type": "inhibitor" } }, { $project: { name: 1, Location: 1, Product: 1 } }, { $group: { _id: { name: "$name", Location: "$Location", Product: "$Product" } } }, { $project: { name: "$_id.name", Location: "$_id.Location", Product: "$_id.Product" } } ])	medicine_enzyme_interaction
db.enzyme.aggregate([ { $lookup: { from: "medicine_enzyme_interaction", localField: "id", foreignField: "enzyme_id", as: "interactions" } }, { $match: { "interactions.interaction_type": "inhibitor" } }, { $group: { _id: { name: "$name", Location: "$Location", Product: "$Product" } } }, { $project: { name: "$_id.name", Location: "$_id.Location", Product: "$_id.Product" } } ])	medicine_enzyme_interaction
db.medicine.aggregate([ { $lookup: { from: "medicine_enzyme_interaction", localField: "id", foreignField: "medicine_id", as: "interactions" } }, { $match: { interactions: { $elemMatch: { interaction_type: "inhibitor" } } } }, { $match: { interactions: { $elemMatch: { interaction_type: "activitor" } } } }, { $project: { name: 1, Trade_Name: 1 } } ])	medicine_enzyme_interaction
db.medicine.aggregate([ { $lookup: { from: "medicine_enzyme_interaction", localField: "id", foreignField: "medicine_id", as: "interactions" } }, { $match: { "interactions.interaction_type": { $all: ["inhibitor", "activitor"] } } }, { $group: { _id: { id: "$id", name: "$name", trade_name: "$Trade_Name" }, interactionTypes: { $addToSet: "$interactions.interaction_type" } } }, { $project: { name: "$_id.name", trade_name: "$_id.trade_name" } } ])	medicine_enzyme_interaction
db.enzyme.find( { name: { $regex: /ALA/, $options: 'i' } }, { name: 1 } )	medicine_enzyme_interaction
db.enzyme.find({name: {$regex: /ALA/}}, { name: 1})	medicine_enzyme_interaction
db.university.find({}, { School: 1, Nickname: 1 }).sort({ Founded: 1 })	university_basketball
db.university.find({ Affiliation: "Public" }, { School: 1, Location: 1 })	university_basketball
db.university.find({ Affiliation: "Public" }, { School: 1, Location: 1 })	university_basketball
db.university.find({}, { Founded: 1 }).sort({ Enrollment: -1 }).limit(1)	university_basketball
db.university.find({Affiliation: {$ne: "Public"}}, {Founded: 1}).sort({Founded: -1}).limit(1)	university_basketball
db.university.find({ Affiliation: { $ne: 'Public' } }, { Founded: 1 }).sort({ Founded: -1 }).limit(1)	university_basketball
db.basketball_match.find({}, { ACC_Percent: 1 }).sort({ ACC_Percent: -1 }).limit(1)	university_basketball
db.basketball_match.find({}, { ACC_Percent: 1 }).sort({ ACC_Percent: -1 }).limit(1)	university_basketball
db.university.aggregate([ { $lookup: { from: "basketball_match", localField: "School_ID", foreignField: "School_ID", as: "basketball_match" } }, { $unwind: "$basketball_match" }, { $sort: { "basketball_match.ACC_Percent": 1 } }, { $limit: 1 }, { $project: { Primary_conference: 1 } } ])	university_basketball
db.university.aggregate([ { $lookup: { from: "basketball_match", localField: "School_ID", foreignField: "School_ID", as: "basketball_match" } }, { $unwind: "$basketball_match" }, { $sort: { "basketball_match.ACC_Percent": 1 } }, { $limit: 1 }, { $project: { Primary_conference: 1 } } ])	university_basketball
db.university.aggregate([ { $lookup: { from: "basketball_match", localField: "School_ID", foreignField: "School_ID", as: "match_info" } }, { $unwind: "$match_info" }, { $sort: { "Founded": 1 } }, { $limit: 1 }, { $project: { team_name: "$match_info.Team_Name", ACC_Regular_Season: "$match_info.ACC_Regular_Season" } } ])	university_basketball
db.university.aggregate([ { $lookup: { from: "basketball_match", localField: "School_ID", foreignField: "School_ID", as: "basketball_info" } }, { $unwind: "$basketball_info" }, { $sort: { "Founded": 1 } }, { $limit: 1 }, { $project: { team_name: "$basketball_info.Team_Name", ACC_Regular_Season: "$basketball_info.ACC_Regular_Season" } } ])	university_basketball
db.university.aggregate([ { $lookup: { from: "basketball_match", localField: "School_ID", foreignField: "School_ID", as: "match" } }, { $unwind: "$match" }, { $match: { "match.Team_Name": "Clemson" } }, { $project: { All_Games: "$match.All_Games", Location: "$Location" } } ])	university_basketball
db.university.aggregate([ { $lookup: { from: "basketball_match", localField: "School_ID", foreignField: "School_ID", as: "basketball_info" } }, { $unwind: "$basketball_info" }, { $match: { "basketball_info.Team_Name": "Clemson" } }, { $project: { All_Games: "$basketball_info.All_Games", Location: "$Location" } } ])	university_basketball
db.university.aggregate([ { $match: { Founded: { $lt: 1850 } } }, { $group: { _id: null, averageEnrollment: { $avg: "$Enrollment" } } } , { $project: { averageEnrollment: 1 } }])	university_basketball
db.university.aggregate([ { $match: { "Founded": { $lt: 1850 } } }, { $group: { _id: null, "averageEnrollment": { $avg: "$Enrollment" } } }, { $project: { averageEnrollment: 1 } } ])	university_basketball
db.university.find({}, { Enrollment: 1, Primary_conference: 1 }).sort({ Founded: 1 }).limit(1)	university_basketball
db.university.aggregate([ { $group: { _id: null, totalEnrollment: { $sum: "$Enrollment" }, minEnrollment: { $min: "$Enrollment" } } } , , { $project: { totalEnrollment: 1 , minEnrollment: 1 } }])	university_basketball
db.university.aggregate([ { $group: { _id: null, totalEnrollment: { $sum: "$Enrollment" }, minEnrollment: { $min: "$Enrollment" } } }, { $project: { totalEnrollment: 1, minEnrollment: 1 } } ])	university_basketball
db.university.aggregate([ { $group: { _id: "$Affiliation", TotalEnrollment: { $sum: "$Enrollment" } } } ])	university_basketball
db.university.aggregate([ { $lookup: { from: "basketball_match", localField: "School_ID", foreignField: "School_ID", as: "basketball_info" } }, { $match: { "basketball_info": {$size: 0} } }, { $count: "schools_not_participating" } ])	university_basketball
db.university.find( { $or: [{ Founded: { $gt: 1850 } }, { Affiliation: 'Public' }] }, { School: 1 } )	university_basketball
db.university.aggregate([ { $match: { Enrollment: { $gt: 20000 } } }, { $group: { _id: "$Affiliation", count: { $sum: 1 } } } ])	university_basketball
db.university.aggregate([ { $match: { Founded: { $gt: 1850 } } }, { $group: { _id: "$Affiliation", totalEnrollment: { $sum: "$Enrollment" } } } ])	university_basketball
db.university.aggregate([ { $match: { Founded: { $gt: 1850 } } }, { $group: { _id: "$Affiliation", TotalEnrollment: { $sum: "$Enrollment" } } }, { $project: { Affiliation: "$_id", TotalEnrollment: 1 } } ])	university_basketball
db.university.aggregate([ { $group: { _id: null, maxEnrollment: { $max: "$Enrollment" } } } , { $project: { maxEnrollment: 1 } }])	university_basketball
db.university.aggregate([ { $group: { _id: null, maxEnrollment: { $max: "$Enrollment" } } }, { $project: { maxEnrollment: 1 } } ])	university_basketball
db.basketball_match.find({})	university_basketball
db.basketball_match.find({})	university_basketball
db.basketball_match.find({}, {Team_Name: 1}).sort({All_Home: -1})	university_basketball
db.basketball_match.find({}, {Team_Name: 1}).sort({All_Home: -1})	university_basketball
db.chip_model.find({Launch_year: {$gte: 2002, $lte: 2004}}, {Model_name: 1})	phone_1
db.chip_model.find({}, {Model_name: 1, RAM_MiB: 1}).sort({RAM_MiB: 1}).limit(1)	phone_1
db.phone.find( { Hardware_Model_name: 'LG-P760' }, { chip_model: 1, screen_mode: 1 } )	phone_1
db.phone.aggregate([ { $match: { Company_name: "Nokia Corporation" } }, { $lookup: { from: "chip_model", localField: "chip_model", foreignField: "Model_name", as: "chip_model_info" } }, { $unwind: "$chip_model_info" }, { $group: { _id: null, maxRAM: { $max: "$chip_model_info.RAM_MiB" }, minRAM: { $min: "$chip_model_info.RAM_MiB" } } }, { $project: { maxRAM: 1, minRAM: 1 } } ])	phone_1
db.phone.aggregate([ { $match: { Company_name: "Nokia Corporation" } }, { $lookup: { from: "chip_model", localField: "chip_model", foreignField: "Model_name", as: "chip_model_info" } }, { $unwind: "$chip_model_info" }, { $group: { _id: null, avgROM: { $avg: "$chip_model_info.ROM_MiB" } } }, { $project: { avgROM: 1 } } ])	phone_1
db.phone.aggregate([ { $lookup: { from: "chip_model", localField: "chip_model", foreignField: "Model_name", as: "chip_model_info" } }, { $match: { $or: [ { "chip_model_info.Launch_year": 2002 }, { "chip_model_info.RAM_MiB": { $gt: 32 } } ] } }, { $project: { Hardware_Model_name: 1, Company_name: 1 } } ])	phone_1
db.phone.find( { Accreditation_type: { $regex: /Full/ } }, { Hardware_Model_name: 1, Company_name: 1 } )	phone_1
db.phone.aggregate([ { $group: { _id: "$Company_name", num_models: { $sum: 1 } } }, { $sort: { num_models: 1 } }, { $limit: 1 }, { $project: { Company_name: "$_id", num_models: "$num_models" } } ])	phone_1
db.phone.aggregate([ { $group: { _id: "$Company_name", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Company_name: "$_id" } } ])	phone_1
db.screen_mode.aggregate([ { $group: { _id: null, max_used_kb: { $max: "$used_kb" }, min_used_kb: { $min: "$used_kb" }, avg_used_kb: { $avg: "$used_kb" } } }, , { $project: { max_used_kb: 1, min_used_kb:1, avg_used_kb:1 } } ])	phone_1
db.phone.aggregate([ { $lookup: { from: "chip_model", localField: "chip_model", foreignField: "Model_name", as: "chip_details" } }, { $match: { "chip_details.Launch_year": 2002 } }, { $sort: { "chip_details.RAM_MiB": -1 } }, { $limit: 1 }, { $project: { "Hardware_Model_name": 1 } } ])	phone_1
db.phone.aggregate([ { $lookup: { from: "chip_model", localField: "chip_model", foreignField: "Model_name", as: "chip_details" } }, { $lookup: { from: "screen_mode", localField: "screen_mode", foreignField: "Graphics_mode", as: "screen_details" } }, { $match: { $or: [ { "chip_details.RAM_MiB": { $gt: 32 } }, { "screen_details.Type": "Text" } ] } }, { $project: { Hardware_Model_name: 1 } } ])	phone_1
db.phone.aggregate([ { $group: { _id: "$Accreditation_type", count: { $sum: 1 } } } ])	phone_1
db.phone.aggregate([ { $group: { _id: "$Accreditation_type", count: { $sum: 1 } } } ])	phone_1
db.phone.aggregate([ { $group: { _id: "$Accreditation_level", count: { $sum: 1 } } }, { $match: { count: { $gt: 3 } } }, { $project: { Accreditation_level: "$_id" } } ])	phone_1
db.chip_model.find({})	phone_1
db.chip_model.find({}, {Model_name: 1}).sort({Launch_year: 1})	phone_1
db.chip_model.aggregate([ { $lookup: { from: "phone", localField: "Model_name", foreignField: "chip_model", as: "phone_data" } }, { $match: { "phone_data": { $size: 0 } } }, { $group: { _id: null, averageRAM: { $avg: "$RAM_MiB" } } }, { $project: { averageRAM:1 } } ])	phone_1
db.chip_model.aggregate([ { $lookup: { from: "phone", localField: "Model_name", foreignField: "chip_model", as: "phone_info" } }, { $match: { "phone_info": { $not: { $elemMatch: { Accreditation_type: 'Full' } } } } }, { $project: { Model_name: 1 } } ])	phone_1
db.country.find({}, {Country_name: 1, Capital: 1})	match_season
db.country.find({}, {Country_name: 1, Capital: 1})	match_season
db.country.find({ Official_native_language: { $regex: /English/ } }, { Official_native_language: 1 })	match_season
db.country.find({ Official_native_language: { $regex: /English/ } }, { Official_native_language: 1 })	match_season
db.match_season.find({Position: 'Defender'}, {Draft_Pick_Number: 1, Draft_Class: 1})	match_season
db.match_season.find({Position: 'Defender'}, {Draft_Pick_Number: 1, Draft_Class: 1})	match_season
db.player.find({}, {Player: 1, Years_Played: 1})	match_season
db.player.aggregate([ { $project: { Player: 1, Years_Played: 1 } } ])	match_season
db.team.find({}, { Name: 1})	match_season
db.team.find({}, { Name: 1})	match_season
db.country.aggregate([ { $match: { Capital: "Dublin" } }, { $lookup: { from: "match_season", localField: "Country_id", foreignField: "Country", as: "matches" } }, { $unwind: "$matches" }, { $group: { _id: "$matches.Position" } }, { $project: { Position: "$_id" } } ])	match_season
db.country.aggregate([ { $match: { Capital: "Dublin" } }, { $lookup: { from: "match_season", localField: "Country_id", foreignField: "Country", as: "matches" } }, { $unwind: "$matches" }, { $group: { _id: "$matches.Position" } }, { $project: { Position: "$_id" } } ])	match_season
db.match_season.aggregate([ { $match: { $or: [ { College: "Maryland" }, { College: "Duke" } ] } }, { $lookup: { from: "country", localField: "Country", foreignField: "Country_id", as: "country_info" } }, { $unwind: "$country_info" }, { $group: { _id: "$country_info.Official_native_language" } }, { $project: { Official_native_language: "$_id" } } ])	match_season
db.country.aggregate([ { $lookup: { from: "match_season", localField: "Country_id", foreignField: "Country", as: "match_season_data" } }, { $match: { "match_season_data.College": { $in: ["Maryland", "Duke"] } } }, { $project: { Official_native_language: 1 } } ])	match_season
db.match_season.aggregate([ { $match: { Position: "Defender" } }, { $lookup: { from: "country", localField: "Country", foreignField: "Country_id", as: "country_info" } }, { $unwind: "$country_info" }, { $group: { _id: "$country_info.Official_native_language" } }, { $count: "distinct_official_languages" } ])	match_season
db.country.aggregate([ { $lookup: { from: "match_season", localField: "Country_id", foreignField: "Country", as: "match_season_data" } }, { $unwind: "$match_season_data" }, { $match: { "match_season_data.Position": "Defender" } }, { $group: { _id: null, distinctLanguages: { $addToSet: "$Official_native_language" } } }, { $project: { count: { $size: "$distinctLanguages" } } } ])	match_season
db.match_season.aggregate([ { $lookup: { from: "team", localField: "Team", foreignField: "Team_id", as: "team_info" } }, { $unwind: "$team_info" }, { $match: { "team_info.Name": "Ryley Goldner" } }, { $project: { Position: 1 } } ])	match_season
db.match_season.aggregate([ { $lookup: { from: "team", localField: "Team", foreignField: "Team_id", as: "team_info" } }, { $match: { "team_info.Name": "Ryley Goldner" } }, { $project: { Position: 1 } } ])	match_season
db.match_season.aggregate([ { $lookup: { from: "team", localField: "Team", foreignField: "Team_id", as: "team_info" } }, { $unwind: "$team_info" }, { $match: { "team_info.Name": "Columbus Crew" } }, { $group: { _id: "$College" } }, { $count: "distinct_colleges" } ])	match_season
db.match_season.aggregate([ { $lookup: { from: "team", localField: "Team", foreignField: "Team_id", as: "team_info" } }, { $match: { "team_info.Name": "Columbus Crew" } }, { $group: { _id: "$College" } }, { $count: "distinct_colleges" } ])	match_season
db.player.aggregate([ { $lookup: { from: "team", localField: "Team", foreignField: "Team_id", as: "team_info" } }, { $match: { "team_info.Name": "Columbus Crew" } }, { $project: { Player: 1, Years_Played: 1 } } ])	match_season
db.player.aggregate([ { $lookup: { from: "team", localField: "Team", foreignField: "Team_id", as: "team_info" } }, { $match: { "team_info.Name": "Columbus Crew" } }, { $project: { Player: 1, Years_Played: 1 } } ])	match_season
db.match_season.aggregate([ { $group: { _id: "$Position", count: { $sum: 1 } } }, { $project: { Position: "$_id", count: 1 } } ])	match_season
db.match_season.aggregate([ { $group: { _id: "$Position", count: { $sum: 1 } } } ])	match_season
db.country.aggregate([ { $lookup: { from: "match_season", localField: "Country_id", foreignField: "Country", as: "matches" } }, { $unwind: "$matches" }, { $group: { _id: "$Country_name", count: { $sum: 1 } } }, { $project: { Country_name: "$_id", count: 1 } } ])	match_season
db.match_season.aggregate([ { $group: { _id: "$Position", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Position: "$_id" } } ])	match_season
db.match_season.aggregate([ { $group: { _id: "$Position", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Position: "$_id" } } ])	match_season
db.match_season.aggregate([ { $group: { _id: "$College", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 3 }, { $project: { College: "$_id" } } ])	match_season
db.match_season.aggregate([ { $group: { _id: "$College", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 3 }, { $project: { College: "$_id" } } ])	match_season
db.match_season.aggregate([ { $group: { _id: "$College", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { College: "$_id" } } ])	match_season
db.match_season.aggregate([ { $group: { _id: "$College", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { College: "$_id" } } ])	match_season
db.match_season.aggregate([ { $group: { _id: "$College", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $sort: { _id: -1 } }, { $project: { College: "$_id" } } ])	match_season
db.match_season.aggregate([ { $group: { _id: "$College", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $sort: { _id: -1 } } , { $project: { College: "$_id" } }])	match_season
db.team.find( { Team_id: { $nin: db.match_season.distinct("Team") } }, { Name: 1 } )	match_season
db.team.aggregate([ { $lookup: { from: "match_season", localField: "Team_id", foreignField: "Team", as: "match_record" } }, { $match: { match_record: { $size: 0 } } }, { $project: { Name: 1 } } ])	match_season
db.country.aggregate([ { $lookup: { from: "match_season", localField: "Country_id", foreignField: "Country", as: "ms" } }, { $unwind: "$ms" }, { $group: { _id: "$Country_name", positions: { $addToSet: "$ms.Position"} } }, { $match: { positions: { $all: ["Forward", "Defender"] } } }, { $project: { Country_name: "$_id" } } ])	match_season
db.country.aggregate([ { $lookup: { from: "match_season", localField: "Country_id", foreignField: "Country", as: "match_info" } }, { $match: { "match_info.Position": { $in: ["Forward", "Defender"] } } }, { $project: { Country_name: 1, match_info: { $filter: { input: "$match_info", as: "mi", cond: { $or: [ { $eq: ["$$mi.Position", "Forward"] }, { $eq: ["$$mi.Position", "Defender"] } ] } } } } }, { $match: { $expr: { $and: [ { $in: ["Forward", "$match_info.Position"] }, { $in: ["Defender", "$match_info.Position"] } ] } } }, { $group: { _id: "$Country_name" } }, { $project: { Country_name: "$_id" } } ])	match_season
db.match_season.aggregate([ { $match: { $or: [{ Position: 'Midfielder' }, { Position: 'Defender' }] } }, { $group: { _id: "$College", positions: { $addToSet: "$Position" } } }, { $match: { positions: { $all: ['Midfielder', 'Defender'] } } }, { $project: { _id: 1 } } ])	match_season
db.match_season.aggregate([ { $match: { $or: [{ Position: 'Midfielder' }, { Position: 'Defender' }] } }, { $group: { _id: '$College', positions: { $addToSet: '$Position' } } }, { $match: { positions: { $all: ['Midfielder', 'Defender'] } } }, { $project: { College: '$_id' } } ])	match_season
db.climber.find({}, { Name: 1}).sort({Points: -1})	climbing
db.climber.find({}, { Name: 1}).sort({Points: -1})	climbing
db.climber.find({Country: {$ne: 'Switzerland'}}, { Name: 1})	climbing
db.climber.find({Country: {$ne: 'Switzerland'}}, {Name: 1})	climbing
db.climber.aggregate([ { $match: { Country: "United Kingdom" } }, { $group: { _id: null, maxPoints: { $max: "$Points" } } }, { $project: { maxPoints: 1 } } ])	climbing
db.climber.aggregate([ { $match: { Country: "United Kingdom" } }, { $group: { _id: null, maxPoints: { $max: "$Points" } } }, { $project: { maxPoints: 1 } } ])	climbing
db.mountain.find({}, {Name: 1}).sort({Name: 1})	climbing
db.mountain.find({}, {Name: 1}).sort({Name: 1})	climbing
db.mountain.find({Height: {$gt: 5000}}, {Country: 1})	climbing
db.mountain.find({Height: {$gt: 5000}}, {Country: 1})	climbing
db.mountain.find({}, {Name: 1}).sort({Height: -1}).limit(1)	climbing
db.mountain.find({}, {Name: 1}).sort({Height: -1}).limit(1)	climbing
db.mountain.aggregate([ { $sort: { Prominence: -1 } }, { $limit: 3 }, { $project: { Range: 1 } } ])	climbing
db.mountain.aggregate([ { $sort: { Prominence: -1 } }, { $limit: 3 }, { $group: { _id: "$Range" } } ])	climbing
db.climber.aggregate([ { $lookup: { from: "mountain", localField: "Mountain_ID", foreignField: "Mountain_ID", as: "mountain_info" } }, { $project: { "Name": 1, "mountain_name": "$mountain_info.Name" } }, { $unwind: "$mountain_name" } ])	climbing
db.climber.aggregate([ { $lookup: { from: "mountain", localField: "Mountain_ID", foreignField: "Mountain_ID", as: "mountain_info" } }, { $unwind: "$mountain_info" }, { $project: { "climber_name": "$Name", "mountain_name": "$mountain_info.Name" } } ])	climbing
db.climber.aggregate([ { $lookup: { from: "mountain", localField: "Mountain_ID", foreignField: "Mountain_ID", as: "mountain_info" } }, { $unwind: "$mountain_info" }, { $project: { "Name": "$Name", "Height": "$mountain_info.Height" } } ])	climbing
db.climber.aggregate([ { $lookup: { from: "mountain", localField: "Mountain_ID", foreignField: "Mountain_ID", as: "mountain_data" } }, { $match: { "Country": "West Germany" } }, { $unwind: "$mountain_data" }, { $group: { _id: "$mountain_data.Name" } }, { $project: { "Name": "$_id" } } ])	climbing
db.climber.aggregate([ { $match: { Country: 'West Germany' } }, { $lookup: { from: "mountain", localField: "Mountain_ID", foreignField: "Mountain_ID", as: "mountain_info" } }, { $unwind: "$mountain_info" }, { $group: { _id: "$mountain_info.Name" } }, { $project: { Name: "$_id" } } ])	climbing
db.climber.aggregate([ { $lookup: { from: "mountain", localField: "Mountain_ID", foreignField: "Mountain_ID", as: "mountain_info" } }, { $match: { "mountain_info.Country": "Uganda" } }, { $project: { Time: 1 } } ])	climbing
db.climber.aggregate([ { $lookup: { from: "mountain", localField: "Mountain_ID", foreignField: "Mountain_ID", as: "mountain_info" } }, { $match: { "mountain_info.Country": "Uganda" } }, { $project: { Time: 1 } } ])	climbing
db.climber.aggregate([ { $group: { _id: "$Country", count: { $sum: 1 } } }, { $project: { Country: "$_id", count: 1 } } ])	climbing
db.climber.aggregate([ { $group: { _id: "$Country", count: { $sum: 1 } } } ])	climbing
db.mountain.aggregate([ { $group: { _id: "$Country", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Country: "$_id" } } ])	climbing
db.mountain.aggregate([ { $group: { _id: "$Country", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Country: "$_id" } } ])	climbing
db.mountain.find({ Mountain_ID: { $nin: db.climber.distinct("Mountain_ID") } }, { Name: 1 })	climbing
db.mountain.find( { Mountain_ID: { $nin: db.climber.distinct("Mountain_ID") } }, { Name: 1 } )	climbing
db.mountain.aggregate([ { $group: { _id: "$Range", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Range: "$_id" } } ])	climbing
db.mountain.aggregate([ { $group: { _id: "$Range", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { Range: "$_id" } }])	climbing
db.mountain.find({$or: [{Height: {$gt: 5000}}, {Prominence: {$gt: 1000}}]}, { Name: 1})	climbing
db.mountain.find({$or: [{Height: {$gt: 5000}}, {Prominence: {$gt: 1000}}]}, { Name: 1})	climbing
db.body_builder.aggregate([ { $sort: { Total: 1 } }, { $project: { Total: 1 } } ])	body_builder
db.body_builder.aggregate([ { $sort: { Snatch: 1 } }, { $project: { Snatch: 1, Clean_Jerk: 1 } } ])	body_builder
db.body_builder.aggregate([ { $group: { _id: null, averageSnatch: { $avg: "$Snatch" } } }, { $project: { averageSnatch: 1 } } ])	body_builder
db.body_builder.find({}, {Clean_Jerk: 1}).sort({Total: -1}).limit(1)	body_builder
db.people.find({}, { Birth_Date: 1 }).sort({ Height: 1 })	body_builder
db.people.aggregate([ { $lookup: { from: "body_builder", localField: "People_ID", foreignField: "People_ID", as: "body_builders" } }, { $match: { "body_builders": { $ne: [] } } }, { $project: { "Name": 1 } } ])	body_builder
db.body_builder.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $match: { Total: { $gt: 300 } } }, { $project: { Name: "$people_info.Name" } } ])	body_builder
db.body_builder.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "body_builder_info" } }, { $unwind: "$body_builder_info" }, { $sort: {"body_builder_info.Weight": -1} }, { $limit: 1 }, { $project: { Name: "$body_builder_info.Name"} } ])	body_builder
db.body_builder.aggregate([ { $sort: { Total: -1 } }, { $limit: 1 }, { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $project: { Birth_Date: "$people_info.Birth_Date", Birth_Place: "$people_info.Birth_Place" } } ])	body_builder
db.body_builder.aggregate([ { $match: { Total: { $lt: 315 } } }, { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $project: { Height: "$people_info.Height" } } ])	body_builder
db.body_builder.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $match: { "people_info.Height": { $gt: 200 } } }, { $group: { _id: null, averageTotal: { $avg: "$Total" } } } , { $project: { averageTotal: 1 } } ])	body_builder
db.body_builder.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "person_info" } }, { $unwind: "$person_info" }, { $project: { Name: "$person_info.Name"} }, { $sort: { Total: -1 } }])	body_builder
db.people.aggregate([ { $group: { _id: "$Birth_Place", count: { $sum: 1 } } } ])	body_builder
db.people.find({}, {Height: 1, Weight: 1}).sort({Height: -1})	body_builder
db.body_builder.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "builder_info" } }, { $replaceRoot: { newRoot: { $mergeObjects: [ { $arrayElemAt: ["$builder_info", 0] }, "$$ROOT" ] } } }, { $project: { builder_info: 0 } } ])	body_builder
db.people.aggregate([ { $lookup: { from: "body_builder", localField: "People_ID", foreignField: "People_ID", as: "body_builder_info" } }, { $match: { "body_builder_info": { $size: 0 } } }, { $project: { Name: 1, Birth_Place: 1 } } ])	body_builder
db.people.aggregate([ { $lookup: { from: "body_builder", localField: "People_ID", foreignField: "People_ID", as: "body_builder_info" } }, { $match: { body_builder_info: { $size: 0 } } }, { $count: "not_body_builders_count" } ])	body_builder
db.body_builder.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $match: { "people_info.Birth_Date": { $regex: /January/ } } }, { $group: { _id: null, total: { $sum: "$Total" } } }, { $project: { total: "$Total" } } ])	body_builder
db.body_builder.aggregate([ { $group: { _id: null, minSnatch: { $min: "$Snatch" } } }, { $project: { minSnatch: 1 } } ])	body_builder
db.election.find({}, {Votes: 1}).sort({Votes: -1})	election_representative
db.election.find({}, {Date: 1, Vote_Percent: 1})	election_representative
db.election.aggregate([ { $group: { _id: null, minVotePercent: { $min: "$Vote_Percent" }, maxVotePercent: { $max: "$Vote_Percent" } } }, { $project: { minVotePercent: 1, maxVotePercent: 1 } } ])	election_representative
db.representative.find({}, { Name: 1, Party: 1})	election_representative
db.representative.find({ Party: { $ne: 'Republican' } }, { Name: 1 })	election_representative
db.representative.find({State: {$in: ['New York', 'Indiana']}}, {Lifespan: 1})	election_representative
db.election.aggregate([ { $lookup: { from: "representative", localField: "Representative_ID", foreignField: "Representative_ID", as: "representative_info" } }, { $unwind: "$representative_info" }, { $project: { Name: "$representative_info.Name", Date: 1 } } ])	election_representative
db.election.aggregate([ { $lookup: { from: "representative", localField: "Representative_ID", foreignField: "Representative_ID", as: "representative_info" } }, { $unwind: "$representative_info" }, { $match: { Votes: { $gt: 10000 } } }, { $project: { Name: "$representative_info.Name" } } ])	election_representative
db.election.aggregate([ { $lookup: { from: "representative", localField: "Representative_ID", foreignField: "Representative_ID", as: "representative_info" } }, { $unwind: "$representative_info" }, { $project: { Name: "$representative_info.Name"} }, { $sort: { Votes: -1 } } ])	election_representative
db.election.aggregate([ { $lookup: { from: "representative", localField: "Representative_ID", foreignField: "Representative_ID", as: "representative_info" } }, { $unwind: "$representative_info" }, { $sort: { Votes: 1 } }, { $limit: 1 }, { $project: { Party: "$representative_info.Party" } } ])	election_representative
db.election.aggregate([ { $lookup: { from: "representative", localField: "Representative_ID", foreignField: "Representative_ID", as: "representative_info" } }, { $unwind: "$representative_info" }, { $project: { Lifespan: "$representative_info.Lifespan"} }, { $sort: { Vote_Percent: -1 } } ])	election_representative
db.election.aggregate([ { $lookup: { from: "representative", localField: "Representative_ID", foreignField: "Representative_ID", as: "representative_info" } }, { $match: { "representative_info.Party": "Republican" } }, { $group: { _id: null, averageVotes: { $avg: "$Votes" } } }, { $project: { averageVotes: 1 } } ])	election_representative
db.representative.aggregate([ { $group: { _id: "$Party", count: { $sum: 1 } } }, { $project: { Party: "$_id", count: 1 } } ])	election_representative
db.representative.aggregate([ { $group: { _id: "$Party", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	election_representative
db.representative.aggregate([ { $group: { _id: "$Party", count: { $sum: 1 } } }, { $match: { count: { $gte: 3 } } }, { $project: { Party: "$_id" } } ])	election_representative
db.representative.aggregate([ { $group: { _id: "$State", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { State: "$_id" } } ])	election_representative
db.representative.find( { Representative_ID: { $nin: db.election.distinct("Representative_ID") } }, { Name: 1 } )	election_representative
db.representative.aggregate([ { $match: { $or: [ { State: 'New York' }, { State: 'Pennsylvania' } ] } }, { $group: { _id: "$Party", states: { $addToSet: "$State" } } }, { $match: { states: { $all: ["New York", "Pennsylvania"] } } }, { $project: { _id: 1 } } ])	election_representative
db.Apartment_Buildings.find({building_manager: 'Emma'}, {building_short_name: 1})	apartment_rentals
db.Apartment_Buildings.find( { building_manager: 'Emma' }, { building_short_name: 1 } )	apartment_rentals
db.Apartment_Buildings.find({building_manager: 'Brenden'}, {building_address: 1, building_phone: 1})	apartment_rentals
db.Apartment_Buildings.find({building_manager: 'Brenden'}, {building_address: 1, building_phone: 1})	apartment_rentals
db.Apartment_Buildings.find( { building_full_name: { $regex: /court/, $options: 'i' } }, { building_full_name: 1 } )	apartment_rentals
db.Apartment_Buildings.find( { building_full_name: { $regex: /court/, $options: 'i' } }, { building_full_name: 1 } )	apartment_rentals
db.Apartments.aggregate([ { $group: { _id: null, minBathroomCount: { $min: "$bathroom_count" }, maxBathroomCount: { $max: "$bathroom_count" } } }, { $project: { minBathroomCount: 1, maxBathroomCount: 1 } } ])	apartment_rentals
db.Apartments.aggregate([ { $group: { _id: null, minBathroomCount: { $min: "$bathroom_count" }, maxBathroomCount: { $max: "$bathroom_count" } } } , { $project: { minBathroomCount: 1 , maxBathroomCount: 1 } }])	apartment_rentals
db.Apartments.aggregate([ { $group: { _id: null, averageBedroomCount: { $avg: "$bedroom_count" } } }, { $project: { averageBedroomCount: 1 } } ])	apartment_rentals
db.Apartments.aggregate([ { $group: { _id: null, averageBedroomCount: { $avg: "$bedroom_count" } } }, { $project: { averageBedroomCount: 1 } } ])	apartment_rentals
db.Apartments.aggregate([ { $project: { apt_number: 1, room_count: 1 } } ])	apartment_rentals
db.Apartments.find({}, {apt_number: 1, room_count: 1})	apartment_rentals
db.Apartments.find({apt_type_code: 'Flat'}, {apt_number: 1})	apartment_rentals
db.Apartments.find({apt_type_code: 'Flat'}, {apt_number: 1})	apartment_rentals
db.Guests.find({}, {guest_first_name: 1, guest_last_name: 1})	apartment_rentals
db.Guests.find({}, {guest_first_name: 1, guest_last_name: 1})	apartment_rentals
db.Apartment_Bookings.aggregate([ { $lookup: { from: "Apartments", localField: "apt_id", foreignField: "apt_id", as: "apt_info" } }, { $match: { "apt_info.apt_number": "Suite 634" } }, { $project: { booking_status_code: 1 } } ])	apartment_rentals
db.Apartment_Bookings.aggregate([ { $lookup: { from: "Apartments", localField: "apt_id", foreignField: "apt_id", as: "apt_info" } }, { $match: { "apt_info.apt_number": "Suite 634" } }, { $project: { booking_status_code: 1 } } ])	apartment_rentals
db.Apartment_Bookings.aggregate([ { $match: { booking_status_code: 'Confirmed' } }, { $lookup: { from: "Apartments", localField: "apt_id", foreignField: "apt_id", as: "apartment_details" } }, { $unwind: "$apartment_details" }, { $group: { _id: "$apartment_details.apt_number" } }, { $project: { apt_number: "$_id" } } ])	apartment_rentals
db.Apartment_Bookings.aggregate([ { $match: { booking_status_code: 'Confirmed' } }, { $lookup: { from: 'Apartments', localField: 'apt_id', foreignField: 'apt_id', as: 'apartment_info' } }, { $unwind: '$apartment_info' }, { $project: { apt_number: '$apartment_info.apt_number' } }, { $group: { _id: "$apt_number" } }, { $project: { apt_number: '$_id' } } ])	apartment_rentals
db.Apartment_Bookings.aggregate([ { $match: { booking_status_code: "Confirmed" } }, { $lookup: { from: "Guests", localField: "guest_id", foreignField: "guest_id", as: "guest_info" } }, { $unwind: "$guest_info" }, { $project: { guest_first_name: "$guest_info.guest_first_name", guest_last_name: "$guest_info.guest_last_name" } } ])	apartment_rentals
db.Apartment_Bookings.aggregate([ { $match: { booking_status_code: "Confirmed" } }, { $lookup: { from: "Guests", localField: "guest_id", foreignField: "guest_id", as: "guest_info" } }, { $unwind: "$guest_info" }, { $project: { guest_first_name: "$guest_info.guest_first_name", guest_last_name: "$guest_info.guest_last_name" } } ])	apartment_rentals
db.Apartment_Facilities.aggregate([ { $lookup: { from: "Apartments", localField: "apt_id", foreignField: "apt_id", as: "apt_info" } }, { $unwind: "$apt_info" }, { $match: { "apt_info.bedroom_count": { $gt: 4 } } }, { $project: { facility_code: 1 } } ])	apartment_rentals
db.Apartments.aggregate([ { $match: { bedroom_count: { $gt: 4 } } }, { $lookup: { from: "Apartment_Facilities", localField: "apt_id", foreignField: "apt_id", as: "facilities" } }, { $unwind: "$facilities" }, { $project: { facility_code: "$facilities.facility_code" } } ])	apartment_rentals
db.Apartment_Buildings.aggregate([ { $lookup: { from: "Apartments", localField: "building_id", foreignField: "building_id", as: "apartments" } }, { $unwind: "$apartments" }, { $match: { "apartments.bathroom_count": { $gt: 2 } } }, { $project: { building_address: 1 } } ])	apartment_rentals
db.Apartment_Buildings.aggregate([ { $lookup: { from: "Apartments", localField: "building_id", foreignField: "building_id", as: "apartments" } }, { $unwind: "$apartments" }, { $match: { "apartments.bathroom_count": { $gt: 2 } } }, { $project: { building_address: 1 } } ])	apartment_rentals
db.Apartment_Buildings.aggregate([ { $match: { building_manager: "Kyle" } }, { $lookup: { from: "Apartments", localField: "building_id", foreignField: "building_id", as: "apartments" } }, { $unwind: "$apartments" }, { $project: { apt_type_code: "$apartments.apt_type_code", apt_number: "$apartments.apt_number" } } ])	apartment_rentals
db.Apartment_Buildings.aggregate([ { $match: { building_manager: "Kyle" } }, { $lookup: { from: "Apartments", localField: "building_id", foreignField: "building_id", as: "apartments" } }, { $unwind: "$apartments" }, { $project: { apt_type_code: "$apartments.apt_type_code", apt_number: "$apartments.apt_number" } } ])	apartment_rentals
db.Apartment_Bookings.aggregate([ { $group: { _id: "$booking_status_code", count: { $sum: 1 } } } ])	apartment_rentals
db.Apartment_Bookings.aggregate([ { $group: { _id: "$booking_status_code", count: { $sum: 1 } } } ])	apartment_rentals
db.Apartments.find({}, {apt_number: 1}).sort({room_count: 1})	apartment_rentals
db.Apartments.aggregate([ { $sort: { room_count: 1 } }, { $project: { apt_number: 1 } } ])	apartment_rentals
db.Apartments.find({}, { apt_number: 1 }).sort({ bedroom_count: -1 }).limit(1)	apartment_rentals
db.Apartments.find({}, {apt_number: 1}).sort({bedroom_count: -1}).limit(1)	apartment_rentals
db.Apartments.aggregate([ { $group: { _id: "$apt_type_code", count: { $sum: 1 } } }, { $project: { apt_type_code: "$_id", count: 1 } }, { $sort: { count: 1 } } ])	apartment_rentals
db.Apartments.aggregate([ { $group: { _id: "$apt_type_code", count: { $sum: 1 } } }, { $project: { apt_type_code: "$_id", count: 1 } }, { $sort: { count: 1 } } ])	apartment_rentals
db.Apartments.aggregate([ { $group: { _id: "$apt_type_code", avgRoomCount: { $avg: "$room_count" } } }, { $sort: { avgRoomCount: -1 } }, { $limit: 3 }, { $project: { apt_type_code: "$_id"} } ])	apartment_rentals
db.Apartments.aggregate([ { $group: { _id: "$apt_type_code", avgRoomCount: { $avg: "$room_count" } } }, { $sort: { avgRoomCount: -1 } }, { $limit: 3 }, { $project: { apt_type_code: "$_id"} } ])	apartment_rentals
db.Apartments.aggregate([ { $group: { _id: "$apt_type_code", totalRooms: { $sum: "$room_count" }, bathroomCount: { $first: "$bathroom_count" }, bedroomCount: { $first: "$bedroom_count" } }}, { $sort: { totalRooms: -1 } }, { $limit: 1 }, { $project: { apt_type_code: "$_id", bathroomCount: 1, bedroomCount: 1 }} ])	apartment_rentals
db.Apartments.aggregate([ { $group: { _id: "$apt_type_code", bathroom_count: { $first: "$bathroom_count" }, bedroom_count: { $first: "$bedroom_count" }, total_rooms: { $sum: "$room_count" } } }, { $sort: { total_rooms: -1 } }, { $limit: 1 }, { $project: { apt_type_code: "$_id", bathroom_count: 1, bedroom_count: 1 } } ])	apartment_rentals
db.Apartments.aggregate([ { $group: { _id: "$apt_type_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1, count: 0 } } ])	apartment_rentals
db.Apartments.aggregate([ { $group: { _id: "$apt_type_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { apt_type_code: "$_id"} }])	apartment_rentals
db.Apartments.aggregate([ { $match: { bathroom_count: { $gt: 1 } } }, { $group: { _id: "$apt_type_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { apt_type_code: "$_id"} } ])	apartment_rentals
db.Apartments.aggregate([ { $group: { _id: "$apt_type_code", max_room_count: { $max: "$room_count" }, min_room_count: { $min: "$room_count" } } }, { $project: { apt_type_code: "$_id", max_room_count: 1, min_room_count: 1 } } ])	apartment_rentals
db.Apartments.aggregate([ { $group: { _id: "$apt_type_code", max_room_count: { $max: "$room_count" }, min_room_count: { $min: "$room_count" } } }, { $project: { apt_type_code: "$_id", max_room_count: 1, min_room_count: 1 } } ])	apartment_rentals
db.Guests.aggregate([ { $group: { _id: "$gender_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $project: { gender_code: "$_id", count: 1 } } ])	apartment_rentals
db.Guests.aggregate([ { $group: { _id: "$gender_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $project: { gender_code: "$_id", count: 1 } } ])	apartment_rentals
db.Apartments.aggregate([ { $lookup: { from: "Apartment_Facilities", localField: "apt_id", foreignField: "apt_id", as: "facilities" } }, { $match: { facilities: { $size: 0 } } }, { $count: "no_facility_apartments" } ])	apartment_rentals
db.Apartments.aggregate([ { $lookup: { from: "Apartment_Facilities", localField: "apt_id", foreignField: "apt_id", as: "facilities" } }, { $match: { facilities: [] } }, { $count: "no_facility_count" } ])	apartment_rentals
db.Apartment_Bookings.aggregate([ { $match: { $or: [ { booking_status_code: 'Provisional' }, { booking_status_code: 'Confirmed' } ] } }, { $lookup: { from: 'Apartments', localField: 'apt_id', foreignField: 'apt_id', as: 'apartmentData' } }, { $unwind: '$apartmentData' }, { $group: { _id: '$apartmentData.apt_number', statusCodes: { $addToSet: '$booking_status_code' } } }, { $match: { statusCodes: { $all: ['Provisional', 'Confirmed'] } } }, { $project: { apt_number: '$_id' } } ])	apartment_rentals
db.Apartments.aggregate([ { $lookup: { from: "Apartment_Bookings", localField: "apt_id", foreignField: "apt_id", as: "bookings" } }, { $match: { "bookings.booking_status_code": { $all: ["Confirmed", "Provisional"] } } }, { $group: { _id: "$apt_number" } }, { $project: { apt_number: "$_id" } } ])	apartment_rentals
db.View_Unit_Status.aggregate([ { $match: { available_yn: { $in: [0, 1] } } }, { $group: { _id: "$apt_id", availability: { $addToSet: "$available_yn" } } }, { $match: { availability: { $all: [0, 1] } } }, { $lookup: { from: "Apartments", localField: "_id", foreignField: "apt_id", as: "apartmentDetails" } }, { $unwind: "$apartmentDetails" }, { $project: { apt_number: "$apartmentDetails.apt_number" } } ])	apartment_rentals
db.game.find({}, {Date: 1}).sort({Home_team: -1})	game_injury
db.game.find({}, { Season: 1, Home_team: 1, Away_team: 1 })	game_injury
db.stadium.aggregate([ { $group: { _id: null, maxHomeGames: { $max: "$Home_Games" }, minHomeGames: { $min: "$Home_Games" }, avgHomeGames: { $avg: "$Home_Games" } } }, { $project: { maxHomeGames: 1, minHomeGames: 1, avgHomeGames: 1 } } ])	game_injury
db.injury_accident.find( { Injury: { $ne: "Knee problem" } }, { Player: 1, Number_of_matches: 1, Source: 1 } )	game_injury
db.game.aggregate([ { $lookup: { from: "injury_accident", localField: "id", foreignField: "game_id", as: "injury_info" } }, { $match: { "injury_info.Player": "Walter Samuel" } }, { $project: { Season: 1 } } ])	game_injury
db.game.aggregate([ { $lookup: { from: "injury_accident", localField: "id", foreignField: "game_id", as: "injuries" } }, { $match: { "injuries.1": { $exists: true } } }, { $project: { id: 1, Score: 1, Date: 1 } } ])	game_injury
db.stadium.aggregate([ { $lookup: { from: "game", localField: "id", foreignField: "stadium_id", as: "games" } }, { $unwind: "$games" }, { $lookup: { from: "injury_accident", localField: "games.id", foreignField: "game_id", as: "injuries" } }, { $unwind: "$injuries" }, { $group: { _id: { id: "$id", name: "$name" }, totalInjuries: { $sum: 1 } } }, { $sort: { totalInjuries: -1 } }, { $limit: 1 }, { $project: { id: "$_id.id", name: "$_id.name" } } ])	game_injury
db.stadium.aggregate([ { $lookup: { from: "game", localField: "id", foreignField: "stadium_id", as: "games" } }, { $unwind: "$games" }, { $lookup: { from: "injury_accident", localField: "games.id", foreignField: "game_id", as: "injuries" } }, { $unwind: "$injuries" }, { $group: { _id: { id: "$id", name: "$name" }, injuryCount: { $sum: 1 } } }, { $sort: { injuryCount: -1 } }, { $limit: 1 }, { $project: { id: "$_id.id", name: "$_id.name" } } ])	game_injury
db.game.aggregate([ { $lookup: { from: "injury_accident", localField: "id", foreignField: "game_id", as: "injuries" } }, { $match: { "injuries.Injury": { $in: ["Foot injury", "Knee problem"] } } }, { $lookup: { from: "stadium", localField: "stadium_id", foreignField: "id", as: "stadium_details" } }, { $unwind: "$stadium_details" }, { $project: { Season: "$Season", Stadium: "$stadium_details.name" } } ])	game_injury
db.game.aggregate([ { $lookup: { from: "injury_accident", localField: "id", foreignField: "game_id", as: "accidents" } }, { $match: { accidents: { $size: 0 } } }, { $count: "games_free_of_injury" } ])	game_injury
db.injury_accident.aggregate([ { $lookup: { from: "game", localField: "game_id", foreignField: "id", as: "game_info" } }, { $match: { "game_info.Season": { $gt: 2010 } } }, { $group: { _id: "$Injury" } }, { $count: "distinct_injuries" } ])	game_injury
db.stadium.aggregate([ { $lookup: { from: "game", localField: "id", foreignField: "stadium_id", as: "game_docs" } }, { $unwind: "$game_docs" }, { $lookup: { from: "injury_accident", localField: "game_docs.id", foreignField: "game_id", as: "injury_docs" } }, { $unwind: "$injury_docs" }, { $match: { $or: [{"injury_docs.Player": "Walter Samuel"}, {"injury_docs.Player": "Thiago Motta"}] } }, { $group: { _id: "$name", players: {$addToSet: "$injury_docs.Player"} } }, { $match: { players: {$all: ["Walter Samuel", "Thiago Motta"]} } }, { $project: { name: "$_id" } } ])	game_injury
db.stadium.find({name: {$regex: /Bank/}}, { name: 1})	game_injury
db.game.aggregate([ { $group: { _id: "$stadium_id", gamesHeld: { $sum: 1 } } } ])	game_injury
db.Country.aggregate([ { $lookup: { from: "League", localField: "id", foreignField: "country_id", as: "leagues" } }, { $unwind: "$leagues" }, { $project: { "country_name": "$name", "league_name": "$leagues.name" } } ])	soccer_1
db.Player.aggregate([ { $group: { _id: null, averageWeight: { $avg: "$weight" } } }, { $project: { averageWeight: 1} } ])	soccer_1
db.Player_Attributes.aggregate([ { $match: { overall_rating: { $gt: 80 } } }, { $group: { _id: "$preferred_foot", count: { $sum: 1 } } } ])	soccer_1
db.performance.find({}, { Host: 1}).sort({Attendance: 1})	performance_attendance
db.performance.find({}, {Date: 1, Location: 1})	performance_attendance
db.performance.find( { Location: { $in: ['TD Garden', 'Bell Centre'] } }, { Attendance: 1 } )	performance_attendance
db.performance.aggregate([ { $group: { _id: null, averageAttendance: { $avg: "$Attendance" } } }, { $project: { averageAttendance:1 } }])	performance_attendance
db.performance.find({}, {Date: 1}).sort({Attendance: -1}).limit(1)	performance_attendance
db.performance.aggregate([ { $group: { _id: "$Location", count: { $sum: 1 } } } ])	performance_attendance
db.performance.aggregate([ { $group: { _id: "$Location", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Location: "$_id" } } ])	performance_attendance
db.performance.aggregate([ { $group: { _id: "$Location", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Location: "$_id" } } ])	performance_attendance
db.department.aggregate([ { $group: { _id: null, avgBudget: { $avg: "$budget" } } }, { $lookup: { from: "department", let: { averageBudget: "$avgBudget" }, pipeline: [ { $match: { $expr: { $gt: ["$budget", "$$averageBudget"] } } }, { $project: { dept_name: 1, building: 1 } } ], as: "departmentsAboveAverage" } }, { $unwind: "$departmentsAboveAverage" }, { $replaceRoot: { newRoot: "$departmentsAboveAverage" } } ])	college_2
db.classroom.find({ capacity: { $gte: 50, $lte: 100 } }, { building: 1, room_number: 1 })	college_2
db.classroom.find({ capacity: { $gte: 50, $lte: 100 } }, { building: 1, room_number: 1 })	college_2
db.department.find({}, {dept_name: 1, building: 1}).sort({budget: -1}).limit(1)	college_2
db.department.find({}, {dept_name: 1, building: 1}).sort({budget: -1}).limit(1)	college_2
db.student.find( { dept_name: 'History' }, { name: 1 } ).sort({ tot_cred: -1 }).limit(1)	college_2
db.student.find( {dept_name: 'History'}, {name: 1} ).sort({tot_cred: -1}).limit(1)	college_2
db.student.aggregate([ { $lookup: { from: "advisor", localField: "ID", foreignField: "s_ID", as: "advisor_docs" } }, { $match: { "advisor_docs.0": { $exists: true } } }, { $count: "student_count" } ])	college_2
db.course.aggregate([ { $group: { _id: "$dept_name" } }, { $count: "num_departments" } ])	college_2
db.course.aggregate([ { $match: { dept_name: "Physics" } }, { $group: { _id: "$course_id" } }, { $count: "total_courses" } ])	college_2
db.course.aggregate([ { $lookup: { from: "prereq", localField: "course_id", foreignField: "course_id", as: "prerequisites" } }, { $project: { title: 1, numberOfPrerequisites: { $size: "$prerequisites" } } }, { $match: { numberOfPrerequisites: 2 } }, { $project: { title: 1 } } ])	college_2
db.course.aggregate([ { $lookup: { from: "prereq", localField: "course_id", foreignField: "course_id", as: "prereqs" } }, { $project: { title: 1} }, { $match: { prereqCount: 2 } } ])	college_2
db.course.aggregate([ { $lookup: { from: "prereq", localField: "course_id", foreignField: "course_id", as: "prereqs" } }, { $match: { "prereqs.1": { $exists: true } } }, { $project: { title: 1, credits: 1, dept_name: 1 } } ])	college_2
db.course.aggregate([ { $lookup: { from: "prereq", localField: "course_id", foreignField: "course_id", as: "prereqs" } }, { $match: { "prereqs.1": { $exists: true } } }, { $project: { title: 1, credits: 1, dept_name: 1 } } ])	college_2
db.course.aggregate([ { $lookup: { from: "prereq", localField: "course_id", foreignField: "course_id", as: "prereqs" } }, { $match: { "prereqs": { $size: 0 } } }, { $count: "count" } ])	college_2
db.teaches.aggregate([ { $group: { _id: "$ID" } }, { $count: "distinct_instructors" } ])	college_2
db.department.aggregate([ { $match: { $or: [ { dept_name: "Marketing" }, { dept_name: "Finance" } ] } }, { $group: { _id: null, totalBudget: { $sum: "$budget" } } }, { $project: { totalBudget: 1 } } ])	college_2
db.department.aggregate([ { $match: { dept_name: { $in: ["Marketing", "Finance"] } } }, { $group: { _id: null, totalBudget: { $sum: "$budget" } } } , { $project: { totalBudget: 1 } } ])	college_2
db.instructor.find({name: {$regex: /Soisalon/}}, { dept_name: 1})	college_2
db.instructor.find( { name: { $regex: /Soisalon/ } }, { dept_name: 1 } )	college_2
db.instructor.find( { dept_name: 'Statistics' }, { name: 1 } ).sort({salary: 1}).limit(1)	college_2
db.instructor.find( {dept_name: 'Statistics'}, {name: 1} ).sort({salary: 1}).limit(1)	college_2
db.course.aggregate([ { $match: { dept_name: { $in: ["Statistics", "Psychology"] } } }, { $group: { _id: "$title", departments: { $addToSet: "$dept_name" } } }, { $match: { departments: { $all: ["Statistics", "Psychology"] } } }, { $project: { title: "$_id" } } ])	college_2
db.teaches.aggregate([ { $match: { semester: 'Fall', year: 2009 } }, { $lookup: { from: 'teaches', let: { instructor_id: '$ID' }, pipeline: [ { $match: { $expr: { $and: [ { $eq: ['$ID', '$$instructor_id'] }, { $eq: ['$semester', 'Spring'] }, { $eq: ['$year', 2010] } ] } } } ], as: 'spring_teaching' } }, { $match: { spring_teaching: { $size: 0 } } }, { $project: { ID: 1 } } ])	college_2
db.course.aggregate([ { $group: { _id: "$dept_name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 3 }, { $project: { dept_name: "$_id" } } ])	college_2
db.course.aggregate([ { $group: { _id: "$dept_name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 3 }, { $project: { dept_name: "$_id" } } ])	college_2
db.course.aggregate([ { $group: { _id: "$dept_name", totalCredits: { $sum: "$credits" } } }, { $sort: { totalCredits: -1 } }, { $limit: 1 }, { $project: { dept_name: "$_id" } } ])	college_2
db.course.aggregate([ { $group: { _id: "$dept_name", totalCredits: { $sum: "$credits" } } }, { $sort: { totalCredits: -1 } }, { $limit: 1 }, { $project: { dept_name: "$_id" } } ])	college_2
db.department.find({}, { dept_name: 1}).sort({budget: 1}).limit(1)	college_2
db.department.find({}, { dept_name: 1}).sort({budget: 1}).limit(1)	college_2
db.department.find({}, {dept_name: 1, building: 1}).sort({budget: -1})	college_2
db.department.find({}, {dept_name: 1, building: 1}).sort({budget: -1})	college_2
db.instructor.find({}, {name: 1}).sort({salary: -1}).limit(1)	college_2
db.instructor.find({}, { name: 1 }).sort({ salary: -1 }).limit(1)	college_2
db.course.aggregate([ { $lookup: { from: "teaches", localField: "course_id", foreignField: "course_id", as: "teach_info" } }, { $unwind: "$teach_info" }, { $lookup: { from: "instructor", localField: "teach_info.ID", foreignField: "ID", as: "instructor_info" } }, { $unwind: "$instructor_info" }, { $match: { "teach_info.year": 2008 } }, { $project: { title: 1, instructor_name: "$instructor_info.name" } }, { $sort: { title: 1 } } ])	college_2
db.classroom.aggregate([ { $match: { capacity: { $gt: 50 } } }, { $group: { _id: "$building", count: { $sum: 1 } } } ])	college_2
db.classroom.aggregate([ { $match: { capacity: { $gt: 50 } } }, { $group: { _id: "$building", count: { $sum: 1 } } } ])	college_2
db.classroom.aggregate([ { $group: { _id: "$building", maxCapacity: { $max: "$capacity" }, avgCapacity: { $avg: "$capacity" } } } ])	college_2
db.classroom.aggregate([ { $group: { _id: "$building", maxCapacity: { $max: "$capacity" }, avgCapacity: { $avg: "$capacity" } } } ])	college_2
db.course.aggregate([ { $group: { _id: "$dept_name", totalCredits: { $sum: "$credits" } } } ])	college_2
db.course.aggregate([ { $group: { _id: "$dept_name", totalCredits: { $sum: "$credits" } } } ])	college_2
db.section.aggregate([ { $group: { _id: { semester: "$semester", year: "$year" }, count: { $sum: 1 } } }, { $project: { count: 1, semester: "$_id.semester", year: "$_id.year" } } ])	college_2
db.section.aggregate([ { $group: { _id: { semester: "$semester", year: "$year" }, count: { $sum: 1 } } }, { $project: { count: 1, semester: "$_id.semester", year: "$_id.year" } } ])	college_2
db.section.aggregate([ { $group: { _id: "$year", numberOfCourses: { $sum: 1 } } }, { $sort: { numberOfCourses: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	college_2
db.section.aggregate([ { $group: { _id: "$year", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { year: "$_id" } } ])	college_2
db.section.aggregate([ { $group: { _id: { year: "$year", semester: "$semester" }, coursesCount: { $sum: 1 } } }, { $sort: { coursesCount: -1 } }, { $limit: 1 }, { $project: { year: "$_id.year", semester: "$_id.semester" } } ])	college_2
db.student.aggregate([ { $group: { _id: "$dept_name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { dept_name: "$_id" } } ])	college_2
db.student.aggregate([ { $group: { _id: "$dept_name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { dept_name: "$_id" } } ])	college_2
db.student.aggregate([ { $group: { _id: "$dept_name", totalStudents: { $sum: 1 } } } ])	college_2
db.student.aggregate([ { $group: { _id: "$dept_name", count: { $sum: 1 } } } ])	college_2
db.takes.aggregate([ { $group: { _id: { semester: "$semester", year: "$year" }, count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { semester: "$_id.semester", year: "$_id.year" } } ])	college_2
db.takes.aggregate([ { $group: { _id: { semester: "$semester", year: "$year" }, count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { semester: "$_id.semester", year: "$_id.year" } } ])	college_2
db.course.aggregate([ { $lookup: { from: "prereq", localField: "course_id", foreignField: "course_id", as: "prerequisites" } }, { $match: { "title": "International Finance" } }, { $unwind: "$prerequisites" }, { $lookup: { from: "course", localField: "prerequisites.prereq_id", foreignField: "course_id", as: "prereq_course" } }, { $unwind: "$prereq_course" }, { $project: { "_id": 0, "title": "$prereq_course.title" } } ])	college_2
db.course.aggregate([ { $match: { course_id: { $in: db.prereq.distinct("prereq_id", { course_id: { $in: db.course.distinct("course_id", { title: "International Finance" }) } }) } } }, { $project: { title: 1 } } ])	college_2
db.course.aggregate([ { $lookup: { from: "prereq", localField: "course_id", foreignField: "course_id", as: "prereq_info" }}, { $unwind: "$prereq_info" }, { $lookup: { from: "course", localField: "prereq_info.prereq_id", foreignField: "course_id", as: "prereq_course" }}, { $unwind: "$prereq_course" }, { $match: { "prereq_course.title": "Differential Geometry" } }, { $project: { title: 1 } } ])	college_2
db.course.aggregate([ { $lookup: { from: "section", localField: "course_id", foreignField: "course_id", as: "section_info" } }, { $unwind: "$section_info" }, { $match: { "section_info.building": "Chandler", "section_info.semester": "Fall", "section_info.year": 2010 } }, { $project: { title: 1 } } ])	college_2
db.course.aggregate([ { $lookup: { from: "section", localField: "course_id", foreignField: "course_id", as: "section_info" } }, { $match: { "section_info.building": "Chandler", "section_info.semester": "Fall", "section_info.year": 2010 } }, { $project: { title: 1 } } ])	college_2
db.course.aggregate([ { $lookup: { from: "prereq", localField: "course_id", foreignField: "course_id", as: "prereq_info" } }, { $unwind: "$prereq_info" }, { $match: { "title": "Mobile Computing" } }, { $lookup: { from: "course", localField: "prereq_info.prereq_id", foreignField: "course_id", as: "prerequisite_course" } }, { $unwind: "$prerequisite_course" }, { $project: { "title": "$prerequisite_course.title" } } ])	college_2
db.course.aggregate([ { $lookup: { from: "prereq", localField: "course_id", foreignField: "prereq_id", as: "prerequisites" } }, { $unwind: "$prerequisites" }, { $lookup: { from: "course", localField: "prerequisites.course_id", foreignField: "course_id", as: "required_course" } }, { $unwind: "$required_course" }, { $match: { "required_course.title": "Mobile Computing" } }, { $project: { title: 1 } } ])	college_2
db.student.aggregate([ { $sort: { "tot_cred": -1 } }, { $limit: 1 }, { $lookup: { from: "advisor", localField: "ID", foreignField: "s_ID", as: "advisor_info" } }, { $unwind: "$advisor_info" }, { $lookup: { from: "instructor", localField: "advisor_info.i_ID", foreignField: "ID", as: "instructor_info" } }, { $unwind: "$instructor_info" }, { $project: { name: "$instructor_info.name" } } ])	college_2
db.advisor.aggregate([ { $lookup: { from: "instructor", localField: "i_ID", foreignField: "ID", as: "instructor_info" } }, { $lookup: { from: "student", localField: "s_ID", foreignField: "ID", as: "student_info" } }, { $unwind: "$instructor_info" }, { $unwind: "$student_info" }, { $sort: { "student_info.tot_cred": -1 } }, { $limit: 1 }, { $project: { name: "$instructor_info.name" } } ])	college_2
db.instructor.aggregate([ { $lookup: { from: "teaches", localField: "ID", foreignField: "ID", as: "teaching" } }, { $match: { teaching: { $size: 0 } } }, { $project: { name: 1 } } ])	college_2
db.instructor.aggregate([ { $lookup: { from: "teaches", localField: "ID", foreignField: "ID", as: "teaching_info" } }, { $match: { "teaching_info": { $size: 0 } } }, { $project: { name: 1 } } ])	college_2
db.instructor.aggregate([ { $lookup: { from: "teaches", localField: "ID", foreignField: "ID", as: "teaching" } }, { $match: { teaching: { $size: 0 } } }, { $project: { ID: 1 } } ])	college_2
db.instructor.aggregate([ { $lookup: { from: "teaches", localField: "ID", foreignField: "ID", as: "teaching" } }, { $match: { "teaching": { $size: 0 } } }, { $project: { ID: 1 } } ])	college_2
db.instructor.aggregate([ { $group: { _id: "$dept_name", avgSalary: { $avg: "$salary" } } }, { $sort: { avgSalary: -1 } }, { $limit: 1 }, { $project: { dept_name: "$_id" } } ])	college_2
db.instructor.aggregate([ { $group: { _id: "$dept_name", avgSalary: { $avg: "$salary" } } }, { $sort: { avgSalary: -1 } }, { $limit: 1 }, { $project: { dept_name: "$_id" } } ])	college_2
db.course.aggregate([ { $match: { dept_name: "Psychology" } }, { $lookup: { from: "section", localField: "course_id", foreignField: "course_id", as: "section_info" } }, { $unwind: "$section_info" }, { $project: { building: "$section_info.building", room_number: "$section_info.room_number", semester: "$section_info.semester", year: "$section_info.year" } }, { $sort: { title: 1 } } ])	college_2
db.course.aggregate([ { $match: { dept_name: "Psychology" } }, { $lookup: { from: "section", localField: "course_id", foreignField: "course_id", as: "section_info" } }, { $unwind: "$section_info" }, { $project: { building: "$section_info.building", room_number: "$section_info.room_number", semester: "$section_info.semester", year: "$section_info.year" } }, { $sort: { title: 1 } } ])	college_2
db.instructor.find({dept_name: 'Comp. Sci.'}, {name: 1})	college_2
db.instructor.find({dept_name: 'Comp. Sci.'}, {name: 1})	college_2
db.instructor.find( { dept_name: 'Comp. Sci.', salary: { $gt: 80000 } }, { name: 1 } )	college_2
db.instructor.find({ dept_name: 'Comp. Sci.', salary: { $gt: 80000 } }, { name: 1 })	college_2
db.section.aggregate([ { $match: { $or: [{ semester: 'Fall', year: 2009 }, { semester: 'Spring', year: 2010 }] } }, { $group: { _id: "$course_id" } } ])	college_2
db.section.find( { $or: [ { semester: 'Fall', year: 2009 }, { semester: 'Spring', year: 2010 } ] }, { course_id: 1 } )	college_2
db.section.aggregate([ { $match: { semester: "Fall", year: 2009 } }, { $group: { _id: "$course_id" } }, { $lookup: { from: "section", let: { course_id: "$_id" }, pipeline: [ { $match: { $expr: { $and: [ { $eq: ["$course_id", "$$course_id"] }, { $eq: ["$semester", "Spring"] }, { $eq: ["$year", 2010] } ] } } }, { $project: { course_id: 1 } } ], as: "spring_courses" } }, { $match: { "spring_courses": { $size: 0 } } }, { $project: { _id: 1 } } ])	college_2
db.section.aggregate([ { $match: { semester: "Fall", year: 2009 } }, { $group: { _id: "$course_id" } }, { $lookup: { from: "section", let: { course_id: "$_id" }, pipeline: [ { $match: { $expr: { $and: [ { $eq: ["$course_id", "$$course_id"] }, { $eq: ["$semester", "Spring"] }, { $eq: ["$year", 2010] } ] } } }, { $project: { course_id: 1 } } ], as: "spring_courses" } }, { $match: { "spring_courses": { $size: 0 } } }, { $project: { _id: 1 } } ])	college_2
db.teaches.aggregate([ { $match: { semester: 'Spring', year: 2010 } }, { $group: { _id: '$ID' } }, { $count: 'total_instructors' } ])	college_2
db.teaches.aggregate([ { $match: { semester: 'Spring', year: 2010 } }, { $group: { _id: "$ID" } }, { $count: "distinct_instructors" } ])	college_2
db.debate.find({}, {Venue: 1}).sort({Num_of_Audience: 1})	debate
db.debate.find({}, {Date: 1, Venue: 1})	debate
db.debate.find({Num_of_Audience: {$gt: 150}}, {Date: 1})	debate
db.people.find({Age: {$in: [35, 36]}}, {Name: 1})	debate
db.people.find({}, { Party: 1}).sort({Age: 1}).limit(1)	debate
db.people.aggregate([ { $group: { _id: "$Party", count: { $sum: 1 } } }, { $project: { Party: "$_id", count: 1 } } ])	debate
db.people.aggregate([ { $group: { _id: "$Party", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Party: "$_id" } } ])	debate
db.debate_people.aggregate([ { $lookup: { from: "debate", localField: "Debate_ID", foreignField: "Debate_ID", as: "debate_info" } }, { $lookup: { from: "people", localField: "Affirmative", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$debate_info" }, { $unwind: "$people_info" }, { $project: { Name: "$people_info.Name", Date: "$debate_info.Date", Venue: "$debate_info.Venue" } } ])	debate
db.debate_people.aggregate([ { $lookup: { from: "debate", localField: "Debate_ID", foreignField: "Debate_ID", as: "debate_info" } }, { $lookup: { from: "people", localField: "Negative", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $unwind: "$debate_info" }, { $project: { Name: "$people_info.Name", Date: "$debate_info.Date", Venue: "$debate_info.Venue" } }, { $sort: { Name: 1 } } ])	debate
db.debate_people.aggregate([ { $lookup: { from: "debate", localField: "Debate_ID", foreignField: "Debate_ID", as: "debate_info" } }, { $unwind: "$debate_info" }, { $match: { "debate_info.Num_of_Audience": { $gt: 200 } } }, { $lookup: { from: "people", localField: "Affirmative", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $project: { Name: "$people_info.Name" } } ])	debate
db.debate_people.aggregate([ { $lookup: { from: "people", localField: "Affirmative", foreignField: "People_ID", as: "affirmative_people" } }, { $unwind: "$affirmative_people" }, { $group: { _id: "$affirmative_people.Name", count: { $sum: 1 } } }, { $project: { Name: "$_id", Count: "$count" } } ])	debate
db.debate_people.aggregate([ { $lookup: { from: "people", localField: "Negative", foreignField: "People_ID", as: "negative_people" } }, { $unwind: "$negative_people" }, { $group: { _id: "$negative_people.Name", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Name: "$_id" } } ])	debate
db.people.find( { People_ID: { $nin: db.debate_people.distinct("Affirmative") } }, { Name: 1 } )	debate
db.Customers.find({}, { Customer_Details: 1}).sort({Customer_Details: 1})	insurance_and_eClaims
db.Customers.aggregate([ { $lookup: { from: "Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "policies" } }, { $lookup: { from: "Claim_Headers", localField: "policies.Policy_ID", foreignField: "Policy_ID", as: "claims" } }, { $sort: { "Customer_Details": 1 } }, { $project: { Customer_Details: 1 } } ])	insurance_and_eClaims
db.Customers.aggregate([ { $match: { "Customer_Details": "Dayana Robel" } }, { $lookup: { from: "Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "policies" } }, { $unwind: "$policies" }, { $project: { "_id": 0, "Policy_Type_Code": "$policies.Policy_Type_Code" } } ])	insurance_and_eClaims
db.Customers.aggregate([ { $match: { "Customer_Details": "Dayana Robel" } }, { $lookup: { from: "Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "policies" } }, { $unwind: "$policies" }, { $project: { "_id": 0, "Policy_Type_Code": "$policies.Policy_Type_Code" } } ])	insurance_and_eClaims
db.Policies.aggregate([ { $group: { _id: "$Policy_Type_Code", count: { $sum: 1 } }}, { $sort: { count: -1 }}, { $limit: 1 }, { $project: { _id: 1 }} ])	insurance_and_eClaims
db.Policies.aggregate([ { $group: { _id: "$Policy_Type_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Policy_Type_Code: "$_id" } } ])	insurance_and_eClaims
db.Policies.aggregate([ { $group: { _id: "$Policy_Type_Code", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Policy_Type_Code: "$_id" } } ])	insurance_and_eClaims
db.Policies.aggregate([ { $group: { _id: "$Policy_Type_Code", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Policy_Type_Code: "$_id" } } ])	insurance_and_eClaims
db.Claim_Headers.aggregate([ { $group: { _id: null, totalAmountPaid: { $sum: "$Amount_Piad" }, averageAmountPaid: { $avg: "$Amount_Piad" } } }, { $project: { totalAmountPaid: 1, averageAmountPaid: 1 } } ])	insurance_and_eClaims
db.Claim_Headers.aggregate([ { $group: { _id: null, totalAmountPaid: { $sum: "$Amount_Piad" }, averageAmountPaid: { $avg: "$Amount_Piad" } } }, { $project: { totalAmountPaid: 1, averageAmountPaid: 1 } } ])	insurance_and_eClaims
db.Customers.aggregate([ { $lookup: { from: "Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "policies" } }, { $unwind: "$policies" }, { $lookup: { from: "Claim_Headers", localField: "policies.Policy_ID", foreignField: "Policy_ID", as: "claims" } }, { $unwind: "$claims" }, { $group: { _id: "$Customer_ID", maxClaim: { $max: "$claims.Amount_Claimed" }, customerDetails: { $first: "$Customer_Details" } } }, { $sort: { maxClaim: -1 } }, { $limit: 1 }, { $project: { customerDetails: "$customerDetails" } } ])	insurance_and_eClaims
db.Customers.aggregate([ { $lookup: { from: "Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "Policies" } }, { $unwind: "$Policies" }, { $lookup: { from: "Claim_Headers", localField: "Policies.Policy_ID", foreignField: "Policy_ID", as: "Claim_Headers" } }, { $unwind: "$Claim_Headers" }, { $group: { _id: "$Customer_Details", minAmountPaid: { $min: "$Claim_Headers.Amount_Piad" } } }, { $sort: { minAmountPaid: 1 } }, { $limit: 1 }, { $project: { Customer_Details: "$_id" } } ])	insurance_and_eClaims
db.Customers.aggregate([ { $lookup: { from: "Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "policies" } }, { $match: { "policies": { $size: 0 } } }, { $project: { Customer_Details: 1 } } ])	insurance_and_eClaims
db.Customers.aggregate([ { $lookup: { from: "Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "policies" } }, { $match: { "policies": { $size: 0 } } }, { $project: { Customer_Details: 1 } } ])	insurance_and_eClaims
db.Claims_Processing.aggregate([ { $group: { _id: "$Claim_Stage_ID", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Claims_Processing_Stages", localField: "_id", foreignField: "Claim_Stage_ID", as: "stage_details" } }, { $unwind: "$stage_details" }, { $project: { claim_status_name: "$stage_details.Claim_Status_Name" } } ])	insurance_and_eClaims
db.Claims_Processing.aggregate([ { $lookup: { from: "Claims_Processing_Stages", localField: "Claim_Stage_ID", foreignField: "Claim_Stage_ID", as: "claim_stage" } }, { $unwind: "$claim_stage" }, { $group: { _id: "$Claim_Stage_ID", count: { $sum: 1 }, claim_status_name: { $first: "$claim_stage.Claim_Status_Name" } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { claim_status_name: 1 } } ])	insurance_and_eClaims
db.Customers.find( { Customer_Details: { $regex: /Diana/, $options: 'i' } }, { Customer_Details: 1 } )	insurance_and_eClaims
db.Customers.find( { Customer_Details: { $regex: /Diana/, $options: 'i' } }, { Customer_Details: 1 } )	insurance_and_eClaims
db.Customers.aggregate([ { $lookup: { from: "Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "policies" } }, { $match: { "policies.Policy_Type_Code": "Deputy" } }, { $project: { Customer_Details: 1 } } ])	insurance_and_eClaims
db.Policies.aggregate([ { $match: { Policy_Type_Code: 'Deputy' } }, { $lookup: { from: 'Customers', localField: 'Customer_ID', foreignField: 'Customer_ID', as: 'customer_details' } }, { $unwind: '$customer_details' }, { $project: { 'customer_details.Customer_Details': 1 } }, { $group: { _id: '$customer_details.Customer_Details' } }, { $project: { Customer_Details: '$_id' } } ])	insurance_and_eClaims
db.Customers.aggregate([ { $lookup: { from: "Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "policy_info" } }, { $match: { "policy_info.Policy_Type_Code": { $in: ["Deputy", "Uniform"] } } }, { $group: { _id: "$Customer_ID", Customer_Details: { $first: "$Customer_Details" } } }, { $project: { Customer_Details: 1 } } ])	insurance_and_eClaims
db.Customers.aggregate([ { $lookup: { from: "Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "policies" } }, { $match: { "policies.Policy_Type_Code": { $in: ["Deputy", "Uniform"] } } }, { $project: { Customer_Details: 1 } } ])	insurance_and_eClaims
db.Policies.aggregate([ { $group: { _id: "$Policy_Type_Code", count: { $sum: 1 } } }, { $project: { policy_type_code: "$_id", count: 1 } } ])	insurance_and_eClaims
db.Policies.aggregate([ { $group: { _id: "$Policy_Type_Code", count: { $sum: 1 } } } ])	insurance_and_eClaims
db.Policies.aggregate([ { $lookup: { from: "Customers", localField: "Customer_ID", foreignField: "Customer_ID", as: "customer_details" } }, { $unwind: "$customer_details" }, { $group: { _id: "$customer_details.Customer_Details", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { customer_details: "$_id" } } ])	insurance_and_eClaims
db.Claims_Processing_Stages.findOne({ Claim_Status_Name: 'Open' }, { Claim_Status_Description: 1 })	insurance_and_eClaims
db.Claims_Processing_Stages.find({ Claim_Status_Name: 'Open' }, { Claim_Status_Description: 1 })	insurance_and_eClaims
db.Claims_Processing.aggregate([ { $group: { _id: "$Claim_Outcome_Code" } }, { $count: "distinct_claim_outcome_codes" } ])	insurance_and_eClaims
db.Customers.aggregate([ { $match: { customer_first_name: "Meaghan", customer_last_name: "Keeling" } }, { $lookup: { from: "Accounts", localField: "customer_id", foreignField: "customer_id", as: "accounts" } }, { $unwind: "$accounts" }, { $project: { account_name: "$accounts.account_name", other_account_details: "$accounts.other_account_details" } } ])	customers_and_invoices
db.Customers.aggregate([ { $match: { customer_first_name: "Meaghan", customer_last_name: "Keeling" } }, { $lookup: { from: "Accounts", localField: "customer_id", foreignField: "customer_id", as: "accounts" } }, { $unwind: "$accounts" }, { $project: { account_name: "$accounts.account_name", other_account_details: "$accounts.other_account_details" } } ])	customers_and_invoices
db.Customers.aggregate([ { $lookup: { from: "Accounts", localField: "customer_id", foreignField: "customer_id", as: "accounts" } }, { $match: { "accounts.account_name": "900" } }, { $project: { customer_first_name: 1, customer_last_name: 1 } } ])	customers_and_invoices
db.Customers.aggregate([ { $lookup: { from: "Accounts", localField: "customer_id", foreignField: "customer_id", as: "accounts" } }, { $match: { "accounts.account_name": "900" } }, { $project: { customer_first_name: 1, customer_last_name: 1 } } ])	customers_and_invoices
db.Customers.aggregate([ { $lookup: { from: "Accounts", localField: "customer_id", foreignField: "customer_id", as: "customer_accounts" } }, { $match: { customer_accounts: { $size: 0 } } }, { $count: "no_account_customers" } ])	customers_and_invoices
db.Customers.aggregate([ { $lookup: { from: "Accounts", localField: "customer_id", foreignField: "customer_id", as: "accounts" } }, { $match: { accounts: { $size: 0 } } }, { $count: "no_account_customers" } ])	customers_and_invoices
db.Customers.aggregate([ { $lookup: { from: "Accounts", localField: "customer_id", foreignField: "customer_id", as: "accounts" } }, { $match: { "accounts.0": { $exists: true } } }, { $project: { customer_first_name: 1, customer_last_name: 1, phone_number: 1 } } ])	customers_and_invoices
db.Customers.aggregate([ { $lookup: { from: "Accounts", localField: "customer_id", foreignField: "customer_id", as: "accounts" } }, { $match: { "accounts.0": { $exists: true } } }, { $project: { customer_first_name: 1, customer_last_name: 1, phone_number: 1 } } ])	customers_and_invoices
db.Customers.aggregate([ { $lookup: { from: "Accounts", localField: "customer_id", foreignField: "customer_id", as: "accounts" } }, { $match: { accounts: { $size: 0 } } }, { $project: { customer_id: 1 } } ])	customers_and_invoices
db.Customers.find({ customer_id: { $nin: db.Accounts.distinct("customer_id") } }, { customer_id: 1 })	customers_and_invoices
db.Accounts.aggregate([ { $group: { _id: "$customer_id", count: { $sum: 1 } } }, { $project: { customer_id: "$_id", count: 1 } } ])	customers_and_invoices
db.Accounts.aggregate([ { $group: { _id: "$customer_id", count: { $sum: 1 } } } ])	customers_and_invoices
db.Accounts.aggregate([ { $group: { _id: "$customer_id", count: { $sum: 1 } }}, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Customers", localField: "_id", foreignField: "customer_id", as: "customerDetails" }}, { $unwind: "$customerDetails" }, { $project: { customer_id: "$_id", customer_first_name: "$customerDetails.customer_first_name", customer_last_name: "$customerDetails.customer_last_name" }} ])	customers_and_invoices
db.Customers.aggregate([ { $lookup: { from: "Accounts", localField: "customer_id", foreignField: "customer_id", as: "accounts" } }, { $match: { "accounts.2": { $exists: true } } }, { $project: { customer_first_name: 1, customer_id: 1 } } ])	customers_and_invoices
db.Customers.aggregate([ { $lookup: { from: "Accounts", localField: "customer_id", foreignField: "customer_id", as: "accounts" } }, { $match: { "accounts.1": { $exists: true } } }, { $project: { customer_first_name: 1, customer_id: 1 } } ])	customers_and_invoices
db.Customers.aggregate([ { $group: { _id: "$gender", count: { $sum: 1 } } } ])	customers_and_invoices
db.Customers.aggregate([ { $group: { _id: "$gender", count: { $sum: 1 } } } ])	customers_and_invoices
db.Financial_Transactions.aggregate([ { $lookup: { from: "Accounts", localField: "account_id", foreignField: "account_id", as: "account_info" } }, { $match: { "account_info.account_name": "337" } }, { $count: "transaction_count" } ])	customers_and_invoices
db.Financial_Transactions.aggregate([ { $lookup: { from: "Accounts", localField: "account_id", foreignField: "account_id", as: "acc" } }, { $match: { "acc.account_name": "337" } }, { $count: "transaction_count" } ])	customers_and_invoices
db.Financial_Transactions.aggregate([ { $group: { _id: null, average: { $avg: "$transaction_amount" } } }, { $lookup: { from: "Financial_Transactions", let: { avgAmount: "$average" }, pipeline: [ { $match: { $expr: { $gt: [ "$transaction_amount", "$$avgAmount" ] } } }, { $project: { transaction_id: "$transaction_id" } } ], as: "transactions" } }, { $unwind: "$transactions" }, { $replaceRoot: { newRoot: "$transactions" } } ])	customers_and_invoices
db.Financial_Transactions.aggregate([ { $group: { _id: null, averageAmount: { $avg: "$transaction_amount" } } }, { $lookup: { from: "Financial_Transactions", let: { avgAmount: "$averageAmount" }, pipeline: [ { $match: { $expr: { $gt: [ "$transaction_amount", "$$avgAmount" ] } } }, { $project: { transaction_id: 1 } } ], as: "transactions" } }, { $unwind: "$transactions" }, { $replaceRoot: { newRoot: "$transactions" } } ])	customers_and_invoices
db.Financial_Transactions.aggregate([ { $lookup: { from: "Accounts", localField: "account_id", foreignField: "account_id", as: "account_info" } }, { $unwind: "$account_info" }, { $group: { _id: "$account_id", account_name: { $first: "$account_info.account_name" }, transaction_count: { $sum: 1 } } }, { $project: { account_name: 1, account_id: "$_id", transaction_count: 1 } } ])	customers_and_invoices
db.Financial_Transactions.aggregate([ { $lookup: { from: "Accounts", localField: "account_id", foreignField: "account_id", as: "account_info" } }, { $unwind: "$account_info" }, { $group: { _id: "$account_id", account_name: { $first: "$account_info.account_name" }, count: { $sum: 1 } } }, { $project: { account_name: 1, account_id: "$_id", count: 1 } } ])	customers_and_invoices
db.Financial_Transactions.aggregate([ { $group: { _id: "$account_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { account_id: "$_id" } } ])	customers_and_invoices
db.Financial_Transactions.aggregate([ { $group: { _id: "$account_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { account_id: "$_id" } } ])	customers_and_invoices
db.Financial_Transactions.aggregate([ { $lookup: { from: "Accounts", localField: "account_id", foreignField: "account_id", as: "account_info" } }, { $unwind: "$account_info" }, { $group: { _id: "$account_id", account_name: { $first: "$account_info.account_name" }, count: { $sum: 1 } } }, { $match: { count: { $gte: 4 } } }, { $project: { account_id: "$_id", account_name: 1 } } ])	customers_and_invoices
db.Financial_Transactions.aggregate([ { $group: { _id: "$account_id", count: { $sum: 1 } } }, { $match: { count: { $gte: 4 } } }, { $lookup: { from: "Accounts", localField: "_id", foreignField: "account_id", as: "account" } }, { $project: { account_id: "$_id", account_name: { $arrayElemAt: ["$account.account_name", 0] } } } ])	customers_and_invoices
db.Financial_Transactions.aggregate([ { $group: { _id: "$invoice_number", count: { $sum: 1 } } } ])	customers_and_invoices
db.Financial_Transactions.aggregate([ { $group: { _id: "$invoice_number", count: { $sum: 1 } } } ])	customers_and_invoices
db.Invoices.aggregate([ { $group: { _id: "$order_id", count: { $sum: 1 } } } ])	customers_and_invoices
db.Invoices.aggregate([ { $group: { _id: "$order_id", count: { $sum: 1 } } } ])	customers_and_invoices
db.Products.aggregate([ { $lookup: { from: "Order_Items", localField: "product_id", foreignField: "product_id", as: "order_items" } }, { $match: { "order_items": { $size: 0 } } }, { $project: { product_name: 1 } } ])	customers_and_invoices
db.Products.aggregate([ { $lookup: { from: "Order_Items", localField: "product_id", foreignField: "product_id", as: "order_items" } }, { $match: { "order_items": { $size: 0 } } }, { $project: { product_name: 1 } } ])	customers_and_invoices
db.Order_Items.aggregate([ { $group: { _id: "$order_id", count: { $sum: 1 } } }, { $project: { order_id: "$_id", count: 1 } } ])	customers_and_invoices
db.Order_Items.aggregate([ { $group: { _id: "$order_id", count: { $sum: 1 } } } ])	customers_and_invoices
db.Order_Items.aggregate([ { $group: { _id: "$product_id", uniqueOrders: { $addToSet: "$order_id" } } }, { $project: { _id: 1, uniqueOrders: { $size: "$uniqueOrders" } } } ])	customers_and_invoices
db.Order_Items.aggregate([ { $group: { _id: "$product_id", count: { $addToSet: "$order_id" } } }, { $project: { product_id: "$_id", count: { $size: "$count" } } } ])	customers_and_invoices
db.Products.aggregate([ { $lookup: { from: "Order_Items", localField: "product_id", foreignField: "product_id", as: "OrderItems" } }, { $unwind: "$OrderItems" }, { $lookup: { from: "Orders", localField: "OrderItems.order_id", foreignField: "order_id", as: "Orders" } }, { $unwind: "$Orders" }, { $group: { _id: "$product_name", customerCount: { $sum: 1 } } }, { $project: { product_name: "$_id", customerCount: 1 } } ])	customers_and_invoices
db.Order_Items.aggregate([ { $group: { _id: "$order_id", product_count: { $addToSet: "$product_id" } } }, { $project: { order_id: "$_id", product_count: { $size: "$product_count" } } } ])	customers_and_invoices
db.Order_Items.aggregate([ { $group: { _id: "$order_id", uniqueProducts: { $addToSet: "$product_id" } } }, { $project: { order_id: "$_id", productCount: { $size: "$uniqueProducts" } } } ])	customers_and_invoices
db.Products.aggregate([ { $lookup: { from: "Order_Items", localField: "product_id", foreignField: "product_id", as: "order_items" } }, { $match: { "order_items": { $size: 0 } } }, { $count: "not_ordered_products" } ])	customers_and_invoices
db.church.find({}, { Name: 1 }).sort({ Open_Date: -1 })	wedding
db.church.find( { Open_Date: { $gte: 1830, $lte: 1840 } }, { Organized_by: 1, Name: 1 } )	wedding
db.church.aggregate([ { $group: { _id: "$Open_Date", count: { $sum: 1 } } }, { $project: { Open_Date: "$_id", count: 1 } } ])	wedding
db.church.find({}, {Name: 1, Open_Date: 1}).sort({Open_Date: -1}).limit(3)	wedding
db.people.aggregate([ { $group: { _id: null, minAge: { $min: "$Age" }, maxAge: { $max: "$Age" }, avgAge: { $avg: "$Age" } } }, { $project: { minAge:1, maxAge:1, avgAge:1 } } ])	wedding
db.people.aggregate([ { $group: { _id: null, avgAge: { $avg: "$Age" } } }, { $lookup: { from: "people", let: { avgAge: "$avgAge" }, pipeline: [ { $match: { $expr: { $lt: ["$Age", "$$avgAge"] } } }, { $project: { Name: 1, Country: 1 } } ], as: "peopleBelowAvgAge" } }, { $unwind: "$peopleBelowAvgAge" }, { $replaceRoot: { newRoot: "$peopleBelowAvgAge" } } ])	wedding
db.wedding.aggregate([ { $lookup: { from: "people", let: { male_id: "$Male_ID", female_id: "$Female_ID" }, pipeline: [ { $match: { $expr: { $or: [{ $eq: ["$People_ID", "$$male_id"] }, { $eq: ["$People_ID", "$$female_id"] }] } } }, { $project: { Name: 1 } } ], as: "people" } }, { $match: { Year: { $gt: 2014 } } }, { $project: { Male_Name: { $arrayElemAt: ["$people.Name", 0] }, Female_Name: { $arrayElemAt: ["$people.Name", 1] } } } ])	wedding
db.wedding.aggregate([ { $lookup: { from: "people", localField: "Male_ID", foreignField: "People_ID", as: "male" } }, { $lookup: { from: "people", localField: "Female_ID", foreignField: "People_ID", as: "female" } }, { $lookup: { from: "church", localField: "Church_ID", foreignField: "Church_ID", as: "church" } }, { $match: { $or: [ { "male.Age": { $gt: 30 } }, { "female.Age": { $gt: 30 } } ] } }, { $project: { "church.Name": 1 } }, { $unwind: "$church" }, { $replaceRoot: { newRoot: "$church" } }, { $project: { Name: 1 } } ])	wedding
db.people.aggregate([ { $group: { _id: "$Country", count: { $sum: 1 } } }, { $project: { country: "$_id", count: 1 } } ])	wedding
db.wedding.aggregate([ { $match: { Year: 2016 } }, { $group: { _id: "$Church_ID" } }, { $count: "total_churches" } ])	wedding
db.artist.find({}, { Name: 1, Age: 1, Country: 1}).sort({Year_Join: 1})	theme_gallery
db.artist.find({}, { Name: 1, Age: 1, Country: 1}).sort({Year_Join: 1})	theme_gallery
db.artist.find({Country: {$ne: 'United States'}}, {Name: 1, Year_Join: 1})	theme_gallery
db.artist.find( { "Country": { "$ne": "United States" } }, { "_id": 0, "Name": 1, "Year_Join": 1 } )	theme_gallery
db.artist.aggregate([ { $match: { Country: "United States" } }, { $group: { _id: null, avgAge: { $avg: "$Age" }, minAge: { $min: "$Age" } } }, { $project: { avgAge:1, minAge:1 } } ])	theme_gallery
db.artist.aggregate([ { $match: { Country: "United States" } }, { $group: { _id: null, avgAge: { $avg: "$Age" }, minAge: { $min: "$Age" } }}, { $project: { avgAge:1, minAge:1 } } ])	theme_gallery
db.artist.find({}, { Name: 1}).sort({Year_Join: -1}).limit(1)	theme_gallery
db.artist.find({}, { Name: 1}).sort({Year_Join: -1}).limit(1)	theme_gallery
db.exhibition.aggregate([ { $match: { Year: { $gte: 2005 } } }, { $count: "total_exhibitions" } ])	theme_gallery
db.exhibition.find({ Ticket_Price: { $lt: 15 } }, { Theme: 1, Year: 1 })	theme_gallery
db.exhibition.find({ "Ticket_Price": { "$lt": 15 } }, { "Theme": 1, "Year": 1, "_id": 0 })	theme_gallery
db.exhibition.aggregate([ { $lookup: { from: "artist", localField: "Artist_ID", foreignField: "Artist_ID", as: "artist_info" } }, { $unwind: "$artist_info" }, { $group: { _id: "$Artist_ID", name: { $first: "$artist_info.Name" }, country: { $first: "$artist_info.Country" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { name: 1, country: 1 } } ])	theme_gallery
db.artist.aggregate([ { $lookup: { from: "exhibition", localField: "Artist_ID", foreignField: "Artist_ID", as: "exhibitions" } }, { $match: { exhibitions: { $size: 0 } } }, { $project: { Name: 1 } } ])	theme_gallery
db.artist.aggregate([ { $lookup: { from: "exhibition", localField: "Artist_ID", foreignField: "Artist_ID", as: "exhibitions" } }, { $match: { exhibitions: { $size: 0 } } }, { $project: { Name: 1 } } ])	theme_gallery
db.exhibition.aggregate([ { $lookup: { from: "artist", localField: "Artist_ID", foreignField: "Artist_ID", as: "artist_info" } }, { $unwind: "$artist_info" }, { $group: { _id: null, averageTicketPrice: { $avg: "$Ticket_Price" } } }, { $lookup: { from: "exhibition", let: { avgPrice: "$averageTicketPrice" }, pipeline: [ { $match: { $expr: { $gt: ["$Ticket_Price", "$$avgPrice"] } } }, { $lookup: { from: "artist", localField: "Artist_ID", foreignField: "Artist_ID", as: "artist_info" } }, { $unwind: "$artist_info" }, { $project: { theme: "$Theme", name: "$artist_info.Name" } } ], as: "exhibitions_above_avg" } }, { $unwind: "$exhibitions_above_avg" }, { $replaceRoot: { newRoot: "$exhibitions_above_avg" } } ])	theme_gallery
db.exhibition.aggregate([ { $match: { Year: { $lt: 2009 } } }, { $group: { _id: null, avgTicketPrice: { $avg: "$Ticket_Price" }, minTicketPrice: { $min: "$Ticket_Price" }, maxTicketPrice: { $max: "$Ticket_Price" } } }, { $project: { avgTicketPrice: 1, minTicketPrice: 1, maxTicketPrice: 1 } } ])	theme_gallery
db.exhibition.aggregate([ { $match: { Year: { $lt: 2009 } } }, { $group: { _id: null, avgTicketPrice: { $avg: "$Ticket_Price" }, minTicketPrice: { $min: "$Ticket_Price" }, maxTicketPrice: { $max: "$Ticket_Price" } } }, { $project: { avgTicketPrice: 1, minTicketPrice: 1, maxTicketPrice: 1 } } ])	theme_gallery
db.exhibition.aggregate([ { $sort: { Ticket_Price: -1 } }, { $project: { Theme: 1, Year: 1 } } ])	theme_gallery
db.exhibition.aggregate([ { $sort: { "Ticket_Price": -1 } }, { $project: { "_id": 0, "Theme": 1, "Year": 1 } } ])	theme_gallery
db.exhibition.aggregate([ { $match: { Year: 2004 } }, { $lookup: { from: "exhibition_record", localField: "Exhibition_ID", foreignField: "Exhibition_ID", as: "record" } }, { $unwind: "$record" }, { $project: { Theme: 1, Date: "$record.Date", Attendance: "$record.Attendance" } } ])	theme_gallery
db.exhibition.aggregate([ { $match: { Year: 2004 } }, { $lookup: { from: "exhibition_record", localField: "Exhibition_ID", foreignField: "Exhibition_ID", as: "recordDetails" } }, { $unwind: "$recordDetails" }, { $project: { theme: "$Theme", date: "$recordDetails.Date", attendance: "$recordDetails.Attendance" } } ])	theme_gallery
db.artist.aggregate([ { $lookup: { from: "exhibition", localField: "Artist_ID", foreignField: "Artist_ID", as: "exhibitions" } }, { $match: { "exhibitions.Year": { $ne: 2004 } } }, { $project: { Name: 1 } } ])	theme_gallery
db.artist.aggregate([ { $lookup: { from: "exhibition", localField: "Artist_ID", foreignField: "Artist_ID", as: "exhibitions" } }, { $match: { "exhibitions.Year": { $ne: 2004 } } }, { $project: { Name: 1 } } ])	theme_gallery
db.exhibition_record.aggregate([ { $lookup: { from: "exhibition", localField: "Exhibition_ID", foreignField: "Exhibition_ID", as: "exhibition_info" } }, { $match: { $or: [ {"exhibition_info.Ticket_Price": {$lt: 10}}, {"Attendance": {$gt: 100}} ] } }, { $group: { _id: null, count: {$sum: 1} } }, { $project: { count: 1 } } ])	theme_gallery
db.artist.aggregate([ { $lookup: { from: "exhibition", localField: "Artist_ID", foreignField: "Artist_ID", as: "exhibitions" } }, { $unwind: "$exhibitions" }, { $lookup: { from: "exhibition_record", localField: "exhibitions.Exhibition_ID", foreignField: "Exhibition_ID", as: "exhibition_records" } }, { $unwind: "$exhibition_records" }, { $group: { _id: "$Artist_ID", name: { $first: "$Name" }, avgAttendance: { $avg: "$exhibition_records.Attendance" } } }, { $match: { avgAttendance: { $gt: 200 } } }, { $project: { name: 1 } } ])	theme_gallery
db.item.find({title: 'orange'}, { i_id: 1})	epinions_1
db.item.find({})	epinions_1
db.review.aggregate([ { $group: { _id: null, averageRating: { $avg: "$rating" }, maxRating: { $max: "$rating" } } }, { $project: { averageRating: 1, maxRating:1 } } ])	epinions_1
db.review.aggregate([ { $group: { _id: null, highestRank: { $min: "$rank" } } }, { $project: { highestRank: 1 } } ])	epinions_1
db.item.aggregate([ { $lookup: { from: "review", localField: "i_id", foreignField: "i_id", as: "reviews" } }, { $match: { reviews: { $size: 0 } } }, { $count: "no_reviews_count" } ])	epinions_1
db.useracct.aggregate([ { $lookup: { from: "review", localField: "u_id", foreignField: "u_id", as: "user_reviews" } }, { $match: { "user_reviews": { $size: 0 } } }, { $project: { name: 1 } } ])	epinions_1
db.item.aggregate([ { $lookup: { from: "review", localField: "i_id", foreignField: "i_id", as: "review_info" } }, { $match: { "review_info.rating": 10 } }, { $project: { title: 1 } } ])	epinions_1
db.item.aggregate([ { $lookup: { from: "review", localField: "i_id", foreignField: "i_id", as: "reviews" } }, { $unwind: "$reviews" }, { $match: { "reviews.rank": { $gt: 3 }, "reviews.rating": { $gt: 5 } } }, { $group: { _id: "$i_id", title: { $first: "$title" } } }, { $project: { title:1 } } ])	epinions_1
db.item.aggregate([ { $lookup: { from: "review", localField: "i_id", foreignField: "i_id", as: "reviews" } }, { $unwind: "$reviews" }, { $group: { _id: "$i_id", title: { $first: "$title" }, avgRating: { $avg: "$reviews.rating" } } }, { $sort: { avgRating: 1 } }, { $limit: 1 }, { $project: { title: 1 } } ])	epinions_1
db.item.find({}, {title: 1}).sort({title: 1})	epinions_1
db.useracct.aggregate([ { $lookup: { from: "review", localField: "u_id", foreignField: "u_id", as: "reviews" } }, { $project: { name: 1 } }, { $sort: { reviewCount: -1 } }, { $limit: 1 } ])	epinions_1
db.item.aggregate([ { $lookup: { from: "review", localField: "i_id", foreignField: "i_id", as: "reviews" } }, { $project: { title: 1, i_id: 1} }, { $sort: { avgRating: -1 } }, { $limit: 1 } ])	epinions_1
db.item.aggregate([ { $lookup: { from: "review", localField: "i_id", foreignField: "i_id", as: "reviews" } }, { $unwind: "$reviews" }, { $group: { _id: "$i_id", title: { $first: "$title" }, avgRank: { $avg: "$reviews.rank" } } }, { $sort: { avgRank: -1 } }, { $limit: 1 }, { $project: { title: 1, i_id: 1} } ])	epinions_1
db.useracct.aggregate([ { $lookup: { from: "review", localField: "u_id", foreignField: "u_id", as: "reviews" } }, { $unwind: "$reviews" }, { $group: { _id: "$u_id", name: { $first: "$name" }, averageRating: { $avg: "$reviews.rating" } } }, { $project: { name: 1, averageRating: 1 } } ])	epinions_1
db.useracct.aggregate([ { $lookup: { from: "review", localField: "u_id", foreignField: "u_id", as: "reviews" } }, { $unwind: "$reviews" }, { $sort: { "reviews.rating": -1 } }, { $limit: 1 }, { $project: { name: 1 } } ])	epinions_1
db.useracct.aggregate([ { $lookup: { from: "trust", localField: "u_id", foreignField: "source_u_id", as: "trust_info" } }, { $unwind: "$trust_info" }, { $group: { _id: "$u_id", name: { $first: "$name" }, avgTrust: { $avg: "$trust_info.trust" } } }, { $sort: { avgTrust: -1 } }, { $limit: 1 }, { $project: { name: 1 } } ])	epinions_1
db.useracct.aggregate([ { $lookup: { from: "trust", localField: "u_id", foreignField: "target_u_id", as: "trust_info" } }, { $unwind: "$trust_info" }, { $sort: { "trust_info.trust": 1 } }, { $limit: 1 }, { $project: { name: 1 } } ])	epinions_1
db.item.aggregate([ { $lookup: { from: "review", localField: "i_id", foreignField: "i_id", as: "reviews" } }, { $match: { "reviews": { $size: 0 } } }, { $project: { title: 1 } } ])	epinions_1
db.useracct.aggregate([ { $lookup: { from: "review", localField: "u_id", foreignField: "u_id", as: "reviews" } }, { $match: { reviews: { $size: 0 } } }, { $project: { name: 1 } } ])	epinions_1
db.useracct.aggregate([ { $lookup: { from: "review", localField: "u_id", foreignField: "u_id", as: "reviews" } }, { $match: { reviews: { $size: 0 } } }, { $count: "no_reviews" } ])	epinions_1
db.item.aggregate([ { $lookup: { from: "review", localField: "i_id", foreignField: "i_id", as: "reviews" } }, { $match: { reviews: { $size: 0 } } }, { $count: "num_items_without_reviews" } ])	epinions_1
db.player.find({}, {Player_name: 1}).sort({Votes: 1})	riding_club
db.player.find({}, {Gender: 1, Occupation: 1})	riding_club
db.player.find({Occupation: {$ne: 'Researcher'}}, {Player_name: 1, Residence: 1})	riding_club
db.player.find( { Residence: { $in: ['Brandon', 'Birtle'] } }, { Sponsor_name: 1 } )	riding_club
db.player.find({}, {Player_name: 1}).sort({Votes: -1}).limit(1)	riding_club
db.player.aggregate([ { $group: { _id: "$Occupation", count: { $sum: 1 } } }, { $project: { Occupation: "$_id", count: 1 } } ])	riding_club
db.player.aggregate([ { $group: { _id: "$Residence", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Residence: "$_id" } } ])	riding_club
db.player_coach.aggregate([ { $lookup: { from: "coach", localField: "Coach_ID", foreignField: "Coach_ID", as: "coach_info" } }, { $lookup: { from: "player", localField: "Player_ID", foreignField: "Player_ID", as: "player_info" } }, { $project: { Player_name: { $arrayElemAt: ["$player_info.Player_name", 0] }, Coach_name: { $arrayElemAt: ["$coach_info.Coach_name", 0] } } } ])	riding_club
db.player.aggregate([ { $lookup: { from: "player_coach", localField: "Player_ID", foreignField: "Player_ID", as: "player_coach" } }, { $unwind: "$player_coach" }, { $lookup: { from: "coach", localField: "player_coach.Coach_ID", foreignField: "Coach_ID", as: "coach" } }, { $unwind: "$coach" }, { $project: { Player_name: 1, Coach_name: "$coach.Coach_name" } }, { $sort: { Votes: -1 } } ])	riding_club
db.player.find( { Player_ID: { $nin: db.player_coach.distinct("Player_ID") } }, { Player_name: 1 } )	riding_club
db.player.aggregate([ { $match: { Gender: { $in: ["M", "F"] } } }, { $group: { _id: "$Residence", genders: { $addToSet: "$Gender" } } }, { $match: { genders: { $all: ["M", "F"] } } }, { $project: { Residence: "$_id" } } ])	riding_club
db.coach.aggregate([ { $group: { _id: "$Club_ID", coachesCount: { $sum: 1 } } }, { $lookup: { from: "club", localField: "_id", foreignField: "Club_ID", as: "clubInfo" } }, { $project: { Club_ID: "$_id", Club_name: { $arrayElemAt: ["$clubInfo.Club_name", 0] }, Number_of_Coaches: "$coachesCount" } } ])	riding_club
db.coach.aggregate([ { $group: { _id: "$Club_ID", numCoaches: { $sum: 1 } } }, { $sort: { numCoaches: -1 } }, { $limit: 1 }, { $lookup: { from: "match_result", localField: "_id", foreignField: "Club_ID", as: "matchResults" } }, { $unwind: "$matchResults" }, { $project: { club_id: "$_id", gold: "$matchResults.Gold" } } ])	riding_club
db.gymnast.find({}, {Total_Points: 1}).sort({Total_Points: -1})	gymnast
db.gymnast.find({}, {Total_Points: 1}).sort({Total_Points: -1})	gymnast
db.gymnast.find({}, {Total_Points: 1}).sort({Floor_Exercise_Points: -1})	gymnast
db.gymnast.find({}, {Total_Points: 1}).sort({Floor_Exercise_Points: -1})	gymnast
db.gymnast.aggregate([ { $group: { _id: null, averageHorizontalBarPoints: { $avg: "$Horizontal_Bar_Points" } } }, { $project: { averageHorizontalBarPoints: 1 } } ])	gymnast
db.gymnast.aggregate([ { $group: { _id: null, averageHorizontalBarPoints: { $avg: "$Horizontal_Bar_Points" } } }, { $project: { averageHorizontalBarPoints: 1 } } ])	gymnast
db.people.find({}, { Name: 1 }).sort({ Name: 1 })	gymnast
db.people.find({}, {Name: 1}).sort({Name: 1})	gymnast
db.gymnast.aggregate([ { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $project: { Name: "$gymnast_info.Name" } } ])	gymnast
db.gymnast.aggregate([ { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $project: { Name: "$gymnast_info.Name" } } ])	gymnast
db.gymnast.aggregate([ { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $match: { "gymnast_info.Hometown": { $ne: "Santo Domingo" } } }, { $project: { Name: "$gymnast_info.Name" } } ])	gymnast
db.gymnast.aggregate([ { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $match: { "gymnast_info.Hometown": { $ne: "Santo Domingo" } } }, { $project: { Name: "$gymnast_info.Name" } } ])	gymnast
db.people.find({}, {Age: 1}).sort({Height: -1}).limit(1)	gymnast
db.people.find({}, {Age: 1}).sort({Height: -1}).limit(1)	gymnast
db.people.find({}, { Name: 1}).sort({Age: -1}).limit(5)	gymnast
db.people.find({}, {Name: 1}).sort({Age: -1}).limit(5)	gymnast
db.gymnast.aggregate([ { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $sort: { "gymnast_info.Age": 1 } }, { $limit: 1 }, { $project: { Total_Points: 1 } } ])	gymnast
db.gymnast.aggregate([ { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $sort: { "gymnast_info.Age": 1 } }, { $limit: 1 }, { $project: { Total_Points: 1 } } ])	gymnast
db.gymnast.aggregate([ { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $group: { _id: null, averageAge: { $avg: "$gymnast_info.Age" } } }, { $project: { averageAge: 1 } } ])	gymnast
db.gymnast.aggregate([ { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $group: { _id: null, averageAge: { $avg: "$gymnast_info.Age" } } }, { $project: { averageAge: 1 } } ])	gymnast
db.gymnast.aggregate([ { $match: { Total_Points: { $gt: 57.5 } } }, { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $group: { _id: "$gymnast_info.Hometown" } }, { $project: { Hometown: "$_id" } } ])	gymnast
db.gymnast.aggregate([ { $match: { Total_Points: { $gt: 57.5 } } }, { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $group: { _id: "$gymnast_info.Hometown" } }, { $project: { Hometown: "$_id" } } ])	gymnast
db.gymnast.aggregate([ { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $group: { _id: "$gymnast_info.Hometown", count: { $sum: 1 } } } ])	gymnast
db.gymnast.aggregate([ { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $group: { _id: "$gymnast_info.Hometown", count: { $sum: 1 } } } ])	gymnast
db.gymnast.aggregate([ { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $group: { _id: "$gymnast_info.Hometown", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { hometown: "$_id" } }])	gymnast
db.gymnast.aggregate([ { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $group: { _id: "$gymnast_info.Hometown", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { hometown: "$_id" } } ])	gymnast
db.gymnast.aggregate([ { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $group: { _id: "$gymnast_info.Hometown", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Hometown: "$_id" } } ])	gymnast
db.gymnast.aggregate([ { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $group: { _id: "$gymnast_info.Hometown", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Hometown: "$_id" } } ])	gymnast
db.gymnast.aggregate([ { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $project: { Name: "$gymnast_info.Name" } }, { $sort: { Height: 1 } } ])	gymnast
db.gymnast.aggregate([ { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $project: { Name: "$gymnast_info.Name" } }, { $sort: { Height: 1 } } ])	gymnast
db.people.aggregate([ { $match: { Age: { $gt: 23 } } }, { $group: { _id: null, oldHometowns: { $addToSet: "$Hometown" } } }, { $lookup: { from: "people", let: { oldHometowns: "$oldHometowns" }, pipeline: [ { $match: { $expr: { $and: [{ $lt: ["$Age", 20] }, { $in: ["$Hometown", "$$oldHometowns"] }] } } }, { $group: { _id: null, youngHometowns: { $addToSet: "$Hometown" } } } ], as: "youngData" } }, { $unwind: "$youngData" }, { $project: { sharedHometowns: { $setIntersection: ["$oldHometowns", "$youngData.youngHometowns"] } } }, { $unwind: "$sharedHometowns" }, { $replaceRoot: { newRoot: { Hometown: "$sharedHometowns" } } } ])	gymnast
db.people.aggregate([ { $match: { $or: [ { Age: { $gt: 23 } }, { Age: { $lt: 20 } } ] } }, { $group: { _id: "$Hometown", ageCategories: { $addToSet: { $cond: [{ $gt: ["$Age", 23] }, "older", "younger"] } } } }, { $match: { ageCategories: { $all: ["older", "younger"] } } }, { $project: { Hometown: "$_id" } } ])	gymnast
db.gymnast.aggregate([ { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $project: { Age: "$gymnast_info.Age"} }, { $sort: { Total_Points: -1 } } ])	gymnast
db.gymnast.aggregate([ { $lookup: { from: "people", localField: "Gymnast_ID", foreignField: "People_ID", as: "gymnast_info" } }, { $unwind: "$gymnast_info" }, { $project: { "_id": 0, "Age": "$gymnast_info.Age" } }, { $sort: { "Total_Points": -1 } } ])	gymnast
db.CHECKING.aggregate([ { $group: { _id: null, totalCheckingBalance: { $sum: "$balance" } } }, { $project: { totalCheckingBalance: 1 } } ])	small_bank_1
db.CHECKING.aggregate([ { $group: { _id: null, totalBalance: { $sum: "$balance" } } }, { $project: { totalBalance: 1 } } ])	small_bank_1
db.CHECKING.aggregate([ { $group: { _id: null, averageBalance: { $avg: "$balance" } } }, { $project: { averageBalance: 1 } } ])	small_bank_1
db.CHECKING.aggregate([ { $group: { _id: null, averageBalance: { $avg: "$balance" } } }, { $project: { averageBalance: 1 } } ])	small_bank_1
db.ACCOUNTS.aggregate([ { $match: { name: /ee/ } }, { $lookup: { from: "CHECKING", localField: "custid", foreignField: "custid", as: "checking_info" } }, { $unwind: "$checking_info" }, { $project: { balance: "$checking_info.balance" } } ])	small_bank_1
db.ACCOUNTS.find({}, { name: 1 }).sort({ name: 1 })	small_bank_1
db.ACCOUNTS.aggregate([ { $lookup: { from: "CHECKING", localField: "custid", foreignField: "custid", as: "checking_accounts" } }, { $group: { _id: "$name", num_checking_accounts: { $sum: { $size: "$checking_accounts" } } } }, { $project: { name: "$_id", num_checking_accounts: 1 } } ])	small_bank_1
db.SAVINGS.aggregate([ { $lookup: { from: "ACCOUNTS", localField: "custid", foreignField: "custid", as: "account_info" } }, { $unwind: "$account_info" }, { $group: { _id: "$account_info.name", totalBalance: { $sum: "$balance" } } }, { $project: { name: "$_id", totalBalance: 1 } } ])	small_bank_1
db.CHECKING.aggregate([ { $sort: { balance: -1 } }, { $limit: 1 }, { $lookup: { from: "SAVINGS", localField: "custid", foreignField: "custid", as: "savings_info" } }, { $unwind: "$savings_info" }, { $project: { balance: "$savings_info.balance" } } ])	small_bank_1
db.CHECKING.aggregate([ { $sort: { balance: -1 } }, { $limit: 1 }, { $lookup: { from: "SAVINGS", localField: "custid", foreignField: "custid", as: "savings_info" } }, { $unwind: "$savings_info" }, { $project: { balance: "$savings_info.balance" } } ])	small_bank_1
db.SAVINGS.aggregate([ { $sort: { balance: 1 } }, { $limit: 1 }, { $lookup: { from: "CHECKING", localField: "custid", foreignField: "custid", as: "checking" } }, { $unwind: "$checking" }, { $lookup: { from: "ACCOUNTS", localField: "custid", foreignField: "custid", as: "account" } }, { $unwind: "$account" }, { $project: { balance: "$checking.balance", name: "$account.name" } } ])	small_bank_1
db.ACCOUNTS.aggregate([ { $lookup: { from: "CHECKING", localField: "custid", foreignField: "custid", as: "checkingInfo" } }, { $lookup: { from: "SAVINGS", localField: "custid", foreignField: "custid", as: "savingsInfo" } }, { $unwind: "$checkingInfo" }, { $unwind: "$savingsInfo" }, { $match: { $expr: { $gt: ["$checkingInfo.balance", "$savingsInfo.balance"] } } }, { $project: { name: 1 } } ])	small_bank_1
db.SAVINGS.aggregate([ { $sort: { balance: -1 } }, { $limit: 3 }, { $lookup: { from: "ACCOUNTS", localField: "custid", foreignField: "custid", as: "account_info" } }, { $unwind: "$account_info" }, { $project: { name: "$account_info.name", balance: 1 } } ])	small_bank_1
db.browser.find({}, {name: 1}).sort({market_share: -1})	browser_web
db.browser.find({}, { id: 1, name: 1, market_share: 1})	browser_web
db.browser.aggregate([ { $group: { _id: null, max_market_share: { $max: "$market_share" }, min_market_share: { $min: "$market_share" }, avg_market_share: { $avg: "$market_share" } } }, { $project: { max_market_share: 1, min_market_share:1, avg_market_share:1 } } ])	browser_web
db.Web_client_accelerator.find( { Connection: { $ne: 'Broadband' } }, { name: 1, Operating_system: 1 } )	browser_web
db.Web_client_accelerator.aggregate([ { $match: { name: 'CProxy' } }, { $lookup: { from: 'accelerator_compatible_browser', localField: 'id', foreignField: 'accelerator_id', as: 'compatible_browsers' } }, { $unwind: '$compatible_browsers' }, { $match: { 'compatible_browsers.compatible_since_year': { $gt: 1998 } } }, { $lookup: { from: 'browser', localField: 'compatible_browsers.browser_id', foreignField: 'id', as: 'browser_details' } }, { $unwind: '$browser_details' }, { $project: { name: '$browser_details.name' } } ])	browser_web
db.Web_client_accelerator.aggregate([ { $lookup: { from: "accelerator_compatible_browser", localField: "id", foreignField: "accelerator_id", as: "compatible_browsers" } }, { $match: { "compatible_browsers": { $exists: true, $ne: [] } } }, { $addFields: { num_compatible_browsers: { $size: "$compatible_browsers" } } }, { $match: { num_compatible_browsers: { $gte: 2 } } }, { $project: { id: 1, name: 1 } } ])	browser_web
db.accelerator_compatible_browser.aggregate([ { $group: { _id: "$browser_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "browser", localField: "_id", foreignField: "id", as: "browser_info" } }, { $unwind: "$browser_info" }, { $project: { _id: "$browser_info.id", name: "$browser_info.name" } } ])	browser_web
db.Web_client_accelerator.aggregate([ { $lookup: { from: "accelerator_compatible_browser", localField: "id", foreignField: "accelerator_id", as: "compatible_browsers" } }, { $match: { "compatible_browsers": { $eq: [] } } }, { $count: "num_incompatible_accelerators" } ])	browser_web
db.Web_client_accelerator.aggregate([ { $lookup: { from: "accelerator_compatible_browser", localField: "id", foreignField: "accelerator_id", as: "accelerator_compatible_browser" } }, { $unwind: "$accelerator_compatible_browser" }, { $lookup: { from: "browser", localField: "accelerator_compatible_browser.browser_id", foreignField: "id", as: "browser" } }, { $unwind: "$browser" }, { $match: { "browser.market_share": { $gt: 15 } } }, { $group: { _id: "$name" } }, { $project: { name: "$_id" } } ])	browser_web
db.Web_client_accelerator.aggregate([ { $match: { name: { $in: ["CACHEbox", "Fasterfox"] } } }, { $lookup: { from: "accelerator_compatible_browser", localField: "id", foreignField: "accelerator_id", as: "compatible_browsers" } }, { $unwind: "$compatible_browsers" }, { $lookup: { from: "browser", localField: "compatible_browsers.browser_id", foreignField: "id", as: "browser_info" } }, { $unwind: "$browser_info" }, { $group: { _id: "$browser_info.name", count: { $sum: 1 } } }, { $match: { count: 2 } }, { $project: { name: "$_id" } } ])	browser_web
db.Web_client_accelerator.aggregate([ { $lookup: { from: "accelerator_compatible_browser", localField: "id", foreignField: "accelerator_id", as: "compatibilities" } }, { $lookup: { from: "browser", localField: "compatibilities.browser_id", foreignField: "id", as: "compatible_browsers" } }, { $match: { "compatible_browsers.name": { $ne: "Opera" } } }, { $project: { name: 1, Operating_system: 1 } } ])	browser_web
db.Web_client_accelerator.find( { name: { $regex: /Opera/, $options: 'i' } }, { name: 1 } )	browser_web
db.Web_client_accelerator.aggregate([ { $group: { _id: "$Operating_system", count: { $sum: 1 } } } ])	browser_web
db.accelerator_compatible_browser.aggregate([ { $lookup: { from: "browser", localField: "browser_id", foreignField: "id", as: "browser_info" } }, { $unwind: "$browser_info" }, { $lookup: { from: "Web_client_accelerator", localField: "accelerator_id", foreignField: "id", as: "accelerator_info" } }, { $unwind: "$accelerator_info" }, { $project: { "browser_name": "$browser_info.name", "accelerator_name": "$accelerator_info.name", "compatible_since_year": 1 } }, { $sort: { "compatible_since_year": -1 } }, { $project: { "browser_name": 1, "accelerator_name": 1 } } ])	browser_web
db.wrestler.find({}, {Name: 1}).sort({Days_held: -1})	wrestler
db.wrestler.find({}, {Name: 1}).sort({Days_held: -1})	wrestler
db.wrestler.find({}, {Name: 1}).sort({Days_held: 1}).limit(1)	wrestler
db.wrestler.find({}, {Name: 1}).sort({Days_held: 1}).limit(1)	wrestler
db.wrestler.find({}, {Name: 1, Location: 1})	wrestler
db.wrestler.find({}, {Name: 1, Location: 1})	wrestler
db.Elimination.find({Team: 'Team Orton'}, {Elimination_Move: 1})	wrestler
db.Elimination.find({Team: 'Team Orton'}, {Elimination_Move: 1})	wrestler
db.Elimination.aggregate([ { $group: { _id: "$Team", NumberOfEliminations: { $sum: 1 } }} ])	wrestler
db.Elimination.aggregate([ { $group: { _id: "$Team", count: { $sum: 1 } } }, { $match: { count: { $gt: 3 } } }, { $project: { Team: "$_id" } } ])	wrestler
db.wrestler.find({}, {Reign: 1, Days_held: 1})	wrestler
db.wrestler.find({}, {Reign: 1, Days_held: 1})	wrestler
db.wrestler.aggregate([ { $group: { _id: "$Reign", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { reign: "$_id" } } ])	wrestler
db.wrestler.aggregate([ { $group: { _id: "$Reign", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Reign: "$_id" } } ])	wrestler
db.wrestler.aggregate([ { $group: { _id: "$Location", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Location: "$_id" } } ])	wrestler
db.wrestler.aggregate([ { $group: { _id: "$Location", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Location: "$_id" } } ])	wrestler
db.Elimination.aggregate([ { $match: { $or: [ { Eliminated_By: "Orton" }, { Eliminated_By: "Benjamin" } ] } }, { $group: { _id: "$Team", count: { $sum: 1 } } }, { $match: { count: 2 } }, { $project: { Team: "$_id" } } ])	wrestler
db.Elimination.aggregate([ { $match: { $or: [ { Eliminated_By: "Orton" }, { Eliminated_By: "Benjamin" } ] } }, { $group: { _id: "$Team", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Team: "$_id" } } ])	wrestler
db.School.find({}, {School_name: 1}).sort({School_name: 1})	school_finance
db.School.find({}, {School_name: 1, Location: 1, Mascot: 1})	school_finance
db.School.aggregate([ { $group: { _id: null, totalEnrollment: { $sum: "$Enrollment" }, averageEnrollment: { $avg: "$Enrollment" } } }, { $project: { totalEnrollment: 1, averageEnrollment: 1 } } ])	school_finance
db.School.find({}, {School_name: 1}).sort({Enrollment: 1}).limit(1)	school_finance
db.School.aggregate([ { $group: { _id: null, averageEnrollment: { $avg: "$Enrollment" }, maximumEnrollment: { $max: "$Enrollment" }, minimumEnrollment: { $min: "$Enrollment" } } }, { $project: { averageEnrollment: 1, maximumEnrollment: 1, minimumEnrollment: 1 } } ])	school_finance
db.School.aggregate([ { $group: { _id: "$County", numberOfSchools: { $sum: 1 }, totalEnrollment: { $sum: "$Enrollment" } } }, { $project: { county: "$_id", numberOfSchools: 1, totalEnrollment: 1 } } ])	school_finance
db.endowment.aggregate([ { $group: { _id: "$donator_name", totalAmount: { $sum: "$amount" } } }, { $sort: { totalAmount: -1 } } ])	school_finance
db.endowment.aggregate([ { $group: { _id: "$donator_name", minAmount: { $min: "$amount" } } }, { $match: { minAmount: { $gte: 9 } } }, { $project: { donator_name: "$_id" } } ])	school_finance
db.endowment.find({}, {amount: 1, donator_name: 1}).sort({amount: -1}).limit(1)	school_finance
db.building.find({}, { Name: 1, Street_address: 1, Floors: 1}).sort({Floors: 1})	protein_institute
db.building.find({}, { Name: 1}).sort({Height_feet: -1}).limit(1)	protein_institute
db.building.aggregate([ { $group: { _id: null, averageFloors: { $avg: "$Floors" }, maxFloors: { $max: "$Floors" }, minFloors: { $min: "$Floors" } } } , { $project: { averageFloors: 1, maxFloors:1, minFloors:1 } }])	protein_institute
db.building.aggregate([ { $group: { _id: null, avgHeight: { $avg: "$Height_feet" }, avgFloors: { $avg: "$Floors" } } }, { $project: { avgHeight: 1, avgFloors: 1 } }, { $lookup: { from: "building", let: { avgHeight: "$avgHeight", avgFloors: "$avgFloors" }, pipeline: [ { $match: { $expr: { $or: [ { $gt: ["$Height_feet", "$$avgHeight"] }, { $gt: ["$Floors", "$$avgFloors"] } ] } } } ], as: "buildings" } }, { $project: { count: { $size: "$buildings" } } } ])	protein_institute
db.building.find( { "Height_feet": {$gte: 200}, "Floors": {$gte: 20} }, { "Name": 1, "_id": 0 } )	protein_institute
db.Institution.find( { Founded: { $gt: 1990 }, Type: 'Private' }, { Institution: 1, Location: 1 } )	protein_institute
db.Institution.aggregate([ { $group: { _id: "$Type", NumberOfInstitutions: { $sum: 1 }, TotalEnrollment: { $sum: "$Enrollment" } } }, { $project: { InstitutionType: "$_id", NumberOfInstitutions: 1, TotalEnrollment: 1 } } ])	protein_institute
db.Institution.find( { $and: [ { Founded: { $gt: 1990 } }, { Enrollment: { $gte: 1000 } } ] }, { Type: 1 } )	protein_institute
db.Institution.aggregate([ { $lookup: { from: "protein", localField: "Institution_id", foreignField: "Institution_id", as: "protein_data" } }, { $match: { "protein_data": { $size: 0 } } }, { $count: "no_protein_institutions" } ])	protein_institute
db.cinema.aggregate([ { $group: { _id: "$Location", maxCapacity: { $max: "$Capacity" } } }, { $match: { maxCapacity: { $lte: 800 } } }, { $project: { _id: 1 } } ])	cinema
db.cinema.aggregate([ { $match: { Openning_year: { $in: [2010, 2011] } } }, { $group: { _id: "$Location", openingYears: { $addToSet: "$Openning_year" } } }, { $match: { openingYears: { $all: [2010, 2011] } } }, { $project: { _id: 1 } } ])	cinema
db.cinema.find({}, { Name: 1, Openning_year: 1, Capacity: 1 })	cinema
db.cinema.aggregate([ { $group: { _id: null, avgCapacity: { $avg: "$Capacity" } } }, { $lookup: { from: "cinema", let: { averageCapacity: "$avgCapacity" }, pipeline: [ { $match: { $expr: { $gt: [ "$Capacity", "$$averageCapacity" ] } } }, { $project: { Name: 1, Location: 1 } } ], as: "cinemasWithMoreCapacity" } }, { $unwind: "$cinemasWithMoreCapacity" }, { $replaceRoot: { newRoot: "$cinemasWithMoreCapacity" } } ])	cinema
db.cinema.find({}, { Name: 1, Openning_year: 1}).sort({Openning_year: -1})	cinema
db.cinema.find({}, { Name: 1, Location: 1}).sort({Capacity: -1}).limit(1)	cinema
db.cinema.aggregate([ { $match: { Openning_year: { $gte: 2011 } } }, { $group: { _id: null, averageCapacity: { $avg: "$Capacity" }, minimumCapacity: { $min: "$Capacity" }, maximumCapacity: { $max: "$Capacity" } } }, { $project: { avgCapacity: "$averageCapacity", minCapacity: "$minimumCapacity", maxCapacity: "$maximumCapacity" } } ])	cinema
db.cinema.aggregate([ { $group: { _id: "$Location", count: { $sum: 1 } } }, { $project: { Location: "$_id", count: 1 } } ])	cinema
db.cinema.aggregate([ { $match: { Capacity: { $gt: 300 } } }, { $group: { _id: "$Location", numOfCinemas: { $sum: 1 } } }, { $match: { numOfCinemas: { $gte: 2 } } }, { $project: { Location: "$_id" } } ])	cinema
db.film.aggregate([ { $group: { _id: "$Directed_by", count: { $sum: 1 } } }, { $project: { Director: "$_id", Number_of_films: "$count" } } ])	cinema
db.schedule.aggregate([ { $lookup: { from: "cinema", localField: "Cinema_ID", foreignField: "Cinema_ID", as: "cinema_info" } }, { $unwind: "$cinema_info" }, { $group: { _id: "$cinema_info.Name", totalShowTimes: { $sum: "$Show_times_per_day" } } }, { $project: { name: "$_id", totalShowTimes: 1 } } ])	cinema
db.schedule.aggregate([ { $lookup: { from: "film", localField: "Film_ID", foreignField: "Film_ID", as: "film_info" } }, { $unwind: "$film_info" }, { $group: { _id: "$film_info.Directed_by", totalShowTimes: { $sum: "$Show_times_per_day" } } }, { $sort: { totalShowTimes: -1 } }, { $limit: 1 }, { $project: { Director: "$_id" } } ])	cinema
db.Customers.aggregate([ { $lookup: { from: "Discount_Coupons", localField: "coupon_id", foreignField: "coupon_id", as: "coupon_info" } }, { $match: { "coupon_info.coupon_amount": 500 } }, { $project: { good_or_bad_customer: 1 } } ])	products_for_hire
db.Payments.aggregate([ { $group: { _id: "$customer_id", totalAmountPaid: { $sum: "$amount_paid" } } }, { $sort: { totalAmountPaid: -1 } }, { $limit: 1 }, { $project: { customer_id: "$_id", totalAmountPaid: 1 } } ])	products_for_hire
db.Products_Booked.aggregate([ { $group: { _id: "$product_id", totalBooked: { $sum: 1 } } }, { $match: { totalBooked: 3 } }, { $project: { product_id: "$_id" } } ])	products_for_hire
db.Products_Booked.aggregate([ { $match: { booked_amount: 102.76 } }, { $lookup: { from: "Products_for_Hire", localField: "product_id", foreignField: "product_id", as: "product" } }, { $unwind: "$product" }, { $project: { product_description: "$product.product_description" } } ])	products_for_hire
db.Customers.find( { good_or_bad_customer: 'good' }, { first_name: 1, last_name: 1, gender_mf: 1 } ).sort({ last_name: 1 })	products_for_hire
db.Payments.aggregate([ { $group: { _id: null, averageAmountDue: { $avg: "$amount_due" } } }, { $project: { averageAmountDue: 1 } } ])	products_for_hire
db.Products_Booked.aggregate([ { $group: { _id: null, max_booked_count: { $max: "$booked_count" }, min_booked_count: { $min: "$booked_count" }, avg_booked_count: { $avg: "$booked_count" } } } , { $project: { max_booked_count: 1, min_booked_count:1, avg_booked_count:1 } }])	products_for_hire
db.Products_for_Hire.find( { product_name: { $regex: /Book/ } }, { daily_hire_cost: 1 } )	products_for_hire
db.Products_for_Hire.aggregate([ { $lookup: { from: "Products_Booked", localField: "product_id", foreignField: "product_id", as: "bookings" } }, { $match: { "bookings": { $not: { $elemMatch: { "booked_amount": { $gt: 200 } } } } } }, { $count: "numProductsNeverBookedOver200" } ])	products_for_hire
db.Discount_Coupons.aggregate([ { $lookup: { from: "Customers", localField: "coupon_id", foreignField: "coupon_id", as: "coupon_holders" } }, { $unwind: "$coupon_holders" }, { $match: { "coupon_holders.good_or_bad_customer": { $in: ["good", "bad"] } } }, { $group: { _id: "$coupon_amount", good_or_bad_customers: { $addToSet: "$coupon_holders.good_or_bad_customer" } } }, { $match: { good_or_bad_customers: { $all: ["good", "bad"] } } }, { $project: { coupon_amount: "$_id" } } ])	products_for_hire
db.Products_for_Hire.find( { product_type_code: 'Cutlery', daily_hire_cost: { $lt: 20 } }, { product_name: 1, product_description: 1 } )	products_for_hire
db.phone.find({}, { Name: 1 }).sort({ Price: 1 })	phone_market
db.phone.find({}, {Memory_in_G: 1, Carrier: 1})	phone_market
db.phone.aggregate([ { $match: { Memory_in_G: { $gt: 32 } } }, { $group: { _id: "$Carrier" } } ])	phone_market
db.phone.find({Carrier: {$in: ['Sprint', 'TMobile']}}, {Name: 1})	phone_market
db.phone.find({}, {Carrier: 1}).sort({Price: -1}).limit(1)	phone_market
db.phone.aggregate([ { $group: { _id: "$Carrier", count: { $sum: 1 } } }, { $project: { Carrier: "$_id", count: 1 } } ])	phone_market
db.phone.aggregate([ { $group: { _id: "$Carrier", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Carrier: "$_id" } } ])	phone_market
db.company.find({}, { Company: 1, Rank: 1 }).sort({ Sales_billion: -1 })	gas_company
db.company.find({}, { Company: 1, Rank: 1 }).sort({ Sales_billion: -1 })	gas_company
db.company.find({ Headquarters: { $ne: "USA" } }, { Company: 1, Main_Industry: 1 })	gas_company
db.company.find({}, {Company: 1, Headquarters: 1}).sort({Market_Value: -1})	gas_company
db.company.find({}, { Company: 1, Headquarters: 1 }).sort({ Market_Value: -1 })	gas_company
db.company.aggregate([ { $group: { _id: null, minMarketValue: { $min: "$Market_Value" }, maxMarketValue: { $max: "$Market_Value" }, avgMarketValue: { $avg: "$Market_Value" } } }, { $project: { minMarketValue: 1, maxMarketValue: 1, avgMarketValue: 1 } } ])	gas_company
db.company.aggregate([ { $group: { _id: null, minMarketValue: { $min: "$Market_Value" }, maxMarketValue: { $max: "$Market_Value" }, avgMarketValue: { $avg: "$Market_Value" } } }, { $project: { minMarketValue: 1, maxMarketValue: 1, avgMarketValue: 1 } } ])	gas_company
db.company.aggregate([ { $group: { _id: "$Headquarters", count: { $sum: 1 } } }, { $project: { headquarters: "$_id", count: 1 } } ])	gas_company
db.company.aggregate([ { $group: { _id: "$Headquarters", count: { $sum: 1 } } }, { $project: { headquarters: "$_id", count: 1 } } ])	gas_company
db.company.aggregate([ { $group: { _id: "$Main_Industry", totalMarketValue: { $sum: "$Market_Value" }, count: { $sum: 1 } } }, { $sort: { totalMarketValue: -1 } }, { $limit: 1 } , { $project: { Main_Industry: "$_id" , count:1 } }])	gas_company
db.company.aggregate([ { $group: { _id: "$Main_Industry", totalMarketValue: { $sum: "$Market_Value" }, companies: { $push: "$Company_ID" } } }, { $sort: { totalMarketValue: -1 } }, { $limit: 1 }, { $project: { mainIndustry: "$_id", totalCompanies: { $size: "$companies" } } } ])	gas_company
db.gas_station.find({}, { Station_ID: 1, Location: 1, Manager_Name: 1 }).sort({ Open_Year: 1 })	gas_company
db.gas_station.find({}, { Station_ID: 1, Location: 1, Manager_Name: 1}).sort({Open_Year: 1})	gas_company
db.gas_station.aggregate([ { $group: { _id: "$Location", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $project: { Location: "$_id", count: 1 } } ])	gas_company
db.gas_station.aggregate([ { $group: { _id: "$Location", count: { $sum: 1 } } }, { $project: { Location: "$_id", count: 1 } }, { $sort: { count: 1 } } ])	gas_company
db.company.aggregate([ { $match: { $or: [ { Main_Industry: "Banking" }, { Main_Industry: "Oil and gas" } ] } }, { $group: { _id: "$Headquarters", industries: { $addToSet: "$Main_Industry" } } }, { $match: { industries: { $all: ["Banking", "Oil and gas"] } } }, { $project: { Headquarters: "$_id" } } ])	gas_company
db.company.aggregate([ { $match: { $or: [ { Main_Industry: 'Banking' }, { Main_Industry: 'Oil and gas' } ] } }, { $group: { _id: "$Headquarters", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Headquarters: "$_id" } } ])	gas_company
db.station_company.aggregate([ { $lookup: { from: "company", localField: "Company_ID", foreignField: "Company_ID", as: "company_info" } }, { $unwind: "$company_info" }, { $group: { _id: "$company_info.Company", count: { $sum: 1 } } }, { $project: { company: "$_id", count: 1 } } ])	gas_company
db.station_company.aggregate([ { $lookup: { from: "company", localField: "Company_ID", foreignField: "Company_ID", as: "company_info" }}, { $unwind: "$company_info" }, { $group: { _id: "$Company_ID", company: { $first: "$company_info.Company" }, numberOfStations: { $sum: 1 } }}, { $project: { company: 1, numberOfStations: 1 }} ])	gas_company
db.company.aggregate([ { $lookup: { from: "station_company", localField: "Company_ID", foreignField: "Company_ID", as: "station_info" } }, { $match: { "station_info": { $size: 0 } } }, { $project: { Company: 1, Main_Industry: 1 } } ])	gas_company
db.company.aggregate([ { $lookup: { from: 'station_company', localField: 'Company_ID', foreignField: 'Company_ID', as: 'station_info' } }, { $match: { 'station_info': { $size: 0 } } }, { $project: { Company: 1, Main_Industry: 1 } } ])	gas_company
db.station_company.aggregate([ { $lookup: { from: "company", localField: "Company_ID", foreignField: "Company_ID", as: "company_info" } }, { $lookup: { from: "gas_station", localField: "Station_ID", foreignField: "Station_ID", as: "station_info" } }, { $unwind: "$company_info" }, { $unwind: "$station_info" }, { $match: { "company_info.Company": "ExxonMobil" } }, { $project: { Manager_Name: "$station_info.Manager_Name" } } ])	gas_company
db.station_company.aggregate([ { $lookup: { from: "company", localField: "Company_ID", foreignField: "Company_ID", as: "company_info" } }, { $lookup: { from: "gas_station", localField: "Station_ID", foreignField: "Station_ID", as: "station_info" } }, { $unwind: "$company_info" }, { $unwind: "$station_info" }, { $match: { "company_info.Company": "ExxonMobil" } }, { $project: { Manager_Name: "$station_info.Manager_Name" } } ])	gas_company
db.station_company.aggregate([ { $lookup: { from: "company", localField: "Company_ID", foreignField: "Company_ID", as: "company_info" } }, { $lookup: { from: "gas_station", localField: "Station_ID", foreignField: "Station_ID", as: "station_info" } }, { $unwind: "$company_info" }, { $unwind: "$station_info" }, { $match: { "company_info.Market_Value": { $gt: 100 } } }, { $project: { location: "$station_info.Location" } } ])	gas_company
db.station_company.aggregate([ { $lookup: { from: "company", localField: "Company_ID", foreignField: "Company_ID", as: "company_data" } }, { $lookup: { from: "gas_station", localField: "Station_ID", foreignField: "Station_ID", as: "station_data" } }, { $unwind: "$company_data" }, { $unwind: "$station_data" }, { $match: { "company_data.Market_Value": { $gt: 100 } } }, { $project: { location: "$station_data.Location" } } ])	gas_company
db.gas_station.aggregate([ { $match: { Open_Year: { $gt: 2000 } } }, { $group: { _id: "$Manager_Name", stationCount: { $sum: 1 } } }, { $sort: { stationCount: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	gas_company
db.gas_station.aggregate([ { $match: { Open_Year: { $gt: 2000 } } }, { $group: { _id: "$Manager_Name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Manager_Name: "$_id" } } ])	gas_company
db.gas_station.aggregate([ { $sort: { Open_Year: 1 } }, { $project: { Location: 1 } } ])	gas_company
db.gas_station.find({}, { Location: 1}).sort({Open_Year: 1})	gas_company
db.company.find( { Main_Industry: 'Banking' }, { Rank: 1, Company: 1, Market_Value: 1 } ).sort({ Sales_billion: 1, Profits_billion: 1 })	gas_company
db.company.find( { Main_Industry: 'Banking' }, { Rank: 1, Company: 1, Market_Value: 1 } ).sort({ Sales_billion: 1, Profits_billion: 1 })	gas_company
db.region.aggregate([ { $group: { _id: "$Region_name" }}, { $sort: { Label: 1 }}, { $project: { Region_name: "$_id" }} ])	party_people
db.party.aggregate([ { $group: { _id: "$Party_name" } }, { $count: "unique_parties" } ])	party_people
db.party.find({ Party_name: { $ne: "Progress Party" } }, { Minister: 1 })	party_people
db.party.aggregate([ { $sort: { Took_office: -1 } }, { $project: { Minister: 1, Party_name: 1 } } ])	party_people
db.party.aggregate([ { $lookup: { from: "member", localField: "Party_ID", foreignField: "Party_ID", as: "members" } }, { $sort: { "Took_office": -1 } }, { $project: { Minister: 1, Party_name: 1 } } ])	party_people
db.party.find({}, { "Minister": 1, "_id": 0 }).sort({ "Left_office": -1 }).limit(1)	party_people
db.party.find({}, { Minister: 1 }).sort({ Left_office: -1 }).limit(1)	party_people
db.party.aggregate([ { $lookup: { from: "region", localField: "Region_ID", foreignField: "Region_ID", as: "region_info" } }, { $unwind: "$region_info" }, { $project: { party_name: "$Party_name", region_name: "$region_info.Region_name" } } ])	party_people
db.party_events.aggregate([ { $lookup: { from: "party", localField: "Party_ID", foreignField: "Party_ID", as: "partyDetails" } }, { $unwind: "$partyDetails" }, { $group: { _id: "$Party_ID", party_name: { $first: "$partyDetails.Party_name" }, numberOfEvents: { $sum: 1 } } }, { $project: { party_name: "$party_name", numberOfEvents: "$numberOfEvents" } } ])	party_people
db.party_events.aggregate([ { $lookup: { from: "party", localField: "Party_ID", foreignField: "Party_ID", as: "party_info" } }, { $unwind: "$party_info" }, { $group: { _id: "$party_info.Party_name", totalEvents: { $sum: 1 } } }, { $project: { Party_name: "$_id", EventCount: "$totalEvents" } } ])	party_people
db.member.aggregate([ { $lookup: { from: "party_events", localField: "Member_ID", foreignField: "Member_in_charge_ID", as: "events" } }, { $match: { "events": { $size: 0 } } }, { $project: { Member_Name: 1 } } ])	party_people
db.member.aggregate([ { $lookup: { from: "party_events", localField: "Member_ID", foreignField: "Member_in_charge_ID", as: "events" } }, { $match: { "events": { $size: 0 } } }, { $project: { Member_Name: 1 } } ])	party_people
db.member.aggregate([ { $lookup: { from: "party_events", localField: "Member_ID", foreignField: "Member_in_charge_ID", as: "events" } }, { $project: { Member_Name: 1 } }, { $sort: { eventCount: -1 } }, { $limit: 1 } ])	party_people
db.member.aggregate([ { $lookup: { from: "party_events", localField: "Member_ID", foreignField: "Member_in_charge_ID", as: "events" } }, { $project: { Member_Name: 1 } }, { $sort: { eventCount: -1 } }, { $limit: 1 } ])	party_people
db.party_events.aggregate([ { $group: { _id: "$Event_Name", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Event_Name: "$_id" } } ])	party_people
db.party_events.aggregate([ { $group: { _id: "$Event_Name", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Event_Name: "$_id" } } ])	party_people
db.pilot.aggregate([ { $sort: { Rank: 1 } }, { $project: { Pilot_name: 1 } } ])	pilot_record
db.pilot.find({}, { Position: 1, Team: 1})	pilot_record
db.pilot.find({Team: {$in: ['Bradley', 'Fordham']}}, {Pilot_name: 1})	pilot_record
db.pilot.find({}, {Join_Year: 1}).sort({Rank: 1}).limit(1)	pilot_record
db.pilot.aggregate([ { $group: { _id: "$Nationality", count: { $sum: 1 } } }, { $project: { Nationality: "$_id", count: 1 } } ])	pilot_record
db.pilot.aggregate([ { $group: { _id: "$Nationality", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Nationality: "$_id" } } ])	pilot_record
db.pilot.aggregate([ { $match: { $or: [ { Join_Year: { $lt: 2000 } }, { Join_Year: { $gt: 2005 } } ] } }, { $group: { _id: "$Position", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Position: "$_id" } } ])	pilot_record
db.pilot_record.aggregate([ { $lookup: { from: "aircraft", localField: "Aircraft_ID", foreignField: "Aircraft_ID", as: "aircraft_info" } }, { $unwind: "$aircraft_info" }, { $lookup: { from: "pilot", localField: "Pilot_ID", foreignField: "Pilot_ID", as: "pilot_info" } }, { $unwind: "$pilot_info" }, { $project: { Pilot_name: "$pilot_info.Pilot_name", Fleet_Series: "$aircraft_info.Fleet_Series" } }, { $sort: { Rank: 1 } } ])	pilot_record
db.pilot_record.aggregate([ { $lookup: { from: "pilot", localField: "Pilot_ID", foreignField: "Pilot_ID", as: "pilot_info" } }, { $unwind: "$pilot_info" }, { $group: { _id: "$pilot_info.Pilot_name", count: { $sum: 1 } } }, { $project: { Pilot_name: "$_id", count: 1 } } ])	pilot_record
db.pilot.aggregate([ { $lookup: { from: "pilot_record", localField: "Pilot_ID", foreignField: "Pilot_ID", as: "records" } }, { $match: { records: { $size: 0 } } }, { $project: { Pilot_name: 1 } } ])	pilot_record
db.Ref_Document_Status.find({}, { document_status_code: 1 })	cre_Doc_Control_Systems
db.Ref_Document_Status.findOne({document_status_code: 'working'}, {document_status_description: 1})	cre_Doc_Control_Systems
db.Ref_Document_Types.find({}, { document_type_code: 1 })	cre_Doc_Control_Systems
db.Ref_Document_Types.find({document_type_code: 'Paper'}, {document_type_description: 1})	cre_Doc_Control_Systems
db.Ref_Shipping_Agents.find({}, {shipping_agent_name: 1})	cre_Doc_Control_Systems
db.Ref_Shipping_Agents.findOne({shipping_agent_name: 'UPS'}, {shipping_agent_code: 1})	cre_Doc_Control_Systems
db.Roles.find({}, { role_code: 1 })	cre_Doc_Control_Systems
db.Roles.find({role_code: 'ED'}, {role_description: 1})	cre_Doc_Control_Systems
db.Employees.aggregate([ { $match: { employee_name: 'Koby' } }, { $lookup: { from: 'Roles', localField: 'role_code', foreignField: 'role_code', as: 'role' } }, { $unwind: '$role' }, { $project: { role_description: '$role.role_description' } } ])	cre_Doc_Control_Systems
db.Roles.aggregate([ { $lookup: { from: "Employees", localField: "role_code", foreignField: "role_code", as: "employees" } }, { $project: { role_description: 1, role_code: 1, employeeCount: { $size: "$employees" } } } ])	cre_Doc_Control_Systems
db.Roles.aggregate([ { $lookup: { from: "Employees", localField: "role_code", foreignField: "role_code", as: "employees" } }, { $project: { role_description: 1, employeeCount: { $size: "$employees" } } }, { $match: { employeeCount: { $gt: 1 } } } ])	cre_Doc_Control_Systems
db.Documents.aggregate([ { $match: { document_id: 1 } }, { $lookup: { from: "Ref_Document_Status", localField: "document_status_code", foreignField: "document_status_code", as: "status_info" } }, { $unwind: "$status_info" }, { $project: { document_status_description: "$status_info.document_status_description" } } ])	cre_Doc_Control_Systems
db.Documents.find({document_id: 2}, {document_type_code: 1})	cre_Doc_Control_Systems
db.Documents.find( { document_status_code: 'done', document_type_code: 'Paper' }, { document_id: 1 } )	cre_Doc_Control_Systems
db.Documents.aggregate([ { $lookup: { from: "Ref_Shipping_Agents", localField: "shipping_agent_code", foreignField: "shipping_agent_code", as: "shipping_agent" } }, { $match: { "shipping_agent.shipping_agent_name": "USPS" } }, { $count: "number_of_documents" } ])	cre_Doc_Control_Systems
db.Documents.aggregate([ { $lookup: { from: "Ref_Shipping_Agents", localField: "shipping_agent_code", foreignField: "shipping_agent_code", as: "shipping_agent" } }, { $unwind: "$shipping_agent" }, { $group: { _id: "$shipping_agent.shipping_agent_name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	cre_Doc_Control_Systems
db.Addresses.aggregate([ { $lookup: { from: "Documents_Mailed", localField: "address_id", foreignField: "mailed_to_address_id", as: "documents_mailed" } }, { $match: { "documents_mailed.document_id": 4 } }, { $project: { address_details: 1 } } ])	cre_Doc_Control_Systems
db.Documents.aggregate([ { $match: { document_status_code: "done", document_type_code: "Paper" } }, { $lookup: { from: "Ref_Shipping_Agents", localField: "shipping_agent_code", foreignField: "shipping_agent_code", as: "shipping_agent" } }, { $match: { "shipping_agent.shipping_agent_name": { $ne: "USPS" } } }, { $project: { document_id: 1 } } ])	cre_Doc_Control_Systems
db.Documents.aggregate([ { $match: { document_status_code: "done", document_type_code: "Paper" } }, { $lookup: { from: "Ref_Shipping_Agents", localField: "shipping_agent_code", foreignField: "shipping_agent_code", as: "shipping_agent" } }, { $match: { "shipping_agent.shipping_agent_name": "USPS" } }, { $project: { document_id: 1 } } ])	cre_Doc_Control_Systems
db.Document_Drafts.find({document_id: 7}, {draft_details: 1})	cre_Doc_Control_Systems
db.Draft_Copies.aggregate([ { $group: { _id: "$document_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	cre_Doc_Control_Systems
db.Draft_Copies.aggregate([ { $group: { _id: "$document_id", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { document_id: "$_id", count: 1 } } ])	cre_Doc_Control_Systems
db.Employees.aggregate([ { $lookup: { from: "Circulation_History", localField: "employee_id", foreignField: "employee_id", as: "circulation_history" } }, { $match: { "circulation_history.document_id": 1 } }, { $project: { employee_name: 1 } } ])	cre_Doc_Control_Systems
db.Employees.aggregate([ { $lookup: { from: "Circulation_History", localField: "employee_id", foreignField: "employee_id", as: "circulation_history" } }, { $match: { "circulation_history": { $size: 0 } } }, { $project: { employee_name: 1 } } ])	cre_Doc_Control_Systems
db.Circulation_History.aggregate([ { $group: { _id: "$document_id", count: { $sum: 1 } } }, { $project: { document_id: "$_id", count: 1 } } ])	cre_Doc_Control_Systems
db.department.find({}, { Dname: 1 }).sort({ Mgr_start_date: 1 })	company_1
db.dependent.find({ Relationship: 'Spouse' }, { Dependent_name: 1 })	company_1
db.department.aggregate([ { $lookup: { from: "dept_locations", localField: "Dnumber", foreignField: "Dnumber", as: "locations" } }, { $match: { "locations.Dlocation": "Houston" } }, { $project: { Dname: 1 } } ])	company_1
db.employee.find({ "Salary": { $gt: 30000 } }, { "Fname": 1, "Lname": 1, "_id": 0 })	company_1
db.employee.aggregate([ { $match: { Salary: { $lt: 50000 } } }, { $group: { _id: "$Sex", count: { $sum: 1 } } }, { $project: { sex: "$_id", count: 1 } } ])	company_1
db.employee.find({}, { Fname: 1, Lname: 1, Address: 1 }).sort({ Bdate: 1 })	company_1
db.Events.aggregate([ { $lookup: { from: "Services", localField: "Service_ID", foreignField: "Service_ID", as: "services" } }, { $match: { "services.Service_Type_Code": "Marriage" } }, { $project: { Event_Details: 1 } } ])	local_govt_in_alabama
db.Events.aggregate([ { $lookup: { from: "Participants_in_Events", localField: "Event_ID", foreignField: "Event_ID", as: "participants" } }, { $match: { "participants.1": { $exists: true } } }, { $project: { Event_ID: 1, Event_Details: 1 } } ])	local_govt_in_alabama
db.Participants.find({}, { Participant_ID: 1, Participant_Type_Code: 1, Participant_Details: 1})	local_govt_in_alabama
db.Services.find({}, { Service_Type_Code: 1 }).sort({ Service_Type_Code: 1 })	local_govt_in_alabama
db.Participants.aggregate([ { $match: { "Participant_Details": { $regex: /Dr\./ } } }, { $lookup: { from: "Participants_in_Events", localField: "Participant_ID", foreignField: "Participant_ID", as: "events" } }, { $unwind: "$events" }, { $group: { _id: "$events.Event_ID" } }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1 } } ])	local_govt_in_alabama
db.Participants.aggregate([ { $lookup: { from: "Participants_in_Events", localField: "Participant_ID", foreignField: "Participant_ID", as: "participant_events" } }, { $unwind: "$participant_events" }, { $lookup: { from: "Events", localField: "participant_events.Event_ID", foreignField: "Event_ID", as: "event_details" } }, { $unwind: "$event_details" }, { $lookup: { from: "Services", localField: "event_details.Service_ID", foreignField: "Service_ID", as: "service_details" } }, { $unwind: "$service_details" }, { $group: { _id: "$service_details.Service_ID", count: { $sum: 1 }, service_type: { $first: "$service_details.Service_Type_Code" } } }, { $sort: { count: 1 } }, { $limit: 1 } , { $project: { Service_ID: "$_id" , Service_Type_Code: "$service_type"} }])	local_govt_in_alabama
db.Participants_in_Events.aggregate([ { $group: { _id: "$Event_ID", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	local_govt_in_alabama
db.Events.aggregate([ { $lookup: { from: "Participants_in_Events", localField: "Event_ID", foreignField: "Event_ID", as: "event_participants" } }, { $lookup: { from: "Participants", localField: "event_participants.Participant_ID", foreignField: "Participant_ID", as: "participant_details" } }, { $match: { "participant_details.Participant_Details": { $ne: "Kenyatta Kuhn" } } }, { $group: { _id: "$Event_ID" } }, { $project: { Event_ID: "$_id" } } ])	local_govt_in_alabama
db.Events.aggregate([ { $lookup: { from: "Participants_in_Events", localField: "Event_ID", foreignField: "Event_ID", as: "Participants" } }, { $match: { Participants: { $size: 0 } } }, { $count: "EventsWithoutParticipants" } ])	local_govt_in_alabama
db.races.find({}, {name: 1}).sort({date: -1}).limit(1)	formula_1
db.races.find({}, {name: 1}).sort({date: -1}).limit(1)	formula_1
db.races.find({}, {name: 1, date: 1}).sort({date: -1}).limit(1)	formula_1
db.races.find({}, {name: 1, date: 1}).sort({date: -1}).limit(1)	formula_1
db.races.find({year: 2017}, {name: 1})	formula_1
db.races.find({year: 2017}, {name: 1})	formula_1
db.results.aggregate([ { $lookup: { from: "races", localField: "raceId", foreignField: "raceId", as: "race_data" } }, { $match: { "race_data.name": "Australian Grand Prix", "race_data.year": 2009 } }, { $group: { _id: "$driverId" } }, { $count: "num_drivers" } ])	formula_1
db.results.aggregate([ { $lookup: { from: "races", localField: "raceId", foreignField: "raceId", as: "race_info" } }, { $match: { "race_info.name": "Australian Grand Prix", "race_info.year": 2009 } }, { $group: { _id: "$driverId" } }, { $count: "num_drivers" } ])	formula_1
db.races.aggregate([ { $lookup: { from: "circuits", localField: "circuitId", foreignField: "circuitId", as: "circuit_info" } }, { $unwind: "$circuit_info" }, { $match: { "circuit_info.country": "Spain", "year": { $gt: 2017 } } }, { $project: { "_id": 0, "name": 1 } } ])	formula_1
db.races.aggregate([ { $lookup: { from: "circuits", localField: "circuitId", foreignField: "circuitId", as: "circuit_info" } }, { $unwind: "$circuit_info" }, { $match: { "circuit_info.country": "Spain", "year": { $gt: 2017 } } }, { $project: { "_id": 0, "name": 1 } } ])	formula_1
db.races.aggregate([ { $lookup: { from: "circuits", localField: "circuitId", foreignField: "circuitId", as: "circuit_info" } }, { $unwind: "$circuit_info" }, { $match: { "circuit_info.country": "Spain", "year": { $gt: 2000 } } }, { $group: { _id: "$name" } }, { $project: { name: "$_id" } } ])	formula_1
db.races.aggregate([ { $lookup: { from: "circuits", localField: "circuitId", foreignField: "circuitId", as: "circuit_info" } }, { $unwind: "$circuit_info" }, { $match: { "circuit_info.country": "Spain", year: { $gt: 2000 } } }, { $group: { _id: "$name" } }, { $project: { name: "$_id" } } ])	formula_1
db.drivers.aggregate([ { $lookup: { from: "results", localField: "driverId", foreignField: "driverId", as: "results" } }, { $unwind: "$results" }, { $lookup: { from: "races", localField: "results.raceId", foreignField: "raceId", as: "races" } }, { $unwind: "$races" }, { $match: { "races.year": { $gt: 2010 } } }, { $group: { _id: "$driverId", surname: { $first: "$surname" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1, surname: 1 } } ])	formula_1
db.drivers.aggregate([ { $lookup: { from: "results", localField: "driverId", foreignField: "driverId", as: "results" } }, { $unwind: "$results" }, { $lookup: { from: "races", localField: "results.raceId", foreignField: "raceId", as: "races" } }, { $unwind: "$races" }, { $match: { "races.year": { $gt: 2010 } } }, { $group: { _id: "$driverId", surname: { $first: "$surname" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1, surname: 1 } } ])	formula_1
db.circuits.find({country: {$in: ['UK', 'Malaysia']}}, { name: 1})	formula_1
db.circuits.find({country: {$in: ['UK', 'Malaysia']}}, { name: 1})	formula_1
db.circuits.find({country: {$in: ['France', 'Belgium']}}, {circuitId: 1, location: 1})	formula_1
db.circuits.find( { country: { $in: ["France", "Belgium"] } }, { circuitId: 1, location: 1 } )	formula_1
db.races.aggregate([ { $match: { year: 2008, name: "Monaco Grand Prix" } }, { $lookup: { from: "results", localField: "raceId", foreignField: "raceId", as: "race_results" } }, { $unwind: "$race_results" }, { $group: { _id: null, max_fastestlapspeed: { $max: "$race_results.fastestLapSpeed" } } } , { $project: { max_fastestlapspeed: 1 } }])	formula_1
db.races.aggregate([ { $match: { year: 2008, name: "Monaco Grand Prix" } }, { $lookup: { from: "results", localField: "raceId", foreignField: "raceId", as: "race_results" } }, { $unwind: "$race_results" }, { $group: { _id: null, max_fastestlapspeed: { $max: "$race_results.fastestLapSpeed" } } } , { $project: { max_fastestlapspeed: 1 } }])	formula_1
db.drivers.aggregate([ { $lookup: { from: "results", localField: "driverId", foreignField: "driverId", as: "races" } }, { $unwind: "$races" }, { $group: { _id: "$driverId", surname: { $first: "$surname" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { driverId: "$_id", surname: 1 } } ])	formula_1
db.drivers.aggregate([ { $lookup: { from: "results", localField: "driverId", foreignField: "driverId", as: "raceResults" } }, { $unwind: "$raceResults" }, { $group: { _id: "$driverId", surname: { $first: "$surname" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1, surname: 1 } } ])	formula_1
db.technician.find({}, {Name: 1}).sort({Age: 1})	machine_repair
db.technician.find({}, { Name: 1}).sort({Age: 1})	machine_repair
db.technician.find({}, { Team: 1, Starting_Year: 1})	machine_repair
db.technician.find({}, { Team: 1, Starting_Year: 1})	machine_repair
db.technician.find({Team: {$ne: 'NYY'}}, {Name: 1})	machine_repair
db.technician.find({Team: {$ne: 'NYY'}}, {Name: 1})	machine_repair
db.technician.find({Age: {$in: [36, 37]}}, {Name: 1})	machine_repair
db.technician.find({Age: {$in: [36, 37]}}, {Name: 1})	machine_repair
db.technician.find({}, {Starting_Year: 1}).sort({Age: -1}).limit(1)	machine_repair
db.technician.find({}, {Starting_Year: 1}).sort({Age: -1}).limit(1)	machine_repair
db.technician.aggregate([ { $group: { _id: "$Team", count: { $sum: 1 } } }, { $project: { Team: "$_id", count: 1 } } ])	machine_repair
db.technician.aggregate([ { $group: { _id: "$Team", count: { $sum: 1 } } } ])	machine_repair
db.technician.aggregate([ { $group: { _id: "$Team", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Team: "$_id" } } ])	machine_repair
db.technician.aggregate([ { $group: { _id: "$Team", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { Team: "$_id" } }])	machine_repair
db.technician.aggregate([ { $group: { _id: "$Team", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Team: "$_id" } } ])	machine_repair
db.technician.aggregate([ { $group: { _id: "$Team", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Team: "$_id" } } ])	machine_repair
db.repair_assignment.aggregate([ { $lookup: { from: "machine", localField: "Machine_ID", foreignField: "Machine_ID", as: "machine_info" } }, { $unwind: "$machine_info" }, { $lookup: { from: "technician", localField: "technician_id", foreignField: "technician_id", as: "technician_info" } }, { $unwind: "$technician_info" }, { $sort: { "machine_info.quality_rank": 1 } }, { $project: { technician_name: "$technician_info.Name" } } ])	machine_repair
db.repair_assignment.aggregate([ { $lookup: { from: "machine", localField: "Machine_ID", foreignField: "Machine_ID", as: "machine_info" } }, { $unwind: "$machine_info" }, { $lookup: { from: "technician", localField: "technician_id", foreignField: "technician_id", as: "technician_info" } }, { $unwind: "$technician_info" }, { $sort: { "machine_info.quality_rank": 1 } }, { $project: { Name: "$technician_info.Name" } } ])	machine_repair
db.repair_assignment.aggregate([ { $lookup: { from: "machine", localField: "Machine_ID", foreignField: "Machine_ID", as: "machine_info" } }, { $unwind: "$machine_info" }, { $match: { "machine_info.value_points": { $gt: 70 } } }, { $lookup: { from: "technician", localField: "technician_id", foreignField: "technician_id", as: "technician_info" } }, { $unwind: "$technician_info" }, { $project: { Name: "$technician_info.Name" } } ])	machine_repair
db.repair_assignment.aggregate([ { $lookup: { from: "machine", localField: "Machine_ID", foreignField: "Machine_ID", as: "machine_info" } }, { $unwind: "$machine_info" }, { $match: { "machine_info.value_points": { $gt: 70 } } }, { $lookup: { from: "technician", localField: "technician_id", foreignField: "technician_id", as: "technician_info" } }, { $unwind: "$technician_info" }, { $project: { Name: "$technician_info.Name" } } ])	machine_repair
db.repair_assignment.aggregate([ { $lookup: { from: "technician", localField: "technician_id", foreignField: "technician_id", as: "technician_info" } }, { $unwind: "$technician_info" }, { $group: { _id: "$technician_info.Name", count: { $sum: 1 } } }, { $project: { Name: "$_id", count: 1 } } ])	machine_repair
db.repair_assignment.aggregate([ { $lookup: { from: "technician", localField: "technician_id", foreignField: "technician_id", as: "technician_info" } }, { $unwind: "$technician_info" }, { $group: { _id: "$technician_info.Name", count: { $sum: 1 } } }, { $project: { Name: "$_id", Count: "$count" } } ])	machine_repair
db.technician.find({ technician_id: { $nin: db.repair_assignment.distinct("technician_id") } }, { Name: 1 })	machine_repair
db.technician.find({ technician_id: { $nin: db.repair_assignment.distinct("technician_id") } }, { Name: 1 })	machine_repair
db.technician.aggregate([ { $match: { Team: "CLE" } }, { $lookup: { from: "technician", localField: "Starting_Year", foreignField: "Starting_Year", as: "CWS_technicians" } }, { $unwind: "$CWS_technicians" }, { $match: { "CWS_technicians.Team": "CWS" } }, { $group: { _id: "$Starting_Year" } }, { $project: { Starting_Year: "$_id" } } ])	machine_repair
db.technician.aggregate([ { $match: { $or: [ { Team: 'CLE' }, { Team: 'CWS' } ] } }, { $group: { _id: '$Starting_Year', teams: { $addToSet: '$Team' } } }, { $match: { teams: { $all: ['CLE', 'CWS'] } } }, { $project: { _id: 1 } } ])	machine_repair
db.entrepreneur.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $project: { Company: 1 } }, { $sort: { Money_Requested: -1 } } ])	entrepreneur
db.entrepreneur.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $project: { Company: 1 } }, { $sort: { Money_Requested: -1 } } ])	entrepreneur
db.entrepreneur.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $project: { Company: 1, Investor: 1 } } ])	entrepreneur
db.entrepreneur.find({}, { Company: 1, Investor: 1 })	entrepreneur
db.entrepreneur.aggregate([ { $group: { _id: null, averageMoneyRequested: { $avg: "$Money_Requested" } } } , { $project: { averageMoneyRequested: 1 } }])	entrepreneur
db.entrepreneur.aggregate([ { $group: { _id: null, averageMoneyRequested: { $avg: "$Money_Requested" } } } , { $project: { averageMoneyRequested: 1 } }])	entrepreneur
db.people.find({}, { Name: 1 }).sort({ Weight: 1 })	entrepreneur
db.people.find({}, {Name: 1}).sort({Weight: 1})	entrepreneur
db.people.aggregate([ { $lookup: { from: "entrepreneur", localField: "People_ID", foreignField: "People_ID", as: "entrepreneurs" } }, { $match: { "entrepreneurs": { $not: { $size: 0 } } } }, { $project: { Name: 1 } } ])	entrepreneur
db.people.aggregate([ { $lookup: { from: "entrepreneur", localField: "People_ID", foreignField: "People_ID", as: "entrepreneurs" } }, { $match: { "entrepreneurs": { $ne: [] } } }, { $project: { Name: 1 } } ])	entrepreneur
db.entrepreneur.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $match: { Investor: { $ne: "Rachel Elnaugh" } } }, { $project: { Name: "$people_info.Name" } } ])	entrepreneur
db.entrepreneur.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $match: { Investor: { $ne: "Rachel Elnaugh" } } }, { $project: { Name: "$people_info.Name" } } ])	entrepreneur
db.people.find({}, { Weight: 1 }).sort({ Height: 1 }).limit(1)	entrepreneur
db.people.aggregate([ { $sort: { Height: 1 } }, { $limit: 1 }, { $project: { Weight: 1 } } ])	entrepreneur
db.entrepreneur.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "entrepreneur_info" } }, { $unwind: "$entrepreneur_info" }, { $sort: { "entrepreneur_info.Weight": -1 } }, { $limit: 1 }, { $project: { Name: "$entrepreneur_info.Name" } } ])	entrepreneur
db.entrepreneur.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "entrepreneur_info" } }, { $unwind: "$entrepreneur_info" }, { $sort: { "entrepreneur_info.Weight": -1 } }, { $limit: 1 }, { $project: { Name: "$entrepreneur_info.Name" } } ])	entrepreneur
db.entrepreneur.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $match: { "people_info.Height": { $gt: 1.85 } } }, { $group: { _id: null, totalMoneyRequested: { $sum: "$Money_Requested" } } } , { $project: { totalMoneyRequested: 1 } }])	entrepreneur
db.entrepreneur.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $match: { "people_info.Height": { $gt: 1.85 } } }, { $group: { _id: null, totalMoneyRequested: { $sum: "$Money_Requested" } } } , { $project: { totalMoneyRequested: 1 } }])	entrepreneur
db.entrepreneur.aggregate([ { $match: { $or: [ { Investor: "Simon Woodroffe" }, { Investor: "Peter Jones" } ] } }, { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $project: { Date_of_Birth: "$people_info.Date_of_Birth" } } ])	entrepreneur
db.entrepreneur.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $project: { Weight: "$people_info.Weight" } }, { $sort: { Money_Requested: -1 } } ])	entrepreneur
db.entrepreneur.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $project: { Weight: "$people_info.Weight" } }, { $sort: { Money_Requested: -1 } } ])	entrepreneur
db.entrepreneur.aggregate([ { $group: { _id: "$Investor", count: { $sum: 1 } } }, { $project: { Investor: "$_id", count: 1 } } ])	entrepreneur
db.entrepreneur.aggregate([ { $group: { _id: "$Investor", count: { $sum: 1 } } } ])	entrepreneur
db.entrepreneur.aggregate([ { $group: { _id: "$Investor", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Investor: "$_id" } } ])	entrepreneur
db.entrepreneur.aggregate([ { $group: { _id: "$Investor", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Investor: "$_id" } } ])	entrepreneur
db.entrepreneur.aggregate([ { $group: { _id: "$Investor", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Investor: "$_id" } } ])	entrepreneur
db.entrepreneur.aggregate([ { $group: { _id: "$Investor", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Investor: "$_id" } } ])	entrepreneur
db.entrepreneur.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $project: { Name: "$people_info.Name", Company: 1 } }, { $sort: { Money_Requested: 1 } } ])	entrepreneur
db.entrepreneur.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $project: { Name: "$people_info.Name", Company: 1 } }, { $sort: { Money_Requested: -1 } } ])	entrepreneur
db.people.aggregate([ { $lookup: { from: "entrepreneur", localField: "People_ID", foreignField: "People_ID", as: "entrepreneur_info" } }, { $match: { entrepreneur_info: { $size: 0 } } }, { $project: { Name: 1 } } ])	entrepreneur
db.people.find( { People_ID: { $nin: db.entrepreneur.distinct("People_ID") } }, { Name: 1 } )	entrepreneur
db.entrepreneur.aggregate([ { $match: { $or: [ { Money_Requested: { $gt: 140000 } }, { Money_Requested: { $lt: 120000 } } ] } }, { $group: { _id: "$Investor", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Investor: "$_id" } } ])	entrepreneur
db.entrepreneur.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $sort: { "people_info.Height": -1 } }, { $limit: 1 }, { $project: { Company: 1 } } ])	entrepreneur
db.entrepreneur.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $sort: { "people_info.Height": -1 } }, { $limit: 1 }, { $project: { Company: 1 } } ])	entrepreneur
db.perpetrator.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $project: { Date: 1 } }, { $sort: { Killed: -1 } } ])	perpetrator
db.perpetrator.find({}, { Injured: 1 }).sort({ Injured: 1 })	perpetrator
db.perpetrator.aggregate([ { $group: { _id: null, averageInjured: { $avg: "$Injured" } } } , { $project: { averageInjured: 1 } }])	perpetrator
db.perpetrator.aggregate([ { $sort: { Killed: -1 } }, { $limit: 1 }, { $project: { Location: 1 } } ])	perpetrator
db.people.find({}, { Name: 1 }).sort({ Height: 1 })	perpetrator
db.perpetrator.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "perpetrator_info" } }, { $unwind: "$perpetrator_info" }, { $project: { Name: "$perpetrator_info.Name" } } ])	perpetrator
db.perpetrator.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "perpetrator_info" } }, { $unwind: "$perpetrator_info" }, { $sort: { "perpetrator_info.Weight": -1 } }, { $limit: 1 }, { $project: { Name: "$perpetrator_info.Name" } } ])	perpetrator
db.perpetrator.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $match: { "people_info.Height": { $gt: 1.84 } } }, { $group: { _id: null, totalKills: { $sum: "$Killed" } } } , { $project: { totalKills: 1 } }])	perpetrator
db.perpetrator.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "perpetrator_info" } }, { $unwind: "$perpetrator_info" }, { $group: { _id: "$perpetrator_info.People_ID", Height: { $first: "$perpetrator_info.Height" }, Injured: { $sum: "$Injured" } } }, { $sort: { Injured: -1 } }, { $project: { Height: 1 } } ])	perpetrator
db.perpetrator.aggregate([ { $group: { _id: "$Country", count: { $sum: 1 } } }, { $project: { Country: "$_id", count: 1 } } ])	perpetrator
db.perpetrator.aggregate([ { $group: { _id: "$Country", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	perpetrator
db.perpetrator.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "perpetrator_info" } }, { $unwind: "$perpetrator_info" }, { $project: { Name: "$perpetrator_info.Name" } }, { $sort: { Year: -1 } } ])	perpetrator
db.people.find({ People_ID: { $nin: db.perpetrator.distinct("People_ID") } }, { Name: 1 })	perpetrator
db.perpetrator.aggregate([ { $match: { $or: [ { Injured: { $gt: 50 } }, { Injured: { $lt: 20 } }, ] } }, { $group: { _id: "$Country", injuryRanges: { $addToSet: { $cond: [{ $gt: ["$Injured", 50] }, "high", "low"] } } } }, { $match: { injuryRanges: { $all: ["high", "low"] } } }, { $project: { Country: "$_id" } } ])	perpetrator
db.perpetrator.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $sort: { "people_info.Height": -1 } }, { $limit: 1 }, { $project: { Date: "$Date" } } ])	perpetrator
db.perpetrator.aggregate([ { $group: { _id: null, maxYear: { $max: "$Year" } } }, { $project: { maxYear: 1 } } ])	perpetrator
db.Campuses.find({ County: 'Los Angeles' }, { Campus: 1 })	csu_1
db.Campuses.find({ Location: 'Chico' }, { Campus: 1 })	csu_1
db.Campuses.find({ Location: 'Chico' }, { Campus: 1 })	csu_1
db.Campuses.find({ Year: 1958 }, { Campus: 1 })	csu_1
db.Campuses.find({ Year: 1958 }, { Campus: 1 })	csu_1
db.Campuses.find( { Year: { $gte: 1935, $lte: 1939 } }, { Campus: 1 } )	csu_1
db.Campuses.find({ Year: { $gte: 1935, $lte: 1939 } }, { Campus: 1 })	csu_1
db.Campuses.find( { $or: [ { Location: 'Northridge', County: 'Los Angeles' }, { Location: 'San Francisco', County: 'San Francisco' } ] }, { Campus: 1 } )	csu_1
db.Campuses.find( { $or: [ { Location: "Northridge", County: "Los Angeles" }, { Location: "San Francisco", County: "San Francisco" } ] }, { Campus: 1 } )	csu_1
db.Campuses.aggregate([ { $match: { Campus: "San Francisco State University" } }, { $lookup: { from: "csu_fees", localField: "Id", foreignField: "Campus", as: "fees" } }, { $unwind: "$fees" }, { $match: { "fees.Year": 1996 } }, { $project: { CampusFee: "$fees.CampusFee" } } ])	csu_1
db.csu_fees.aggregate([ { $group: { _id: null, avgCampusFee: { $avg: "$CampusFee" } } }, { $lookup: { from: "csu_fees", let: { avgCampusFee: "$avgCampusFee" }, pipeline: [ { $match: { $expr: { $gt: [ "$CampusFee", "$$avgCampusFee" ] } } }, { $count: "count" } ], as: "count" } }, { $unwind: "$count" }, { $project: { count: "$count.count" } } ])	csu_1
db.csu_fees.aggregate([ { $group: { _id: null, avgCampusFee: { $avg: "$CampusFee" } } }, { $lookup: { from: "csu_fees", let: { avgCampusFee: "$avgCampusFee" }, pipeline: [ { $match: { $expr: { $gt: [ "$CampusFee", "$$avgCampusFee" ] } } } ], as: "higherThanAvg" } }, { $project: { count: { $size: "$higherThanAvg" } } } ])	csu_1
db.csu_fees.aggregate([ { $group: { _id: null, avgCampusFee: { $avg: "$CampusFee" } } }, { $lookup: { from: "csu_fees", let: { avgCampusFee: "$avgCampusFee" }, pipeline: [ { $match: { $expr: { $gt: [ "$CampusFee", "$$avgCampusFee" ] } } }, { $count: "count" } ], as: "count" } }, { $unwind: "$count" }, { $project: { count: "$count.count" } } ])	csu_1
db.csu_fees.aggregate([ { $group: { _id: null, average: { $avg: "$CampusFee" } } }, { $lookup: { from: "csu_fees", let: { avgFee: "$average" }, pipeline: [ { $match: { $expr: { $gt: [ "$CampusFee", "$$avgFee" ] } } } ], as: "above_average" } }, { $project: { count: { $size: "$above_average" } } } ])	csu_1
db.Campuses.find({ County: "Los Angeles", Year: { $gt: 1950 } }, { Campus: 1 })	csu_1
db.degrees.aggregate([ { $group: { _id: "$Year", totalDegrees: { $sum: "$Degrees" } } }, { $sort: { totalDegrees: -1 } }, { $limit: 1 }, { $project: { Year: "$_id" } } ])	csu_1
db.degrees.aggregate([ { $group: { _id: "$Year", totalDegrees: { $sum: "$Degrees" } } }, { $sort: { totalDegrees: -1 } }, { $limit: 1 }, { $project: { Year: "$_id" } } ])	csu_1
db.degrees.aggregate([ { $group: { _id: "$Campus", totalDegrees: { $sum: "$Degrees" } } }, { $sort: { totalDegrees: -1 } }, { $limit: 1 } , { $project: { Campus: "$_id" } }])	csu_1
db.degrees.aggregate([ { $group: { _id: "$Campus", totalDegrees: { $sum: "$Degrees" } } }, { $sort: { totalDegrees: -1 } }, { $limit: 1 }, { $project: { Campus: "$_id" } } ])	csu_1
db.faculty.aggregate([ { $match: { Year: 2003 } }, { $group: { _id: "$Campus", totalFaculty: { $sum: "$Faculty" } } }, { $sort: { totalFaculty: -1 } }, { $limit: 1 }, { $lookup: { from: "Campuses", localField: "_id", foreignField: "Id", as: "campusInfo" } }, { $project: { campus: { $arrayElemAt: ["$campusInfo.Campus", 0] } } } ])	csu_1
db.csu_fees.aggregate([ { $match: { Year: 1996 } }, { $group: { _id: null, averageFee: { $avg: "$CampusFee" } } }, { $project: { averageFee: 1 } } ])	csu_1
db.csu_fees.aggregate([ { $match: { Year: 1996 } }, { $group: { _id: null, averageFee: { $avg: "$CampusFee" } } }, { $project: { averageFee:1 } } ])	csu_1
db.Campuses.find({ County: 'Los Angeles' }, { Campus: 1 })	csu_1
db.Campuses.find({ County: 'Los Angeles' }, { Campus: 1 })	csu_1
db.faculty.aggregate([ { $match: { Year: 2002 } }, { $group: { _id: null, totalFaculty: { $sum: "$Faculty" } } }, { $project: { totalFaculty: 1 } } ])	csu_1
db.faculty.aggregate([ { $match: { Year: 2002 } }, { $group: { _id: null, totalFaculty: { $sum: "$Faculty" } } } , { $project: { totalFaculty: 1 } }])	csu_1
db.faculty.aggregate([ { $lookup: { from: "Campuses", localField: "Campus", foreignField: "Id", as: "campus_info" } }, { $match: { Year: 2002, "campus_info.Campus": "Long Beach State University" } }, { $project: { Faculty: 1 } } ])	csu_1
db.faculty.aggregate([ { $lookup: { from: "degrees", localField: "Campus", foreignField: "Campus", as: "degree_data" } }, { $unwind: "$degree_data" }, { $match: { "degree_data.Year": 2002, "Year": 2002 } }, { $sort: { "degree_data.Degrees": -1 } }, { $limit: 1 }, { $project: { Faculty: 1 } } ])	csu_1
db.degrees.aggregate([ { $match: { Year: 2002 } }, { $group: { _id: "$Campus", totalDegrees: { $sum: "$Degrees" } } }, { $sort: { totalDegrees: -1 } }, { $limit: 1 }, { $lookup: { from: "faculty", localField: "_id", foreignField: "Campus", as: "facultyData" } }, { $unwind: "$facultyData" }, { $match: { "facultyData.Year": 2002 } }, { $project: { faculty: "$facultyData.Faculty" } } ])	csu_1
db.discipline_enrollments.aggregate([ { $lookup: { from: "Campuses", localField: "Campus", foreignField: "Id", as: "campus_info" } }, { $match: { "campus_info.Campus": "San Francisco State University", "Year": 2004 } }, { $group: { _id: null, totalGraduates: { $sum: "$Graduate" } } }, { $project: { totalGraduates: 1 } } ])	csu_1
db.candidate.aggregate([ { $group: { _id: "$Poll_Source", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Poll_Source: "$_id" } } ])	candidate_poll
db.candidate.aggregate([ { $group: { _id: "$Poll_Source", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { poll_source: "$_id" } } ])	candidate_poll
db.candidate.find({}, { Support_rate: 1 }).sort({ Support_rate: -1 }).limit(3)	candidate_poll
db.candidate.find({}, {Candidate_ID: 1}).sort({Oppose_rate: 1}).limit(1)	candidate_poll
db.candidate.find({}, { Candidate_ID: 1 }).sort({ Oppose_rate: 1 }).limit(1)	candidate_poll
db.candidate.find({}, { Support_rate: 1, Consider_rate: 1, Oppose_rate: 1 }).sort({ Unsure_rate: 1 })	candidate_poll
db.candidate.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $project: { Support_rate: 1, Consider_rate: 1, Oppose_rate: 1, } }, { $sort: { Unsure_rate: 1 } } ])	candidate_poll
db.candidate.aggregate([ { $sort: { Oppose_rate: -1 } }, { $limit: 1 }, { $project: { Poll_Source: 1 } } ])	candidate_poll
db.candidate.find({}, { Poll_Source: 1}).sort({Oppose_rate: -1}).limit(1)	candidate_poll
db.people.find({}, { Name: 1}).sort({Date_of_Birth: 1})	candidate_poll
db.people.find({}, { Name: 1}).sort({Date_of_Birth: 1})	candidate_poll
db.people.aggregate([ { $match: { Sex: "M" } }, { $group: { _id: null, avgHeight: { $avg: "$Height" }, avgWeight: { $avg: "$Weight" } } }, { $project: { avgHeight: 1, avgWeight:1 } } ])	candidate_poll
db.people.aggregate([ { $match: { Sex: 'M' } }, { $group: { _id: null, avgHeight: { $avg: "$Height" }, avgWeight: { $avg: "$Weight" } }}, { $project: { avgHeight: 1, avgWeight:1 } } ])	candidate_poll
db.people.aggregate([ { $group: { _id: "$Sex", avgWeight: { $avg: "$Weight" }, minWeight: { $min: "$Weight" } } } ])	candidate_poll
db.people.aggregate([ { $group: { _id: "$Sex", avgWeight: { $avg: "$Weight" }, minWeight: { $min: "$Weight" } } } ])	candidate_poll
db.candidate.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "candidate_info" } }, { $unwind: "$candidate_info" }, { $sort: { "Support_rate": -1 } }, { $limit: 1 }, { $project: { name: "$candidate_info.Name", sex: "$candidate_info.Sex" } } ])	candidate_poll
db.candidate.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "candidate_info" } }, { $unwind: "$candidate_info" }, { $sort: { "Support_rate": -1 } }, { $limit: 1 }, { $project: { name: "$candidate_info.Name", sex: "$candidate_info.Sex" } } ])	candidate_poll
db.people.aggregate([ { $lookup: { from: "candidate", localField: "People_ID", foreignField: "People_ID", as: "candidate_info" } }, { $unwind: "$candidate_info" }, { $group: { _id: "$Sex", avgUnsureRate: { $avg: "$candidate_info.Unsure_rate" } } }, { $sort: { avgUnsureRate: -1 } }, { $limit: 1 }, { $project: { Sex:"$_id" } } ])	candidate_poll
db.candidate.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $unwind: "$people_info" }, { $group: { _id: "$people_info.Sex", avgUnsureRate: { $avg: "$Unsure_rate" } } }, { $sort: { avgUnsureRate: -1 } }, { $limit: 1 }, { $project: { sex: "$_id" } } ])	candidate_poll
db.people.aggregate([ { $lookup: { from: "candidate", localField: "People_ID", foreignField: "People_ID", as: "electionParticipation" } }, { $match: { electionParticipation: { $size: 0 } } }, { $project: { Name: 1 } } ])	candidate_poll
db.people.aggregate([ { $lookup: { from: "candidate", localField: "People_ID", foreignField: "People_ID", as: "candidate_data" } }, { $match: { "candidate_data": { $size: 0 } } }, { $project: { Name: 1 } } ])	candidate_poll
db.candidate.aggregate([ { $group: { _id: null, maxSupportRate: { $max: "$Support_rate" }, minConsiderRate: { $min: "$Consider_rate" }, minOpposeRate: { $min: "$Oppose_rate" } } }, { $project: { maxSupportRate: 1, minConsiderRate: 1, minOpposeRate: 1 } } ])	candidate_poll
db.candidate.aggregate([ { $group: { _id: null, maxSupportRate: { $max: "$Support_rate" }, minConsiderRate: { $min: "$Consider_rate" }, minOpposeRate: { $min: "$Oppose_rate" } } }, { $project: { maxSupportRate: 1, minConsiderRate: 1, minOpposeRate: 1 } } ])	candidate_poll
db.people.aggregate([ { $match: { Sex: "F" } }, { $lookup: { from: "candidate", localField: "People_ID", foreignField: "People_ID", as: "candidate_info" } }, { $unwind: "$candidate_info" }, { $project: { Name: 1 } }, { $sort: { Name: 1 } } ])	candidate_poll
db.people.aggregate([ { $match: { Sex: "F" } }, { $lookup: { from: "candidate", localField: "People_ID", foreignField: "People_ID", as: "candidate_info" } }, { $unwind: "$candidate_info" }, { $sort: { Name: 1 } }, { $project: { Name: 1 } } ])	candidate_poll
db.people.aggregate([ { $group: { _id: null, avgHeight: { $avg: "$Height" } } }, { $lookup: { from: "people", let: { avgHeight: "$avgHeight" }, pipeline: [ { $match: { $expr: { $lt: ["$Height", "$$avgHeight"] } } }, { $project: { Name: 1 } } ], as: "peopleWithLowerHeight" }}, { $unwind: "$peopleWithLowerHeight" }, { $replaceRoot: { newRoot: "$peopleWithLowerHeight" } } ])	candidate_poll
db.people.aggregate([ { $group: { _id: null, avgHeight: { $avg: "$Height" } } }, { $lookup: { from: "people", let: { avgHeight: "$avgHeight" }, pipeline: [ { $match: { $expr: { $lt: ["$Height", "$$avgHeight"] } } }, { $project: { Name: 1 } } ], as: "peopleShorterThanAverage" }}, { $unwind: "$peopleShorterThanAverage" }, { $replaceRoot: { newRoot: "$peopleShorterThanAverage" } } ])	candidate_poll
db.people.find({})	candidate_poll
db.people.find({})	candidate_poll
db.Movie.find({director: 'Steven Spielberg'}, {title: 1})	movie_1
db.Movie.find({director: 'Steven Spielberg'}, {title: 1})	movie_1
db.Movie.find( { director: "James Cameron", year: { $gt: 2000 } }, { title: 1 } )	movie_1
db.Movie.find({director: 'James Cameron', year: {$gt: 2000}}, {title: 1})	movie_1
db.Movie.find({title: 'Avatar'}, {director: 1})	movie_1
db.Movie.find({title: 'Avatar'}, {director: 1})	movie_1
db.Reviewer.find({"name": /Mike/}, {"_id": 0, "rID": 1})	movie_1
db.Reviewer.find({name: {$regex: /Mike/}}, { rID: 1})	movie_1
db.Reviewer.find({name: 'Daniel Lewis'}, { rID: 1})	movie_1
db.Reviewer.findOne({ name: "Daniel Lewis" }, { rID: 1 })	movie_1
db.Rating.aggregate([ { $group: { _id: null, max_stars: { $max: "$stars" }, min_stars: { $min: "$stars" } } }, { $project: { max_stars: 1, min_stars: 1 } } ])	movie_1
db.Rating.aggregate([ { $group: { _id: null, maxStars: { $max: "$stars" }, minStars: { $min: "$stars" } } }, { $project: { maxStars: 1, minStars: 1 } } ])	movie_1
db.Movie.aggregate([ { $lookup: { from: "Rating", localField: "mID", foreignField: "mID", as: "ratings" } }, { $match: { "ratings.stars": { $gte: 4 } } }, { $project: { year: 1 } }, { $sort: { year: 1 } } ])	movie_1
db.Movie.aggregate([ { $lookup: { from: "Rating", localField: "mID", foreignField: "mID", as: "ratings" } }, { $match: { "ratings.stars": { $gte: 4 } } }, { $project: { year: 1 } }, { $sort: { year: 1 } } ])	movie_1
db.Rating.aggregate([ { $lookup: { from: "Reviewer", localField: "rID", foreignField: "rID", as: "reviewer_info" } }, { $unwind: "$reviewer_info" }, { $group: { _id: "$reviewer_info.name", averageStars: { $avg: "$stars" } } } ])	movie_1
db.Rating.aggregate([ { $lookup: { from: "Reviewer", localField: "rID", foreignField: "rID", as: "reviewer_info" } }, { $unwind: "$reviewer_info" }, { $group: { _id: "$reviewer_info.name", averageStars: { $avg: "$stars" } } } ])	movie_1
db.Movie.find( { mID: { $nin: db.Rating.distinct("mID") } }, { title: 1 } )	movie_1
db.Movie.find({ mID: { $nin: db.Rating.distinct("mID") } }, { title: 1 })	movie_1
db.Movie.aggregate([ { $sort: { year: 1 } }, { $limit: 1 }, { $lookup: { from: "Rating", localField: "mID", foreignField: "mID", as: "ratings" } }, { $project: { title: 1, averageStars: { $avg: "$ratings.stars" } } } ])	movie_1
db.Movie.aggregate([ { $sort: { year: 1 } }, { $limit: 1 }, { $lookup: { from: "Rating", localField: "mID", foreignField: "mID", as: "ratings" } }, { $project: { title: 1, averageRating: { $avg: "$ratings.stars" } } } ])	movie_1
db.Movie.find({}, {title: 1}).sort({year: -1}).limit(1)	movie_1
db.Movie.find({}, {title: 1}).sort({year: -1}).limit(1)	movie_1
db.Rating.aggregate([ { $lookup: { from: "Movie", localField: "mID", foreignField: "mID", as: "movie_info" } }, { $unwind: "$movie_info" }, { $sort: { "movie_info.year": -1, "stars": -1 } }, { $group: { _id: "$movie_info.year", max_stars: { $max: "$stars" } } }, { $sort: { _id: -1 } }, { $limit: 1 } ])	movie_1
db.Movie.aggregate([ { $sort: { year: -1 } }, { $limit: 1 }, { $lookup: { from: "Rating", localField: "mID", foreignField: "mID", as: "ratings" }}, { $unwind: "$ratings" }, { $group: { _id: "$year", highestRating: { $max: "$ratings.stars" } }}, { $project: { highestRating: 1, year: "$_id" }} ])	movie_1
db.Movie.aggregate([ { $match: { director: "Steven Spielberg" } }, { $group: { _id: null, maxYear: { $max: "$year" } } }, { $lookup: { from: "Movie", let: { maxSpielbergYear: "$maxYear" }, pipeline: [ { $match: { $expr: { $gt: ["$year", "$$maxSpielbergYear"] } } }, { $project: { title: 1 } } ], as: "moviesAfterSpielberg" } }, { $unwind: "$moviesAfterSpielberg" }, { $replaceRoot: { newRoot: "$moviesAfterSpielberg" } } ])	movie_1
db.Movie.find( { year: { $gt: db.Movie.find({ director: "Steven Spielberg" }).sort({ year: -1 }).limit(1).next().year } }, { title: 1 } )	movie_1
db.Rating.aggregate([ { $group: { _id: "$rID", count: { $sum: 1 } } }, { $match: { count: { $gte: 3 } } }, { $lookup: { from: "Reviewer", localField: "_id", foreignField: "rID", as: "reviewer" } }, { $unwind: "$reviewer" }, { $project: { name: "$reviewer.name" } } ])	movie_1
db.Rating.aggregate([ { $group: { _id: "$rID", count: { $sum: 1 } } }, { $match: { count: { $gte: 3 } } }, { $lookup: { from: "Reviewer", localField: "_id", foreignField: "rID", as: "reviewer" } }, { $unwind: "$reviewer" }, { $project: { name: "$reviewer.name" } } ])	movie_1
db.Reviewer.aggregate([ { $lookup: { from: "Rating", localField: "rID", foreignField: "rID", as: "rating_info" } }, { $unwind: "$rating_info" }, { $lookup: { from: "Movie", localField: "rating_info.mID", foreignField: "mID", as: "movie_info" } }, { $unwind: "$movie_info" }, { $match: { "movie_info.title": "Gone with the Wind" } }, { $group: { _id: "$name" } }, { $project: { name: "$_id" } } ])	movie_1
db.Reviewer.aggregate([ { $lookup: { from: "Rating", localField: "rID", foreignField: "rID", as: "RatingInfo" } }, { $unwind: "$RatingInfo" }, { $lookup: { from: "Movie", localField: "RatingInfo.mID", foreignField: "mID", as: "MovieInfo" } }, { $unwind: "$MovieInfo" }, { $match: { "MovieInfo.title": "Gone with the Wind" } }, { $project: { name: 1 } }, { $group: { _id: "$name" } } ])	movie_1
db.Movie.aggregate([ { $lookup: { from: "Rating", localField: "mID", foreignField: "mID", as: "ratings" } }, { $unwind: "$ratings" }, { $lookup: { from: "Reviewer", localField: "ratings.rID", foreignField: "rID", as: "reviewers" } }, { $unwind: "$reviewers" }, { $match: { "reviewers.name": "Sarah Martinez" } }, { $group: { _id: "$director" } }, { $project: { director: "$_id" } } ])	movie_1
db.Reviewer.aggregate([ { $match: { name: "Sarah Martinez" } }, { $lookup: { from: "Rating", localField: "rID", foreignField: "rID", as: "rating_info" } }, { $unwind: "$rating_info" }, { $lookup: { from: "Movie", localField: "rating_info.mID", foreignField: "mID", as: "movie_info" } }, { $unwind: "$movie_info" }, { $project: { director: "$movie_info.director" } }, { $group: { _id: "$director" } }, { $project: { director: "$_id" } } ])	movie_1
db.Rating.aggregate([ { $lookup: { from: "Movie", localField: "mID", foreignField: "mID", as: "movie_info" } }, { $unwind: "$movie_info" }, { $lookup: { from: "Reviewer", localField: "rID", foreignField: "rID", as: "reviewer_info" } }, { $unwind: "$reviewer_info" }, { $match: { $expr: { $eq: ["$movie_info.director", "$reviewer_info.name"] } } }, { $group: { _id: { name: "$reviewer_info.name", title: "$movie_info.title", stars: "$stars" } } }, { $project: { "reviewer name": "$_id.name", "movie title": "$_id.title", "number of stars": "$_id.stars" } } ])	movie_1
db.Rating.aggregate([ { $lookup: { from: "Movie", localField: "mID", foreignField: "mID", as: "movie" } }, { $lookup: { from: "Reviewer", localField: "rID", foreignField: "rID", as: "reviewer" } }, { $unwind: "$movie" }, { $unwind: "$reviewer" }, { $match: { $expr: { $eq: ["$movie.director", "$reviewer.name"] } } }, { $project: { name: "$reviewer.name", title: "$movie.title", stars: "$stars" } } ])	movie_1
db.Reviewer.aggregate([ { $project: { name: 1 } }, { $unionWith: { coll: "Movie", pipeline: [{ $project: { title: 1 } }] } } ])	movie_1
db.Movie.aggregate([ { $lookup: { from: "Rating", localField: "mID", foreignField: "mID", as: "ratings" } }, { $lookup: { from: "Reviewer", localField: "ratings.rID", foreignField: "rID", as: "reviewers" } }, { $match: { "reviewers.name": { $ne: "Chris Jackson" } } }, { $project: { "_id": 0, "title": 1 } } ])	movie_1
db.Movie.aggregate([ { $lookup: { from: "Rating", localField: "mID", foreignField: "mID", as: "ratings" } }, { $lookup: { from: "Reviewer", localField: "ratings.rID", foreignField: "rID", as: "reviewer_ratings" } }, { $match: { "reviewer_ratings.name": { $ne: "Chris Jackson" } } }, { $project: { title: 1 } }, { $group: { _id: "$title" } } ])	movie_1
db.Movie.aggregate([ { $group: { _id: "$director", movies: { $push: "$title" }, count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $unwind: "$movies" }, { $project: { title: "$movies", director: "$_id" } }, { $sort: { director: 1, title: 1 } } ])	movie_1
db.Movie.aggregate([ { $group: { _id: "$director", movies: { $addToSet: { title: "$title" } }, count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $unwind: "$movies" }, { $project: { director: "$_id", title: "$movies.title" } }, { $sort: { director: 1, title: 1 } } ])	movie_1
db.Movie.aggregate([ { $group: { _id: "$director", movies: { $push: { title: "$title", year: "$year" } }, count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $unwind: "$movies" }, { $replaceRoot: { newRoot: "$movies" } }, { $project: { title: 1, year: 1 } } ])	movie_1
db.Movie.aggregate([ { $group: { _id: "$director", movies: { $push: { title: "$title", year: "$year" } }, count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $unwind: "$movies" }, { $project: { title: "$movies.title", year: "$movies.year" } } ])	movie_1
db.Movie.aggregate([ { $match: { director: { $ne: null } } }, { $group: { _id: "$director", count: { $sum: 1 } } }, { $match: { count: 1 } }, { $project: { director: "$_id" } } ])	movie_1
db.Movie.aggregate([ { $match: { director: { $ne: null } } }, { $group: { _id: "$director", count: { $sum: 1 } } }, { $match: { count: 1 } }, { $project: { director: "$_id" } } ])	movie_1
db.Rating.aggregate([ { $group: { _id: "$mID", averageRating: { $avg: "$stars" } } }, { $sort: { averageRating: -1 } }, { $limit: 1 }, { $lookup: { from: "Movie", localField: "_id", foreignField: "mID", as: "movieDetails" } }, { $unwind: "$movieDetails" }, { $project: { title: "$movieDetails.title", averageRating: 1 } } ])	movie_1
db.Rating.aggregate([ { $group: { _id: "$mID", avgRating: { $avg: "$stars" } } }, { $sort: { avgRating: -1 } }, { $limit: 1 }, { $lookup: { from: "Movie", localField: "_id", foreignField: "mID", as: "movieDetails" } }, { $unwind: "$movieDetails" }, { $project: { title: "$movieDetails.title", avgRating: 1 } } ])	movie_1
db.Movie.aggregate([ { $match: { director: {$ne: null} } }, { $lookup: { from: "Rating", localField: "mID", foreignField: "mID", as: "ratingInfo" } }, { $unwind: "$ratingInfo" }, { $sort: { "ratingInfo.stars": -1 } }, { $group: { _id: "$director", title: {$first: "$title"}, maxRating: {$first: "$ratingInfo.stars"} } }, { $project: { director: "$_id", title: 1, highestRating: "$maxRating" } } ])	movie_1
db.Rating.aggregate([ { $lookup: { from: "Movie", localField: "mID", foreignField: "mID", as: "movie_info" } }, { $unwind: "$movie_info" }, { $sort: { "stars": 1 } }, { $group: { _id: "$rID", title: { $first: "$movie_info.title" }, stars: { $first: "$stars" } } }, { $project: { title: 1, rID: "$_id", stars: 1 } } ])	movie_1
db.Reviewer.aggregate([ { $lookup: { from: "Rating", localField: "rID", foreignField: "rID", as: "ratingInfo" } }, { $unwind: "$ratingInfo" }, { $match: { "ratingInfo.stars": { $gt: 3 } } }, { $project: { name: 1 } }, { $group: { _id: "$name" } }, { $project: { name: "$_id" } } ])	movie_1
db.Rating.aggregate([ { $match: { stars: { $gt: 3 } } }, { $lookup: { from: "Reviewer", localField: "rID", foreignField: "rID", as: "reviewer_info" } }, { $unwind: "$reviewer_info" }, { $project: { name: "$reviewer_info.name" } } ])	movie_1
db.Rating.aggregate([ { $group: { _id: "$mID", avgStars: { $avg: "$stars" }, count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { mID: "$_id", avgStars: 1 } } ])	movie_1
db.Rating.aggregate([ {$project: {rID: 1, stars: 1}}, {$group: {_id: "$rID", stars: {$push: "$stars"}}}, {$match: {stars: {$ne: 4}}}, {$project: { rID: "$_id"}} ])	movie_1
db.Movie.aggregate([ { $lookup: { from: "Rating", localField: "mID", foreignField: "mID", as: "ratings" } }, { $lookup: { from: "Reviewer", localField: "ratings.rID", foreignField: "rID", as: "reviewers" } }, { $match: { $or: [ {"reviewers.name": "Brittany Harris"}, {"year": {$gt: 2000}} ] } }, { $project: { "_id": 0, "title": 1 } } ])	movie_1
db.Movie.aggregate([ { $lookup: { from: "Rating", localField: "mID", foreignField: "mID", as: "ratings" } }, { $lookup: { from: "Reviewer", localField: "ratings.rID", foreignField: "rID", as: "reviewers" } }, { $match: { $or: [ {"reviewers.name": "Brittany Harris"}, {"year": {$gt: 2000}} ] } }, { $project: { title: 1 } } ])	movie_1
db.Movie.find( { $or: [ { director: "James Cameron" }, { year: { $lt: 1980 } } ] }, { title: 1 } )	movie_1
db.Movie.find( { $or: [ { director: 'James Cameron' }, { year: { $lt: 1980 } } ] }, { title: 1 } )	movie_1
db.Reviewer.aggregate([ { $lookup: { from: "Rating", localField: "rID", foreignField: "rID", as: "ratings" }}, { $unwind: "$ratings" }, { $match: { "ratings.stars": { $in: [3, 4] } } }, { $group: { _id: "$rID", name: { $first: "$name" }, stars: { $addToSet: "$ratings.stars" } }}, { $match: { stars: { $all: [3, 4] } } }, { $project: { name: 1 } } ])	movie_1
db.Movie.aggregate([ { $lookup: { from: "Rating", localField: "mID", foreignField: "mID", as: "ratings" } }, { $match: { "ratings.stars": { $in: [3, 4] } } }, { $project: { title: 1, threeStars: { $filter: { input: "$ratings", as: "rating", cond: { $eq: ["$$rating.stars", 3] } } }, fourStars: { $filter: { input: "$ratings", as: "rating", cond: { $eq: ["$$rating.stars", 4] } } } } }, { $match: { $and: [ { threeStars: { $ne: [] } }, { fourStars: { $ne: [] } } ] } }, { $project: { title: 1 } } ])	movie_1
db.county_public_safety.find({}, {Name: 1}).sort({Population: -1})	county_public_safety
db.county_public_safety.find({}, {Name: 1}).sort({Population: -1})	county_public_safety
db.county_public_safety.aggregate([ { $group: { _id: null, minCrimeRate: { $min: "$Crime_rate" }, maxCrimeRate: { $max: "$Crime_rate" } } }, { $project: { minCrimeRate: 1, maxCrimeRate: 1 } } ])	county_public_safety
db.county_public_safety.aggregate([ { $group: { _id: null, minCrimeRate: { $min: "$Crime_rate" }, maxCrimeRate: { $max: "$Crime_rate" } } }, { $project: { minCrimeRate: 1, maxCrimeRate: 1 } } ])	county_public_safety
db.county_public_safety.find({}, {Crime_rate: 1}).sort({Police_officers: 1})	county_public_safety
db.county_public_safety.find({}, {Crime_rate: 1}).sort({Police_officers: 1})	county_public_safety
db.city.find({}, {Name: 1}).sort({Name: 1})	county_public_safety
db.city.find({}, {Name: 1}).sort({Name: 1})	county_public_safety
db.city.aggregate([ { $match: { Black: { $gt: 10 } } }, { $project: { Hispanic: 1 } } ])	county_public_safety
db.city.aggregate([ { $match: { Black: { $gt: 10 } } }, { $project: { Hispanic: 1 } } ])	county_public_safety
db.county_public_safety.find({}, {Name: 1}).sort({Population: -1}).limit(1)	county_public_safety
db.county_public_safety.find({}, {Name: 1}).sort({Population: -1}).limit(1)	county_public_safety
db.city.find({}, {Name: 1}).sort({White: -1}).limit(5)	county_public_safety
db.city.find({}, {Name: 1}).sort({White: -1}).limit(5)	county_public_safety
db.city.aggregate([ { $lookup: { from: "county_public_safety", localField: "County_ID", foreignField: "County_ID", as: "county_info" } }, { $unwind: "$county_info" }, { $project: { City_Name: "$Name", County_Name: "$county_info.Name" } } ])	county_public_safety
db.city.aggregate([ { $lookup: { from: "county_public_safety", localField: "County_ID", foreignField: "County_ID", as: "county_info" } }, { $unwind: "$county_info" }, { $project: { city_name: "$Name", county_name: "$county_info.Name" } } ])	county_public_safety
db.city.aggregate([ { $lookup: { from: "county_public_safety", localField: "County_ID", foreignField: "County_ID", as: "county_info" } }, { $unwind: "$county_info" }, { $project: { White: 1, Crime_rate: "$county_info.Crime_rate" } } ])	county_public_safety
db.city.aggregate([ { $lookup: { from: "county_public_safety", localField: "County_ID", foreignField: "County_ID", as: "county_info" } }, { $unwind: "$county_info" }, { $project: { White: 1, Crime_rate: "$county_info.Crime_rate" } } ])	county_public_safety
db.county_public_safety.aggregate([ { $sort: { Police_officers: -1 } }, { $limit: 1 }, { $lookup: { from: "city", localField: "County_ID", foreignField: "County_ID", as: "city_info" } }, { $unwind: "$city_info" }, { $project: { name: "$city_info.Name" } } ])	county_public_safety
db.city.aggregate([ { $lookup: { from: "county_public_safety", localField: "County_ID", foreignField: "County_ID", as: "county" } }, { $match: { "county.Population": { $gt: 20000 } } }, { $count: "numberOfCities" } ])	county_public_safety
db.city.aggregate([ { $lookup: { from: "county_public_safety", localField: "County_ID", foreignField: "County_ID", as: "county_info" } }, { $match: { "county_info.Population": { $gt: 20000 } } }, { $count: "number_of_cities" } ])	county_public_safety
db.city.aggregate([ { $match: { White: { $gt: 90 } } }, { $lookup: { from: "county_public_safety", localField: "County_ID", foreignField: "County_ID", as: "county_info" } }, { $unwind: "$county_info" }, { $project: { Crime_rate: "$county_info.Crime_rate" } } ])	county_public_safety
db.city.aggregate([ { $match: { White: { $gt: 90 } } }, { $lookup: { from: "county_public_safety", localField: "County_ID", foreignField: "County_ID", as: "county_info" } }, { $unwind: "$county_info" }, { $project: { Crime_rate: "$county_info.Crime_rate" } } ])	county_public_safety
db.county_public_safety.aggregate([ { $group: { _id: "$Police_force", count: { $sum: 1 } } }, { $project: { Police_force: "$_id", count: 1 } } ])	county_public_safety
db.county_public_safety.aggregate([ { $group: { _id: "$Police_force", count: { $sum: 1 } } } ])	county_public_safety
db.county_public_safety.aggregate([ { $group: { _id: "$Location", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Location: "$_id" } } ])	county_public_safety
db.county_public_safety.aggregate([ { $group: { _id: "$Location", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Location: "$_id" } } ])	county_public_safety
db.city.aggregate([ { $lookup: { from: "county_public_safety", localField: "County_ID", foreignField: "County_ID", as: "county_data" } }, { $match: { "county_data.Crime_rate": { $lt: 100 } } }, { $project: { Name: 1 } } ])	county_public_safety
db.county_public_safety.aggregate([ { $match: { Crime_rate: { $lt: 100 } } }, { $lookup: { from: "city", localField: "County_ID", foreignField: "County_ID", as: "cities" } }, { $unwind: "$cities" }, { $project: { name: "$cities.Name" } } ])	county_public_safety
db.county_public_safety.find({}, {Case_burden: 1}).sort({Population: -1})	county_public_safety
db.county_public_safety.find({}, {Case_burden: 1}).sort({Population: -1})	county_public_safety
db.Rooms.find( { basePrice: { $lt: 160 }, beds: 2, decor: 'modern' }, { roomName: 1 } )	inn_1
db.Rooms.find( { basePrice: { $lt: 160 }, beds: 2, decor: 'modern' }, { roomName: 1 } )	inn_1
db.Rooms.find({basePrice: {$gt: 160}, maxOccupancy: {$gt: 2}}, {roomName: 1, RoomId: 1})	inn_1
db.Rooms.find({basePrice: {$gt: 160}, maxOccupancy: {$gt: 2}}, { roomName: 1, RoomId: 1})	inn_1
db.Reservations.aggregate([ { $group: { _id: "$Room", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Rooms", localField: "_id", foreignField: "RoomId", as: "roomInfo" } }, { $unwind: "$roomInfo" }, { $project: { roomName: "$roomInfo.roomName" } } ])	inn_1
db.Reservations.find( { FirstName: 'ROY', LastName: 'SWEAZY' }, { Kids: 1 } )	inn_1
db.Rooms.aggregate([ { $match: { bedType: "King" } }, { $group: { _id: null, totalBeds: { $sum: "$beds" } } } , { $project: { totalBeds: 1} }])	inn_1
db.Rooms.aggregate([ { $match: { bedType: "King" } }, { $group: { _id: null, totalBeds: { $sum: "$beds" } } }, { $project: { totalBeds: 1} } ])	inn_1
db.Rooms.find({ bedType: 'King' }, { roomName: 1, decor: 1 }).sort({ basePrice: 1 })	inn_1
db.Rooms.find({ bedType: 'King' }, { roomName: 1, decor: 1 }).sort({ basePrice: 1 })	inn_1
db.Rooms.find({}, { roomName: 1, basePrice: 1}).sort({basePrice: 1}).limit(1)	inn_1
db.Rooms.find({}, { roomName: 1, basePrice: 1 }).sort({ basePrice: 1 }).limit(1)	inn_1
db.Rooms.find({roomName: 'Recluse and defiance'}, { decor: 1})	inn_1
db.Rooms.findOne({roomName: 'Recluse and defiance'}, { decor: 1})	inn_1
db.Rooms.aggregate([ { $group: { _id: "$bedType", averageBasePrice: { $avg: "$basePrice" } } }, { $project: { bedType: "$_id", averageBasePrice: 1 } } ])	inn_1
db.Rooms.aggregate([ { $group: { _id: "$bedType", averageBasePrice: { $avg: "$basePrice" } } } ])	inn_1
db.Rooms.aggregate([ { $match: { decor: 'modern' } }, { $group: { _id: null, totalOccupancy: { $sum: '$maxOccupancy' } } }, { $project: { totalOccupancy: 1} } ])	inn_1
db.Rooms.aggregate([ { $match: { decor: 'modern' } }, { $group: { _id: null, totalOccupancy: { $sum: '$maxOccupancy' } } }, { $project: { totalOccupancy: 1} } ])	inn_1
db.Reservations.aggregate([ { $lookup: { from: "Rooms", localField: "Room", foreignField: "RoomId", as: "RoomDetails" } }, { $unwind: "$RoomDetails" }, { $group: { _id: "$RoomDetails.decor", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { decor: "$_id" } } ])	inn_1
db.Rooms.aggregate([ { $lookup: { from: "Reservations", localField: "RoomId", foreignField: "Room", as: "reservations" } }, { $group: { _id: "$decor", count: { $sum: { $size: "$reservations" } } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	inn_1
db.Reservations.aggregate([ { $lookup: { from: "Rooms", localField: "Room", foreignField: "RoomId", as: "roomDetails" } }, { $unwind: "$roomDetails" }, { $project: { totalOccupants: { $add: ["$Adults", "$Kids"] }, maxOccupancy: "$roomDetails.maxOccupancy" } }, { $match: { $expr: { $eq: ["$totalOccupants", "$maxOccupancy"] } } }, { $count: "maxOccupancyReached" } ])	inn_1
db.Reservations.aggregate([ { $lookup: { from: "Rooms", localField: "Room", foreignField: "RoomId", as: "room_info" } }, { $unwind: "$room_info" }, { $project: { total_guests: { $add: ["$Adults", "$Kids"] }, maxOccupancy: "$room_info.maxOccupancy" } }, { $match: { $expr: { $eq: ["$total_guests", "$maxOccupancy"] } } }, { $count: "max_capacity_reached" } ])	inn_1
db.Rooms.aggregate([ { $group: { _id: "$bedType", count: { $sum: 1 } } } ])	inn_1
db.Rooms.aggregate([ { $group: { _id: "$bedType", count: { $sum: 1 } } } ])	inn_1
db.Rooms.find({}, { roomName: 1}).sort({maxOccupancy: -1}).limit(1)	inn_1
db.Rooms.find({}, { roomName: 1}).sort({maxOccupancy: -1}).limit(1)	inn_1
db.Rooms.find({}, { RoomId: 1, roomName: 1}).sort({basePrice: -1}).limit(1)	inn_1
db.Rooms.find({}, {RoomId: 1, roomName: 1}).sort({basePrice: -1}).limit(1)	inn_1
db.Rooms.find({decor: 'traditional'}, { roomName: 1, bedType: 1})	inn_1
db.Rooms.find({decor: 'traditional'}, { roomName: 1, bedType: 1})	inn_1
db.Rooms.aggregate([ { $match: { bedType: 'King' } }, { $group: { _id: '$decor', count: { $sum: 1 } } } ])	inn_1
db.Rooms.aggregate([ { $match: { bedType: "King" } }, { $group: { _id: "$decor", count: { $sum: 1 } } } ])	inn_1
db.Rooms.aggregate([ { $group: { _id: "$decor", averagePrice: { $avg: "$basePrice" }, minimumPrice: { $min: "$basePrice" } } } ])	inn_1
db.Rooms.aggregate([ { $group: { _id: "$decor", averagePrice: { $avg: "$basePrice" }, minimumPrice: { $min: "$basePrice" } } } ])	inn_1
db.Rooms.find({}, {roomName: 1}).sort({basePrice: 1})	inn_1
db.Rooms.find({}, { roomName: 1}).sort({basePrice: 1})	inn_1
db.Rooms.aggregate([ { $match: { basePrice: { $gt: 120 } } }, { $group: { _id: "$decor", count: { $sum: 1 } } } ])	inn_1
db.Rooms.aggregate([ { $match: { basePrice: { $gt: 120 } } }, { $group: { _id: "$decor", count: { $sum: 1 } } } ])	inn_1
db.Rooms.aggregate([ { $group: { _id: "$bedType", averagePrice: { $avg: "$basePrice" } } } ])	inn_1
db.Rooms.aggregate([ { $group: { _id: "$bedType", averageBasePrice: { $avg: "$basePrice" } } } ])	inn_1
db.Rooms.find({ bedType: { $in: ['King', 'Queen'] } }, { roomName: 1 })	inn_1
db.Rooms.find({ bedType: { $in: ['King', 'Queen'] } }, { roomName: 1 })	inn_1
db.Reservations.aggregate([ { $group: { _id: "$Room", reservationCount: { $sum: 1 } } }, { $match: { reservationCount: { $gt: 60 } } }, { $lookup: { from: "Rooms", localField: "_id", foreignField: "RoomId", as: "roomDetails" } }, { $unwind: "$roomDetails" }, { $project: { roomName: "$roomDetails.roomName" } } ])	inn_1
db.Rooms.aggregate([ { $lookup: { from: "Reservations", localField: "RoomId", foreignField: "Room", as: "reservations" } }, { $project: { roomName: 1 } }, { $match: { reservationCount: { $gt: 60 } } } ])	inn_1
db.Customer_Master_Index.aggregate([ { $lookup: { from: "CMI_Cross_References", localField: "master_customer_id", foreignField: "master_customer_id", as: "cross_references" } }, { $unwind: "$cross_references" }, { $match: { "cross_references.source_system_code": "Tax" } }, { $project: { cmi_details: 1 } } ])	local_govt_mdm
db.CMI_Cross_References.aggregate([ { $lookup: { from: "Council_Tax", localField: "cmi_cross_ref_id", foreignField: "cmi_cross_ref_id", as: "council_tax_data" } }, { $match: { "council_tax_data.0": { $exists: true } } }, { $project: { cmi_cross_ref_id: 1, source_system_code: 1 } } ])	local_govt_mdm
db.Business_Rates.aggregate([ { $lookup: { from: "CMI_Cross_References", localField: "cmi_cross_ref_id", foreignField: "cmi_cross_ref_id", as: "cross_ref" } }, { $unwind: "$cross_ref" }, { $group: { _id: { cmi_cross_ref_id: "$cross_ref.cmi_cross_ref_id", master_customer_id: "$cross_ref.master_customer_id" }, count: { $sum: 1 } } }, { $project: { cmi_cross_ref_id: "$_id.cmi_cross_ref_id", master_customer_id: "$_id.master_customer_id", count: 1 } } ])	local_govt_mdm
db.Electoral_Register.aggregate([ { $lookup: { from: "CMI_Cross_References", localField: "cmi_cross_ref_id", foreignField: "cmi_cross_ref_id", as: "cross_refs" } }, { $unwind: "$cross_refs" }, { $match: { "cross_refs.source_system_code": { $in: ["Electoral", "Tax"] } } }, { $project: { electoral_register_id: 1 } } ])	local_govt_mdm
db.Customer_Master_Index.find().sort({cmi_details: -1})	local_govt_mdm
db.Parking_Fines.find({}, {council_tax_id: 1, cmi_cross_ref_id: 1})	local_govt_mdm
db.CMI_Cross_References.aggregate([ { $lookup: { from: "Parking_Fines", localField: "cmi_cross_ref_id", foreignField: "cmi_cross_ref_id", as: "parking_fines" } }, { $match: { "parking_fines": { $size: 0 } } }, { $project: { cmi_cross_ref_id: 1 } } ])	local_govt_mdm
db.CMI_Cross_References.aggregate([ { $match: { source_system_code: /en/ } }, { $group: { _id: "$source_system_code" } } ])	local_govt_mdm
db.party.aggregate([ { $lookup: { from: "party_host", localField: "Party_ID", foreignField: "Party_ID", as: "party_host_data" } }, { $project: { Party_Theme: 1 } }, { $sort: { Number_of_hosts: 1 } } ])	party_host
db.party.aggregate([ { $sort: { Number_of_hosts: 1 } }, { $project: { Party_Theme: 1 } } ])	party_host
db.party.find({}, {Party_Theme: 1, Location: 1})	party_host
db.party.aggregate([ { $lookup: { from: "party_host", localField: "Party_ID", foreignField: "Party_ID", as: "party_host_info" } }, { $project: { Party_Theme: 1, Location: 1 } } ])	party_host
db.party.find( { $or: [ { Party_Theme: 'Spring' }, { Party_Theme: 'Teqnology' } ] }, { First_year: 1, Last_year: 1 } )	party_host
db.party.find( { Party_Theme: { $in: ['Spring', 'Teqnology'] } }, { First_year: 1, Last_year: 1 } )	party_host
db.party.aggregate([ { $group: { _id: null, averageHosts: { $avg: "$Number_of_hosts" } } }, { $project: { averageHosts: 1} } ])	party_host
db.party.aggregate([ { $group: { _id: null, averageHosts: { $avg: "$Number_of_hosts" } } }, averageHosts:1 ])	party_host
db.party.find({}, { Location: 1 }).sort({ Number_of_hosts: -1 }).limit(1)	party_host
db.party.find({}, {Location: 1}).sort({Number_of_hosts: -1}).limit(1)	party_host
db.host.aggregate([ { $group: { _id: "$Nationality", count: { $sum: 1 } } } ])	party_host
db.host.aggregate([ { $group: { _id: "$Nationality", count: { $sum: 1 } } }, { $project: { Nationality: "$_id", count: 1 } } ])	party_host
db.host.aggregate([ { $group: { _id: "$Nationality", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { Nationality: "$_id"} }])	party_host
db.host.aggregate([ { $group: { _id: "$Nationality", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Nationality: "$_id" } } ])	party_host
db.party_host.aggregate([ { $lookup: { from: "host", localField: "Host_ID", foreignField: "Host_ID", as: "host_info" } }, { $lookup: { from: "party", localField: "Party_ID", foreignField: "Party_ID", as: "party_info" } }, { $unwind: "$host_info" }, { $unwind: "$party_info" }, { $project: { Party_Theme: "$party_info.Party_Theme", Name: "$host_info.Name" } } ])	party_host
db.party_host.aggregate([ { $lookup: { from: "host", localField: "Host_ID", foreignField: "Host_ID", as: "host_info" } }, { $unwind: "$host_info" }, { $lookup: { from: "party", localField: "Party_ID", foreignField: "Party_ID", as: "party_info" } }, { $unwind: "$party_info" }, { $project: { Party_Theme: "$party_info.Party_Theme", Name: "$host_info.Name" } } ])	party_host
db.party_host.aggregate([ { $lookup: { from: "host", localField: "Host_ID", foreignField: "Host_ID", as: "host_info" } }, { $lookup: { from: "party", localField: "Party_ID", foreignField: "Party_ID", as: "party_info" } }, { $unwind: "$host_info" }, { $unwind: "$party_info" }, { $project: { Location: "$party_info.Location", Name: "$host_info.Name" } }, { $sort: { "host_info.Age": 1 } } ])	party_host
db.party_host.aggregate([ { $lookup: { from: "host", localField: "Host_ID", foreignField: "Host_ID", as: "host_info" } }, { $lookup: { from: "party", localField: "Party_ID", foreignField: "Party_ID", as: "party_info" } }, { $unwind: "$host_info" }, { $unwind: "$party_info" }, { $project: { Location: "$party_info.Location", Name: "$host_info.Name" } }, { $sort: { "host_info.Age": 1 } } ])	party_host
db.party.aggregate([ { $match: { Number_of_hosts: { $gt: 20 } } }, { $lookup: { from: "party_host", localField: "Party_ID", foreignField: "Party_ID", as: "party_host_data" } }, { $unwind: "$party_host_data" }, { $lookup: { from: "host", localField: "party_host_data.Host_ID", foreignField: "Host_ID", as: "host_data" } }, { $unwind: "$host_data" }, { $project: { Name: "$host_data.Name" } } ])	party_host
db.party.aggregate([ { $lookup: { from: "party_host", localField: "Party_ID", foreignField: "Party_ID", as: "party_host_data" } }, { $unwind: "$party_host_data" }, { $lookup: { from: "host", localField: "party_host_data.Host_ID", foreignField: "Host_ID", as: "host_data" } }, { $unwind: "$host_data" }, { $match: { "Number_of_hosts": { $gt: 20 } } }, { $project: { "Host_Name": "$host_data.Name" } } ])	party_host
db.host.find({}, {Name: 1, Nationality: 1}).sort({Age: -1}).limit(1)	party_host
db.host.find({}, {Name: 1, Nationality: 1}).sort({Age: -1}).limit(1)	party_host
db.host.aggregate([ { $lookup: { from: "party_host", localField: "Host_ID", foreignField: "Host_ID", as: "parties" } }, { $match: { parties: { $size: 0 } } }, { $project: { Name: 1 } } ])	party_host
db.host.aggregate([ { $lookup: { from: "party_host", localField: "Host_ID", foreignField: "Host_ID", as: "hosted_parties" } }, { $match: { hosted_parties: { $size: 0 } } }, { $project: { Name: 1 } } ])	party_host
db.region.find({}, { Region_code: 1, Region_name: 1 }).sort({ Region_code: 1 })	storm_record
db.region.aggregate([ { $project: { Region_code: 1, Region_name: 1 } }, { $sort: { Region_code: 1 } } ])	storm_record
db.region.find({}, { Region_name: 1}).sort({Region_name: 1})	storm_record
db.region.find({}, { Region_name: 1}).sort({Region_name: 1})	storm_record
db.region.find({ Region_name: { $ne: 'Denmark' } }, { Region_name: 1 })	storm_record
db.storm.find({ Number_Deaths: { $gte: 1 } }, { Name: 1, Dates_active: 1, Number_Deaths: 1 })	storm_record
db.storm.find({ Number_Deaths: { $gte: 1 }}, { Name: 1, Dates_active: 1, Number_Deaths: 1 })	storm_record
db.storm.aggregate([ { $match: { Max_speed: { $gt: 1000 } } }, { $group: { _id: null, averageDamage: { $avg: "$Damage_millions_USD" }, maximumDamage: { $max: "$Damage_millions_USD" } }}, { $project: { averageDamage: 1, maximumDamage: 1 } } ])	storm_record
db.storm.aggregate([ { $match: { Max_speed: { $gt: 1000 } } }, { $group: { _id: null, averageDamage: { $avg: "$Damage_millions_USD" }, maximumDamage: { $max: "$Damage_millions_USD" } } }, { $project: { averageDamage: 1, maximumDamage: 1 } } ])	storm_record
db.storm.aggregate([ { $group: { _id: null, averageMaxSpeed: { $avg: "$Max_speed" } } }, { $lookup: { from: "storm", let: { averageMaxSpeed: "$averageMaxSpeed" }, pipeline: [ { $match: { $expr: { $gt: ["$Max_speed", "$$averageMaxSpeed"] } } }, { $group: { _id: null, totalDeaths: { $sum: "$Number_Deaths" }, totalDamage: { $sum: "$Damage_millions_USD" } } } ], as: "results" } }, { $unwind: "$results" }, { $replaceRoot: { newRoot: "$results" } }, { $project: { totalDeaths: 1, totalDamage: 1 } } ])	storm_record
db.storm.aggregate([ { $group: { _id: null, averageMaxSpeed: { $avg: "$Max_speed" } } }, { $lookup: { from: "storm", let: { averageMaxSpeed: "$averageMaxSpeed" }, pipeline: [ { $match: { $expr: { $gt: ["$Max_speed", "$$averageMaxSpeed"] } } }, { $group: { _id: null, totalDeaths: { $sum: "$Number_Deaths" }, totalDamage: { $sum: "$Damage_millions_USD" } } } ], as: "results" } }, { $unwind: "$results" }, { $project: { totalDeaths: "$results.totalDeaths", totalDamage: "$results.totalDamage" } } ])	storm_record
db.storm.aggregate([ { $sort: { Max_speed: -1 } }, { $project: { Name: 1, Damage_millions_USD: 1 } } ])	storm_record
db.storm.find({}, { Name: 1, Damage_millions_USD: 1 }).sort({ Max_speed: -1 })	storm_record
db.region.aggregate([ { $lookup: { from: "affected_region", localField: "Region_id", foreignField: "Region_id", as: "affected_info" } }, { $match: { affected_info: { $size: 0 } } }, { $project: { Region_name: 1 } } ])	storm_record
db.region.aggregate([ { $lookup: { from: "affected_region", localField: "Region_id", foreignField: "Region_id", as: "affected" } }, { $match: { affected: { $size: 0 } } }, { $project: { Region_name: 1 } } ])	storm_record
db.storm.aggregate([ { $lookup: { from: "affected_region", localField: "Storm_ID", foreignField: "Storm_ID", as: "affected" } }, { $match: { affected: { $size: 0 } } }, { $project: { Name: 1 } } ])	storm_record
db.storm.aggregate([ { $lookup: { from: "affected_region", localField: "Storm_ID", foreignField: "Storm_ID", as: "affected" } }, { $match: { affected: { $size: 0 } } }, { $project: { Name: 1 } } ])	storm_record
db.storm.aggregate([ { $lookup: { from: "affected_region", localField: "Storm_ID", foreignField: "Storm_ID", as: "affectedRegions" } }, { $project: { Name: 1, NumRegions: { $size: "$affectedRegions" }, TotalCitiesAffected: { $sum: "$affectedRegions.Number_city_affected" } } }, { $match: { NumRegions: { $gte: 2 }, TotalCitiesAffected: { $gte: 10 } } }, { $project: { Name: 1 } } ])	storm_record
db.storm.aggregate([ { $lookup: { from: "affected_region", localField: "Storm_ID", foreignField: "Storm_ID", as: "affected_details" } }, { $unwind: "$affected_details" }, { $group: { _id: "$Storm_ID", name: { $first: "$Name" }, regionsAffected: { $sum: 1 }, totalCitiesAffected: { $sum: "$affected_details.Number_city_affected" } } }, { $match: { $and: [ { regionsAffected: { $gte: 2 } }, { totalCitiesAffected: { $gte: 10 } } ] } }, { $project: { name: 1 } } ])	storm_record
db.affected_region.aggregate([ { $lookup: { from: "region", localField: "Region_id", foreignField: "Region_id", as: "region_info" } }, { $lookup: { from: "storm", localField: "Storm_ID", foreignField: "Storm_ID", as: "storm_info" } }, { $unwind: "$region_info" }, { $unwind: "$storm_info" }, { $match: { "storm_info.Number_Deaths": { $gte: 10 } } }, { $project: { "region_name": "$region_info.Region_name" } } ])	storm_record
db.affected_region.aggregate([ { $lookup: { from: "region", localField: "Region_id", foreignField: "Region_id", as: "region_info" } }, { $unwind: "$region_info" }, { $match: { "region_info.Region_name": "Denmark" } }, { $lookup: { from: "storm", localField: "Storm_ID", foreignField: "Storm_ID", as: "storm_info" } }, { $unwind: "$storm_info" }, { $project: { name: "$storm_info.Name" } } ])	storm_record
db.affected_region.aggregate([ { $group: { _id: "$Region_id", stormCount: { $sum: 1 } } }, { $match: { stormCount: { $gte: 2 } } }, { $lookup: { from: "region", localField: "_id", foreignField: "Region_id", as: "regionData" } }, { $unwind: "$regionData" }, { $project: { region_name: "$regionData.Region_name" } } ])	storm_record
db.region.aggregate([ { $lookup: { from: "affected_region", localField: "Region_id", foreignField: "Region_id", as: "affected_region_info" } }, { $match: { "affected_region_info.1": { $exists: true } } }, { $project: { Region_name: 1 } } ])	storm_record
db.affected_region.aggregate([ { $lookup: { from: "region", localField: "Region_id", foreignField: "Region_id", as: "region_info" } }, { $lookup: { from: "storm", localField: "Storm_ID", foreignField: "Storm_ID", as: "storm_info" } }, { $unwind: "$region_info" }, { $unwind: "$storm_info" }, { $sort: { "storm_info.Number_Deaths": -1 } }, { $limit: 1 }, { $project: { "region_name": "$region_info.Region_name" } } ])	storm_record
db.affected_region.aggregate([ { $lookup: { from: "region", localField: "Region_id", foreignField: "Region_id", as: "region_info" } }, { $unwind: "$region_info" }, { $match: { "region_info.Region_name": { $in: ["Afghanistan", "Albania"] } } }, { $group: { _id: "$Storm_ID", regions: { $addToSet: "$region_info.Region_name" }, count: { $sum: 1 } } }, { $match: { count: 2 } }, { $lookup: { from: "storm", localField: "_id", foreignField: "Storm_ID", as: "storm_info" } }, { $unwind: "$storm_info" }, { $project: { Name: "$storm_info.Name" } } ])	storm_record
db.storm.aggregate([ { $lookup: { from: "affected_region", localField: "Storm_ID", foreignField: "Storm_ID", as: "affected_region" } }, { $lookup: { from: "region", localField: "affected_region.Region_id", foreignField: "Region_id", as: "region" } }, { $match: { $and: [ { "region.Region_name": "Afghanistan" }, { "region.Region_name": "Albania" } ] } }, { $project: { Name: 1 } } ])	storm_record
db.county.find({}, {County_name: 1, Population: 1})	election
db.county.find({}, { County_name: 1, Population: 1})	election
db.county.aggregate([ { $group: { _id: null, averagePopulation: { $avg: "$Population" } } }, { $project: { averagePopulation: 1} } ])	election
db.county.aggregate([ { $group: { _id: null, averagePopulation: { $avg: "$Population" } } }, { $project: { averagePopulation: 1} } ])	election
db.county.aggregate([ { $group: { _id: null, maxPopulation: { $max: "$Population" }, minPopulation: { $min: "$Population" } } }, { $project: { maxPopulation: 1, minPopulation:1 } } ])	election
db.county.aggregate([ { $group: { _id: null, maxPopulation: { $max: "$Population" }, minPopulation: { $min: "$Population" } } }, { $project: { maxPopulation: 1, minPopulation: 1 } } ])	election
db.county.find({County_name: 'Howard'}, {Zip_code: 1})	election
db.county.find({ County_name: 'Howard' }, { Zip_code: 1 })	election
db.election.find({District: 1}, {Delegate: 1})	election
db.election.find({District: 1}, {Delegate: 1})	election
db.election.find({}, {Delegate: 1, Committee: 1})	election
db.election.find({}, {Delegate: 1, Committee: 1})	election
db.party.find({ Party: 'Democratic' }, { Lieutenant_Governor: 1, Comptroller: 1 })	election
db.party.find({ Party: 'Democratic' }, { Lieutenant_Governor: 1, Comptroller: 1 })	election
db.election.find({})	election
db.election.find({})	election
db.county.aggregate([ { $lookup: { from: "election", localField: "County_Id", foreignField: "District", as: "election_info" } }, { $unwind: "$election_info" }, { $project: { Delegate: "$election_info.Delegate", County_name: 1 } } ])	election
db.county.aggregate([ { $lookup: { from: "election", localField: "County_Id", foreignField: "District", as: "election_info" } }, { $unwind: "$election_info" }, { $project: { Delegate: "$election_info.Delegate", County_name: 1 } } ])	election
db.county.aggregate([ { $match: { Population: { $lt: 100000 } } }, { $lookup: { from: "election", localField: "County_Id", foreignField: "District", as: "election_info" } }, { $unwind: "$election_info" }, { $project: { Delegate: "$election_info.Delegate" } } ])	election
db.county.aggregate([ { $match: { Population: { $lt: 100000 } } }, { $lookup: { from: "election", localField: "County_Id", foreignField: "District", as: "election_info" } }, { $unwind: "$election_info" }, { $project: { Delegate: "$election_info.Delegate" } } ])	election
db.county.aggregate([ { $match: { Population: { $gt: 50000 } } }, { $lookup: { from: "election", localField: "County_Id", foreignField: "District", as: "election_info" } }, { $unwind: "$election_info" }, { $group: { _id: null, distinctDelegates: { $addToSet: "$election_info.Delegate" } } }, { $project: { count: { $size: "$distinctDelegates" } } } ])	election
db.county.aggregate([ { $match: { Population: { $gt: 50000 } } }, { $lookup: { from: "election", localField: "County_Id", foreignField: "District", as: "election_info" } }, { $unwind: "$election_info" }, { $group: { _id: null, distinctDelegates: { $addToSet: "$election_info.Delegate" } } }, { $project: { count: { $size: "$distinctDelegates" } } } ])	election
db.county.aggregate([ { $lookup: { from: "election", localField: "County_Id", foreignField: "District", as: "election_info" } }, { $match: { "election_info.Committee": "Appropriations" } }, { $project: { County_name: 1 } } ])	election
db.county.aggregate([ { $lookup: { from: "election", localField: "County_Id", foreignField: "District", as: "election_info" } }, { $match: { "election_info.Committee": "Appropriations" } }, { $project: { County_name: 1 } } ])	election
db.election.aggregate([ { $match: { District: 1 } }, { $lookup: { from: "party", localField: "Party", foreignField: "Party_ID", as: "party_info" } }, { $unwind: "$party_info" }, { $project: { Governor: "$party_info.Governor" } } ])	election
db.election.aggregate([ { $match: { District: 1 } }, { $lookup: { from: "party", localField: "Party", foreignField: "Party_ID", as: "party_info" } }, { $unwind: "$party_info" }, { $project: { Governor: "$party_info.Governor" } } ])	election
db.election.aggregate([ { $match: { $or: [ { District: 1 }, { District: 2 } ] } }, { $lookup: { from: "party", localField: "Party", foreignField: "Party_ID", as: "party_info" } }, { $unwind: "$party_info" }, { $project: { Comptroller: "$party_info.Comptroller" } } ])	election
db.election.aggregate([ { $match: { District: { $in: [1, 2] } } }, { $lookup: { from: "party", localField: "Party", foreignField: "Party_ID", as: "party_info" } }, { $unwind: "$party_info" }, { $project: { Comptroller: "$party_info.Comptroller" } } ])	election
db.election.aggregate([ { $lookup: { from: "party", localField: "Party", foreignField: "Party_ID", as: "party_info" } }, { $match: { "party_info.Party": "Democratic" } }, { $project: { Committee: 1 } } ])	election
db.election.aggregate([ { $lookup: { from: "party", localField: "Party", foreignField: "Party_ID", as: "party_info" } }, { $match: { "party_info.Party": "Democratic" } }, { $project: { Committee: 1 } } ])	election
db.county.find({}, {County_name: 1}).sort({Population: 1})	election
db.county.find({}, {County_name: 1}).sort({Population: 1})	election
db.county.find({}, {County_name: 1}).sort({County_name: -1})	election
db.county.find({}, {County_name: 1}).sort({County_name: -1})	election
db.county.find({}, {County_name: 1}).sort({Population: -1}).limit(1)	election
db.county.find({}, {County_name: 1}).sort({Population: -1}).limit(1)	election
db.county.find({}, {County_name: 1}).sort({Population: 1}).limit(3)	election
db.county.find({}, {County_name: 1}).sort({Population: 1}).limit(3)	election
db.county.aggregate([ { $lookup: { from: "election", localField: "County_Id", foreignField: "District", as: "election_info" } }, { $unwind: "$election_info" }, { $group: { _id: "$County_Id", county_name: { $first: "$County_name" }, count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { county_name: 1 } } ])	election
db.county.aggregate([ { $lookup: { from: "election", localField: "County_Id", foreignField: "District", as: "election_info" } }, { $unwind: "$election_info" }, { $group: { _id: "$County_name", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { County_name: "$_id" } } ])	election
db.party.aggregate([ { $group: { _id: "$Party", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Party: "$_id" } } ])	election
db.party.aggregate([ { $group: { _id: "$Party", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Party: "$_id" } } ])	election
db.election.aggregate([ { $group: { _id: "$Party", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "party", localField: "_id", foreignField: "Party_ID", as: "party_info" } }, { $project: { Party: { $arrayElemAt: ["$party_info.Party", 0] } } } ])	election
db.election.aggregate([ { $group: { _id: "$Party", delegatesCount: { $sum: 1 } } }, { $sort: { delegatesCount: -1 } }, { $limit: 1 }, { $lookup: { from: "party", localField: "_id", foreignField: "Party_ID", as: "partyDetails" } }, { $unwind: "$partyDetails" }, { $project: { Party: "$partyDetails.Party" } } ])	election
db.party.aggregate([ { $group: { _id: "$Governor", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { Governor: "$_id" } }])	election
db.party.aggregate([ { $group: { _id: "$Governor", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Governor: "$_id" } } ])	election
db.party.aggregate([ { $group: { _id: "$Comptroller", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	election
db.party.aggregate([ { $group: { _id: "$Comptroller", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Comptroller: "$_id", count: 1 } } ])	election
db.party.find({ Party_ID: { $nin: db.election.distinct("Party") } }, { Party: 1 })	election
db.party.find({ Party_ID: { $nin: db.election.distinct("Party") } }, { Party: 1 })	election
db.election.aggregate([ { $lookup: { from: "party", localField: "Party", foreignField: "Party_ID", as: "party_info" } }, { $match: { $or: [ { "Committee": "Appropriations" }, { "Committee": "Economic Matters" } ] } }, { $group: { _id: "$Party", committees: { $addToSet: "$Committee" } } }, { $match: { committees: { $all: ["Appropriations", "Economic Matters"] } } }, { $lookup: { from: "party", localField: "_id", foreignField: "Party_ID", as: "party_info" } }, { $project: { "party_info.Party": 1 } }, { $unwind: "$party_info" }, { $replaceRoot: { newRoot: "$party_info" } } ])	election
db.journalist.find({}, {Name: 1}).sort({Years_working: 1})	news_report
db.journalist.find({}, { Nationality: 1, Age: 1})	news_report
db.journalist.find( { Nationality: { $in: ['England', 'Wales'] } }, { Name: 1 } )	news_report
db.journalist.aggregate([ { $group: { _id: null, averageYearsWorking: { $avg: "$Years_working" } } } , averageYearsWorking:1])	news_report
db.journalist.find({}, { Nationality: 1}).sort({Years_working: -1}).limit(1)	news_report
db.journalist.aggregate([ { $group: { _id: "$Nationality", count: { $sum: 1 } } }, { $project: { Nationality: "$_id", count: 1 } } ])	news_report
db.journalist.aggregate([ { $group: { _id: "$Nationality", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Nationality: "$_id" } } ])	news_report
db.journalist.aggregate([ { $group: { _id: "$Nationality", moreThan10: { $sum: { $cond: [{$gt: ["$Years_working", 10]}, 1, 0] } }, lessThan3: { $sum: { $cond: [{$lt: ["$Years_working", 3]}, 1, 0] } } } }, { $match: { moreThan10: {$gt: 0}, lessThan3: {$gt: 0} } }, { $project: { _id: 1 } } ])	news_report
db.event.find({}, { Date: 1, Name: 1, Venue: 1 }).sort({ Event_Attendance: -1 })	news_report
db.news_report.aggregate([ { $lookup: { from: "event", localField: "Event_ID", foreignField: "Event_ID", as: "event_info" } }, { $lookup: { from: "journalist", localField: "journalist_ID", foreignField: "journalist_ID", as: "journalist_info" } }, { $unwind: "$event_info" }, { $unwind: "$journalist_info" }, { $project: { Name: "$journalist_info.Name", Date: "$event_info.Date" } } ])	news_report
db.news_report.aggregate([ { $lookup: { from: "event", localField: "Event_ID", foreignField: "Event_ID", as: "event_info" } }, { $lookup: { from: "journalist", localField: "journalist_ID", foreignField: "journalist_ID", as: "journalist_info" } }, { $unwind: "$event_info" }, { $unwind: "$journalist_info" }, { $project: { journalist_name: "$journalist_info.Name", event_name: "$event_info.Name" } }, { $sort: { event_name: 1 } } ])	news_report
db.news_report.aggregate([ { $lookup: { from: "event", localField: "Event_ID", foreignField: "Event_ID", as: "event_info" } }, { $lookup: { from: "journalist", localField: "journalist_ID", foreignField: "journalist_ID", as: "journalist_info" } }, { $unwind: "$journalist_info" }, { $group: { _id: "$journalist_info.Name", count: { $sum: 1 } } }, { $project: { Name: "$_id", Number_of_events: "$count" } } ])	news_report
db.news_report.aggregate([ { $lookup: { from: "event", localField: "Event_ID", foreignField: "Event_ID", as: "event_info" } }, { $lookup: { from: "journalist", localField: "journalist_ID", foreignField: "journalist_ID", as: "journalist_info" } }, { $unwind: "$journalist_info" }, { $group: { _id: "$journalist_info.Name", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Name: "$_id" } } ])	news_report
db.journalist.find( { journalist_ID: { $nin: db.news_report.distinct("journalist_ID") } }, { Name: 1 } )	news_report
db.event.aggregate([ { $group: { _id: null, averageAttendance: { $avg: "$Event_Attendance" }, maxAttendance: { $max: "$Event_Attendance" } } }, { $project: { averageAttendance: 1, maxAttendance:1 } }])	news_report
db.event.find({}, { Venue: 1, Name: 1 }).sort({ Event_Attendance: -1 }).limit(2)	news_report
db.Restaurant.find({}, {ResName: 1})	restaurant_1
db.Restaurant.find({ResName: 'Subway'}, { Address: 1})	restaurant_1
db.Restaurant.findOne({ResName: 'Subway'}, {Rating: 1})	restaurant_1
db.Restaurant_Type.find({}, { ResTypeName: 1 })	restaurant_1
db.Restaurant_Type.findOne({ResTypeName: 'Sandwich'}, {ResTypeDescription: 1})	restaurant_1
db.Restaurant.find({}, {ResName: 1, Rating: 1}).sort({Rating: -1}).limit(1)	restaurant_1
db.Student.find({ Fname: 'Linda', LName: 'Smith' }, { city_code: 1 })	restaurant_1
db.Student.aggregate([ { $group: { _id: "$Advisor", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	restaurant_1
db.Student.aggregate([ { $group: { _id: "$Major", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 } ])	restaurant_1
db.Student.aggregate([ { $group: { _id: "$Major", count: { $sum: 1 } } }, { $match: { count: { $gte: 2, $lte: 30 } } }, { $project: { Major: "$_id", count: 1 } } ])	restaurant_1
db.Restaurant.aggregate([ { $lookup: { from: "Type_Of_Restaurant", localField: "ResID", foreignField: "ResID", as: "restaurant_types" } }, { $unwind: "$restaurant_types" }, { $lookup: { from: "Restaurant_Type", localField: "restaurant_types.ResTypeID", foreignField: "ResTypeID", as: "restaurant_types.type" } }, { $unwind: "$restaurant_types.type" }, { $match: { "restaurant_types.type.ResTypeName": "Sandwich" } }, { $group: { _id: "$restaurant_types.type.ResTypeID", count: { $sum: 1 } } } ])	restaurant_1
db.Student.aggregate([ { $match: { Fname: "Linda", LName: "Smith" } }, { $lookup: { from: "Visits_Restaurant", localField: "StuID", foreignField: "StuID", as: "Visits" } }, { $unwind: "$Visits" }, { $lookup: { from: "Restaurant", localField: "Visits.ResID", foreignField: "ResID", as: "RestaurantVisits" } }, { $unwind: "$RestaurantVisits" }, { $match: { "RestaurantVisits.ResName": "Subway" } }, { $count: "VisitsCount" } ])	restaurant_1
db.Visits_Restaurant.aggregate([ { $lookup: { from: "Restaurant", localField: "ResID", foreignField: "ResID", as: "restaurant" } }, { $unwind: "$restaurant" }, { $group: { _id: "$restaurant.ResID", totalTime: { $sum: "$Spent" }, restaurantName: { $first: "$restaurant.ResName" } } }, { $sort: { totalTime: 1 } }, { $limit: 1 }, { $project: { restaurantName: 1, totalTime: 1 } } ])	restaurant_1
db.Actual_Orders.find({order_status_code: 'Success'}, { actual_order_id: 1})	customer_deliveries
db.Trucks.find({}, { truck_details: 1}).sort({truck_licence_number: 1})	customer_deliveries
db.Products.find({}, {product_name: 1}).sort({product_price: -1}).limit(1)	customer_deliveries
db.Customers.aggregate([ { $lookup: { from: "Customer_Addresses", localField: "customer_id", foreignField: "customer_id", as: "customer_addresses" } }, { $lookup: { from: "Addresses", localField: "customer_addresses.address_id", foreignField: "address_id", as: "addresses" } }, { $match: { "addresses.state_province_county": { $ne: "California" } } }, { $project: { customer_name: 1 } } ])	customer_deliveries
db.Customers.find({ payment_method: 'Visa' }, { customer_email: 1, customer_name: 1 })	customer_deliveries
db.Customers.aggregate([ { $lookup: { from: "Customer_Addresses", localField: "customer_id", foreignField: "customer_id", as: "customer_addresses" } }, { $unwind: "$customer_addresses" }, { $lookup: { from: "Addresses", localField: "customer_addresses.address_id", foreignField: "address_id", as: "addresses" } }, { $unwind: "$addresses" }, { $match: { "addresses.state_province_county": "California" } }, { $project: { customer_name: 1, customer_phone: 1 } } ])	customer_deliveries
db.Customers.find({}, {customer_name: 1, customer_phone: 1, customer_email: 1}).sort({date_became_customer: 1})	customer_deliveries
db.Customers.find({}, {customer_name: 1}).sort({date_became_customer: 1}).limit(5)	customer_deliveries
db.Customers.aggregate([ { $group: { _id: "$payment_method", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { payment_method: "$_id" } } ])	customer_deliveries
db.Delivery_Routes.find({}, {route_name: 1}).sort({route_name: 1})	customer_deliveries
db.Customer_Addresses.aggregate([ { $lookup: { from: "Addresses", localField: "address_id", foreignField: "address_id", as: "address_info" } }, { $unwind: "$address_info" }, { $group: { _id: "$address_info.state_province_county", customerCount: { $sum: 1 } } }, { $project: { state: "$_id", numberOfCustomers: "$customerCount" } } ])	customer_deliveries
db.Authors.aggregate([ { $lookup: { from: "Authorship", localField: "authID", foreignField: "authID", as: "authorship_info" } }, { $unwind: "$authorship_info" }, { $lookup: { from: "Papers", localField: "authorship_info.paperID", foreignField: "paperID", as: "paper_info" } }, { $unwind: "$paper_info" }, { $match: { "fname": "Atsushi", "lname": "Ohori" } }, { $count: "papers_count" } ])	icfp_1
db.Authorship.aggregate([ { $lookup: { from: "Authors", localField: "authID", foreignField: "authID", as: "authors" } }, { $unwind: "$authors" }, { $match: { "authors.fname": "Katsuhiro", "authors.lname": "Ueno" } }, { $lookup: { from: "Inst", localField: "instID", foreignField: "instID", as: "institutions" } }, { $unwind: "$institutions" }, { $group: { _id: "$institutions.instID", name: { $first: "$institutions.name" } } }, { $project: { name: 1 } } ])	icfp_1
db.Authors.aggregate([ { $lookup: { from: "Authorship", localField: "authID", foreignField: "authID", as: "authorship" } }, { $unwind: "$authorship" }, { $lookup: { from: "Inst", localField: "authorship.instID", foreignField: "instID", as: "institutions" } }, { $unwind: "$institutions" }, { $match: { "institutions.name": "Google" } }, { $group: { _id: { authID: "$authID", fname: "$fname", lname: "$lname" } } }, { $project: { fname: "$_id.fname", lname: "$_id.lname" } } ])	icfp_1
db.Authorship.aggregate([ { $lookup: { from: "Inst", localField: "instID", foreignField: "instID", as: "inst" } }, { $unwind: "$inst" }, { $match: { "inst.name": "Indiana University" } }, { $lookup: { from: "Papers", localField: "paperID", foreignField: "paperID", as: "paper" } }, { $unwind: "$paper" }, { $group: { _id: "$paper.paperID", title: { $first: "$paper.title" } } }, { $project: { title: 1 } } ])	icfp_1
db.Papers.aggregate([ { $lookup: { from: "Authorship", localField: "paperID", foreignField: "paperID", as: "authorship_info" } }, { $unwind: "$authorship_info" }, { $lookup: { from: "Inst", localField: "authorship_info.instID", foreignField: "instID", as: "inst_info" } }, { $unwind: "$inst_info" }, { $match: { "inst_info.name": "Indiana University" } }, { $group: { _id: "$title" } }, { $project: { title: "$_id" } } ])	icfp_1
db.Authorship.aggregate([ { $lookup: { from: "Inst", localField: "instID", foreignField: "instID", as: "instData" } }, { $match: { "instData.name": "Google" } }, { $lookup: { from: "Papers", localField: "paperID", foreignField: "paperID", as: "paperData" } }, { $project: { "paperData.title": 1 } }, { $unwind: "$paperData" }, { $group: { _id: "$paperData.title" } }, { $project: { title: "$_id" } } ])	icfp_1
db.Authorship.aggregate([ { $lookup: { from: "Inst", localField: "instID", foreignField: "instID", as: "inst" } }, { $unwind: "$inst" }, { $match: { "inst.name": "Google" } }, { $lookup: { from: "Papers", localField: "paperID", foreignField: "paperID", as: "paper" } }, { $unwind: "$paper" }, { $group: { _id: "$paper.paperID", title: { $first: "$paper.title" } } }, { $project: { title: 1 } } ])	icfp_1
db.Authorship.aggregate([ { $lookup: { from: "Papers", localField: "paperID", foreignField: "paperID", as: "paperInfo" } }, { $lookup: { from: "Inst", localField: "instID", foreignField: "instID", as: "instInfo" } }, { $match: { "instInfo.name": "University of Pennsylvania" } }, { $group: { _id: "$paperID" } }, { $count: "numPapers" } ])	icfp_1
db.Papers.aggregate([ { $lookup: { from: "Authorship", localField: "paperID", foreignField: "paperID", as: "authorship_info" } }, { $unwind: "$authorship_info" }, { $lookup: { from: "Inst", localField: "authorship_info.instID", foreignField: "instID", as: "institution_info" } }, { $match: { "institution_info.name": "University of Pennsylvania" } }, { $group: { _id: null, count: { $addToSet: "$paperID" } } }, { $project: { count: { $size: "$count" } } } ])	icfp_1
db.Authors.aggregate([ { $match: { fname: 'Stephanie', lname: 'Weirich' } }, { $lookup: { from: 'Authorship', localField: 'authID', foreignField: 'authID', as: 'authorship_info' } }, { $unwind: '$authorship_info' }, { $lookup: { from: 'Papers', localField: 'authorship_info.paperID', foreignField: 'paperID', as: 'paper_info' } }, { $unwind: '$paper_info' }, { $project: { title: '$paper_info.title' } } ])	icfp_1
db.Authorship.aggregate([ { $match: { authOrder: 1 } }, { $lookup: { from: "Inst", localField: "instID", foreignField: "instID", as: "institution" } }, { $unwind: "$institution" }, { $match: { "institution.country": "Japan" } }, { $lookup: { from: "Authors", localField: "authID", foreignField: "authID", as: "author" } }, { $unwind: "$author" }, { $match: { "author.lname": "Ohori" } }, { $lookup: { from: "Papers", localField: "paperID", foreignField: "paperID", as: "paper" } }, { $unwind: "$paper" }, { $project: { title: "$paper.title" } } ])	icfp_1
db.Authorship.aggregate([ { $match: { authOrder: 1 } }, { $lookup: { from: "Authors", localField: "authID", foreignField: "authID", as: "authorInfo" } }, { $unwind: "$authorInfo" }, { $match: { "authorInfo.lname": "Ohori" } }, { $lookup: { from: "Inst", localField: "instID", foreignField: "instID", as: "instInfo" } }, { $unwind: "$instInfo" }, { $match: { "instInfo.country": "Japan" } }, { $lookup: { from: "Papers", localField: "paperID", foreignField: "paperID", as: "paperInfo" } }, { $unwind: "$paperInfo" }, { $project: { title: "$paperInfo.title" } } ])	icfp_1
db.Inst.aggregate([ { $lookup: { from: "Authorship", localField: "instID", foreignField: "instID", as: "authorshipData" } }, { $unwind: "$authorshipData" }, { $lookup: { from: "Papers", localField: "authorshipData.paperID", foreignField: "paperID", as: "paperData" } }, { $unwind: "$paperData" }, { $group: { _id: "$country", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	icfp_1
db.Authorship.aggregate([ { $lookup: { from: "Inst", localField: "instID", foreignField: "instID", as: "inst_details" } }, { $unwind: "$inst_details" }, { $group: { _id: "$inst_details.country", paperCount: { $sum: 1 } } }, { $sort: { paperCount: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	icfp_1
db.Papers.find({ title: /ML/ }, { title: 1 })	icfp_1
db.Papers.find({ title: /ML/ }, { title: 1 })	icfp_1
db.Papers.find({ title: /Database/ }, { title: 1 })	icfp_1
db.Papers.find({ title: /Database/ }, { title: 1 })	icfp_1
db.Authors.aggregate([ { $lookup: { from: "Authorship", localField: "authID", foreignField: "authID", as: "authorship_info" } }, { $unwind: "$authorship_info" }, { $lookup: { from: "Papers", localField: "authorship_info.paperID", foreignField: "paperID", as: "paper_info" } }, { $unwind: "$paper_info" }, { $match: { "paper_info.title": { $regex: "Functional", $options: "i" } } }, { $project: { fname: 1 } } ])	icfp_1
db.Authors.aggregate([ { $lookup: { from: "Authorship", localField: "authID", foreignField: "authID", as: "authorship_info" } }, { $unwind: "$authorship_info" }, { $lookup: { from: "Papers", localField: "authorship_info.paperID", foreignField: "paperID", as: "paper_info" } }, { $unwind: "$paper_info" }, { $match: { "paper_info.title": /Monadic/ } }, { $project: { lname: 1 } } ])	icfp_1
db.Authors.aggregate([ { $lookup: { from: "Authorship", localField: "authID", foreignField: "authID", as: "authorship" } }, { $unwind: "$authorship" }, { $lookup: { from: "Papers", localField: "authorship.paperID", foreignField: "paperID", as: "papers" } }, { $unwind: "$papers" }, { $match: { "papers.title": { $regex: "Monadic", $options: "i" } } }, { $project: { lname: 1 } } ])	icfp_1
db.Authorship.aggregate([ { $group: { _id: "$paperID", count: { $sum: 1 } }}, { $sort: { count: -1 }}, { $limit: 1 }, { $lookup: { from: "Papers", localField: "_id", foreignField: "paperID", as: "paper" }}, { $unwind: "$paper" }, { $project: { title: "$paper.title" }} ])	icfp_1
db.Authors.findOne({lname: 'Ueno'}, {fname: 1})	icfp_1
db.Authors.find({lname: 'Ueno'}, {fname: 1})	icfp_1
db.Authors.find({}).sort({fname: 1}).projection({fname: 1})	icfp_1
db.Authors.find({}, { lname: 1 }).sort({ lname: 1 })	icfp_1
db.Authors.find({}, { fname: 1, lname: 1 }).sort({ lname: 1 })	icfp_1
db.Authors.find({}, { fname: 1, lname: 1}).sort({lname: 1})	icfp_1
db.actor.aggregate([ { $group: { _id: "$last_name" } }, { $count: "distinct_last_names" } ])	sakila_1
db.actor.aggregate([ { $group: { _id: "$first_name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { first_name: "$_id" } } ])	sakila_1
db.actor.aggregate([ { $group: { _id: "$first_name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { first_name: "$_id" } } ])	sakila_1
db.actor.aggregate([ { $group: { _id: { first_name: "$first_name", last_name: "$last_name" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { first_name: "$_id.first_name", last_name: "$_id.last_name" } } ])	sakila_1
db.actor.aggregate([ { $group: { _id: { first_name: "$first_name", last_name: "$last_name" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { first_name: "$_id.first_name", last_name: "$_id.last_name" } } ])	sakila_1
db.address.find({address: '1031 Daugavpils Parkway'}, { phone: 1, postal_code: 1})	sakila_1
db.address.find({address: '1031 Daugavpils Parkway'}, {phone: 1, postal_code: 1})	sakila_1
db.city.aggregate([ { $lookup: { from: "country", localField: "country_id", foreignField: "country_id", as: "country_info" } }, { $match: { "country_info.country": "Australia" } }, { $count: "count" } ])	sakila_1
db.city.aggregate([ { $lookup: { from: "country", localField: "country_id", foreignField: "country_id", as: "country_info" } }, { $match: { "country_info.country": "Australia" } }, { $count: "count" } ])	sakila_1
db.film.find({}, {title: 1, rental_rate: 1}).sort({rental_rate: -1}).limit(1)	sakila_1
db.film.find({}, {title: 1, rental_rate: 1}).sort({rental_rate: -1}).limit(1)	sakila_1
db.film_actor.aggregate([ { $group: { _id: "$film_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "film", localField: "_id", foreignField: "film_id", as: "film_details" } }, { $unwind: "$film_details" }, { $project: { film_id: "$_id", title: "$film_details.title", description: "$film_details.description" } } ])	sakila_1
db.film_actor.aggregate([ { $group: { _id: "$film_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "film", localField: "_id", foreignField: "film_id", as: "film_details" } }, { $unwind: "$film_details" }, { $project: { title: "$film_details.title", film_id: "$film_details.film_id", description: "$film_details.description" } } ])	sakila_1
db.film_actor.aggregate([ { $lookup: { from: "actor", localField: "actor_id", foreignField: "actor_id", as: "actor_info" } }, { $unwind: "$actor_info" }, { $group: { _id: "$actor_info.actor_id", first_name: { $first: "$actor_info.first_name" }, last_name: { $first: "$actor_info.last_name" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { first_name: 1, last_name: 1, actor_id: "$_id" } } ])	sakila_1
db.film_actor.aggregate([ { $lookup: { from: "actor", localField: "actor_id", foreignField: "actor_id", as: "actor_info" } }, { $unwind: "$actor_info" }, { $group: { _id: "$actor_info.actor_id", first_name: { $first: "$actor_info.first_name" }, last_name: { $first: "$actor_info.last_name" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { first_name: 1, last_name: 1, actor_id: "$_id" } } ])	sakila_1
db.inventory.aggregate([ { $group: { _id: "$store_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { store_id: "$_id" } }])	sakila_1
db.inventory.aggregate([ { $group: { _id: "$store_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { store_id: "$_id" } } ])	sakila_1
db.customer.aggregate([ { $lookup: { from: "payment", localField: "customer_id", foreignField: "customer_id", as: "payments" } }, { $match: { "payments.0": { $exists: true } } }, { $project: { first_name: 1, last_name: 1, customer_id: 1 } }, { $sort: { totalAmount: 1 } }, { $limit: 1 } ])	sakila_1
db.customer.aggregate([ { $lookup: { from: "payment", localField: "customer_id", foreignField: "customer_id", as: "payments" } }, { $project: { first_name: 1, last_name: 1, customer_id: 1} }, { $sort: { totalAmount: 1 } }, { $limit: 1 } ])	sakila_1
db.category.aggregate([ { $lookup: { from: "film_category", localField: "category_id", foreignField: "category_id", as: "film_category_join" } }, { $unwind: "$film_category_join" }, { $lookup: { from: "film", localField: "film_category_join.film_id", foreignField: "film_id", as: "film_join" } }, { $unwind: "$film_join" }, { $match: { "film_join.title": "HUNGER ROOF" } }, { $project: { name: 1 } } ])	sakila_1
db.film.aggregate([ { $match: { title: "HUNGER ROOF" } }, { $lookup: { from: "film_category", localField: "film_id", foreignField: "film_id", as: "fc" } }, { $unwind: "$fc" }, { $lookup: { from: "category", localField: "fc.category_id", foreignField: "category_id", as: "c" } }, { $unwind: "$c" }, { $project: { name: "$c.name" } } ])	sakila_1
db.film_category.aggregate([ { $lookup: { from: "category", localField: "category_id", foreignField: "category_id", as: "category_info" } }, { $unwind: "$category_info" }, { $group: { _id: "$category_id", name: { $first: "$category_info.name" }, count: { $sum: 1 } } }, { $project: { name: 1, category_id: "$_id", count: 1 } } ])	sakila_1
db.film_category.aggregate([ { $lookup: { from: "category", localField: "category_id", foreignField: "category_id", as: "category_info" } }, { $unwind: "$category_info" }, { $group: { _id: "$category_id", name: { $first: "$category_info.name" }, count: { $sum: 1 } } }, { $project: { name: 1, category_id: "$_id", count: 1 } } ])	sakila_1
db.film.aggregate([ { $group: { _id: "$language_id" } }, { $count: "unique_languages" } ])	sakila_1
db.film.aggregate([ { $group: { _id: "$rating" } }, { $count: "distinct_ratings" } ])	sakila_1
db.customer.aggregate([ { $match: { first_name: "LINDA" } }, { $lookup: { from: "address", localField: "address_id", foreignField: "address_id", as: "address_info" } }, { $unwind: "$address_info" }, { $project: { address: "$address_info.address", email: 1 } } ])	sakila_1
db.customer.aggregate([ { $lookup: { from: "rental", localField: "customer_id", foreignField: "customer_id", as: "rental_info" } }, { $unwind: "$rental_info" }, { $sort: { "rental_info.rental_date": 1 } }, { $limit: 1 }, { $project: { first_name: 1, last_name: 1 } } ])	sakila_1
db.customer.aggregate([ { $lookup: { from: "rental", localField: "customer_id", foreignField: "customer_id", as: "rental_info" } }, { $unwind: "$rental_info" }, { $sort: { "rental_info.rental_date": 1 } }, { $limit: 1 }, { $project: { first_name: 1, last_name: 1 } } ])	sakila_1
db.customer.aggregate([ { $group: { _id: "$store_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { store_id: "$_id" } } ])	sakila_1
db.customer.aggregate([ { $group: { _id: "$store_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { store_id: "$_id" } } ])	sakila_1
db.payment.find({}, {amount: 1}).sort({amount: -1}).limit(1)	sakila_1
db.payment.find({}, {amount: 1}).sort({amount: -1}).limit(1)	sakila_1
db.bank.aggregate([ { $group: { _id: null, totalCustomers: { $sum: "$no_of_customers" } } }, { $project: { totalCustomers: 1 } } ])	loan_1
db.bank.aggregate([ { $group: { _id: null, totalCustomers: { $sum: "$no_of_customers" } } } , { $project: { totalCustomers: 1 } }])	loan_1
db.bank.aggregate([ { $match: { city: "New York City" } }, { $group: { _id: null, totalCustomers: { $sum: "$no_of_customers" } } }, { $project: { totalCustomers: 1 } } ])	loan_1
db.bank.aggregate([ { $match: { city: "New York City" } }, { $group: { _id: null, totalCustomers: { $sum: "$no_of_customers" } } }, { $project: { totalCustomers: 1 } } ])	loan_1
db.bank.aggregate([ { $match: { state: "Utah" } }, { $group: { _id: null, avgNoOfCustomers: { $avg: "$no_of_customers" } } }, { $project: { avgNoOfCustomers: 1} } ])	loan_1
db.bank.aggregate([ { $match: { state: 'Utah' } }, { $group: { _id: null, avgNoOfCustomers: { $avg: "$no_of_customers" } } }, { $project: { avgNoOfCustomers: 1 } } ])	loan_1
db.bank.aggregate([ { $group: { _id: null, averageCustomers: { $avg: "$no_of_customers" } } } , { $project: { averageCustomers: 1 } }])	loan_1
db.bank.aggregate([ { $group: { _id: null, averageCustomers: { $avg: "$no_of_customers" } } }, { $project: { averageCustomers: 1 } } ])	loan_1
db.bank.find({bname: 'morningside'}, { city: 1, state: 1})	loan_1
db.bank.find({bname: 'morningside'}, { city: 1, state: 1})	loan_1
db.bank.find({state: 'New York'}, {bname: 1})	loan_1
db.bank.find({state: 'New York'}, {bname: 1})	loan_1
db.customer.find({}, {cust_name: 1}).sort({acc_bal: 1})	loan_1
db.customer.find({}, {cust_name: 1}).sort({acc_bal: 1})	loan_1
db.customer.aggregate([ { $lookup: { from: "loan", localField: "cust_ID", foreignField: "cust_ID", as: "loan_data" } }, { $match: { "loan_data.0": { $exists: true } } }, { $project: { cust_name: 1 } }, { $sort: { totalLoanAmount: 1 } } ])	loan_1
db.customer.aggregate([ { $lookup: { from: "loan", localField: "cust_ID", foreignField: "cust_ID", as: "loan_data" } }, { $unwind: "$loan_data" }, { $group: { _id: "$cust_name", totalAmount: { $sum: "$loan_data.amount" } } }, { $project: { cust_name: "$_id" } } , { $sort: { totalLoanAmount: 1 } }])	loan_1
db.customer.find( { no_of_loans: 0 }, { state: 1, acc_type: 1, credit_score: 1 } )	loan_1
db.customer.find( { no_of_loans: 0 }, { state: 1, acc_type: 1, credit_score: 1 } )	loan_1
db.bank.aggregate([ { $group: { _id: "$city" } }, { $count: "distinct_cities_count" } ])	loan_1
db.bank.aggregate([ { $group: { _id: "$city" } }, { $count: "distinct_cities" } ])	loan_1
db.customer.find( {cust_name: {$regex: /a/}}, {cust_name: 1, acc_bal: 1} )	loan_1
db.customer.find( {cust_name: {$regex: /a/}}, {cust_name: 1, acc_bal: 1} )	loan_1
db.customer.aggregate([ { $match: { state: { $in: ["Utah", "Texas"] } } }, { $group: { _id: null, totalAccountBalance: { $sum: "$acc_bal" } } }, { $project: { totalAccountBalance: 1 } } ])	loan_1
db.customer.find( { acc_type: { $ne: 'saving' } }, { cust_name: 1 } )	loan_1
db.customer.find( { acc_type: { $ne: 'saving' } }, { cust_name: 1 } )	loan_1
db.customer.aggregate([ { $lookup: { from: "loan", localField: "cust_ID", foreignField: "cust_ID", as: "loan_info" } }, { $match: { "loan_info.loan_type": { $ne: "Mortgages" } } }, { $project: { cust_name: 1 } } ])	loan_1
db.customer.aggregate([ { $lookup: { from: "loan", localField: "cust_ID", foreignField: "cust_ID", as: "loan_info" } }, { $match: { "loan_info.loan_type": { $ne: "Mortgages" } } }, { $project: { cust_name: 1 } } ])	loan_1
db.customer.aggregate([ { $lookup: { from: "loan", localField: "cust_ID", foreignField: "cust_ID", as: "loans" } }, { $match: { "loans.loan_type": { $in: ["Mortgages", "Auto"] } } }, { $unwind: "$loans" }, { $match: { "loans.loan_type": { $in: ["Mortgages", "Auto"] } } }, { $group: { _id: "$cust_name", uniqueLoanTypes: { $addToSet: "$loans.loan_type" } } }, { $match: { uniqueLoanTypes: { $size: 2 } } }, { $project: { cust_name: "$_id" } } ])	loan_1
db.customer.aggregate([ { $group: { _id: null, averageCreditScore: { $avg: "$credit_score" } } }, { $lookup: { from: "customer", let: { avgCreditScore: "$averageCreditScore" }, pipeline: [ { $match: { $expr: { $lt: [ "$credit_score", "$$avgCreditScore" ] } } }, { $project: { cust_name: 1 } } ], as: "below_average_customers" } }, { $unwind: "$below_average_customers" }, { $replaceRoot: { newRoot: "$below_average_customers" } } ])	loan_1
db.customer.aggregate([ { $group: { _id: null, averageCreditScore: { $avg: "$credit_score" } } }, { $lookup: { from: "customer", let: { avgCreditScore: "$averageCreditScore" }, pipeline: [ { $match: { $expr: { $lt: [ "$credit_score", "$$avgCreditScore" ] } } }, { $project: { cust_name: 1 } } ], as: "customers" } }, { $unwind: "$customers" }, { $replaceRoot: { newRoot: "$customers" } } ])	loan_1
db.bank.find({}, {bname: 1}).sort({no_of_customers: -1}).limit(1)	loan_1
db.bank.find({}, { bname: 1}).sort({no_of_customers: -1}).limit(1)	loan_1
db.customer.find({}, {cust_name: 1}).sort({credit_score: 1}).limit(1)	loan_1
db.customer.find({}, {cust_name: 1}).sort({credit_score: 1}).limit(1)	loan_1
db.customer.find({}, {cust_name: 1, acc_type: 1, acc_bal: 1}).sort({credit_score: -1}).limit(1)	loan_1
db.customer.find({}, {cust_name: 1, acc_type: 1, acc_bal: 1}).sort({credit_score: -1}).limit(1)	loan_1
db.customer.aggregate([ { $lookup: { from: "loan", localField: "cust_ID", foreignField: "cust_ID", as: "loans" } }, { $project: { cust_name: 1 } }, { $sort: { totalLoanAmount: -1 } }, { $limit: 1 } ])	loan_1
db.customer.aggregate([ { $lookup: { from: "loan", localField: "cust_ID", foreignField: "cust_ID", as: "loan_data" } }, { $unwind: "$loan_data" }, { $group: { _id: "$cust_name", totalLoanAmount: { $sum: "$loan_data.amount" } } }, { $sort: { totalLoanAmount: -1 } }, { $limit: 1 }, { $project: { cust_name: "$_id" } } ])	loan_1
db.bank.aggregate([ { $group: { _id: "$state", totalCustomers: { $sum: "$no_of_customers" } } }, { $sort: { totalCustomers: -1 } }, { $limit: 1 }, { $project: { state: "$_id" } } ])	loan_1
db.bank.aggregate([ { $group: { _id: "$state", totalCustomers: { $sum: "$no_of_customers" } } }, { $sort: { totalCustomers: -1 } }, { $limit: 1 }, { $project: { state: "$_id" } } ])	loan_1
db.customer.aggregate([ { $match: { credit_score: { $lt: 50 } } }, { $group: { _id: "$acc_type", avg_acc_bal: { $avg: "$acc_bal" } } } ])	loan_1
db.customer.aggregate([ { $match: { credit_score: { $lt: 50 } } }, { $group: { _id: "$acc_type", averageBalance: { $avg: "$acc_bal" } } } ])	loan_1
db.customer.aggregate([ { $match: { credit_score: { $gt: 100 } } }, { $group: { _id: "$state", total_acc_bal: { $sum: "$acc_bal" } } } ])	loan_1
db.customer.aggregate([ { $match: { credit_score: { $gt: 100 } } }, { $group: { _id: "$state", totalAccountBalance: { $sum: "$acc_bal" } } } ])	loan_1
db.customer.aggregate([ { $lookup: { from: "loan", localField: "cust_ID", foreignField: "cust_ID", as: "loans" } }, { $match: { "loans.1": { $exists: true } } }, { $project: { cust_name: 1 } } ])	loan_1
db.customer.aggregate([ { $lookup: { from: "loan", localField: "cust_ID", foreignField: "cust_ID", as: "loans" } }, { $match: { "loans.1": { $exists: true } } }, { $project: { cust_name: 1 } } ])	loan_1
db.customer.aggregate([ { $lookup: { from: "loan", localField: "cust_ID", foreignField: "cust_ID", as: "loan_info" } }, { $match: { "loan_info.cust_ID": { $exists: true } } }, { $project: { cust_name: 1, credit_score: 1 } } ])	loan_1
db.customer.aggregate([ { $lookup: { from: "loan", localField: "cust_ID", foreignField: "cust_ID", as: "loan_info" } }, { $match: { "loan_info.cust_ID": { $exists: true } } }, { $project: { cust_name: 1, credit_score: 1 } } ])	loan_1
db.customer.aggregate([ { $lookup: { from: "loan", localField: "cust_ID", foreignField: "cust_ID", as: "loan_info" } }, { $unwind: "$loan_info" }, { $match: { "loan_info.amount": { $gt: 3000 } } }, { $project: { cust_name: 1 } } ])	loan_1
db.customer.aggregate([ { $lookup: { from: "loan", localField: "cust_ID", foreignField: "cust_ID", as: "loan_info" } }, { $unwind: "$loan_info" }, { $match: { "loan_info.amount": { $gt: 3000 } } }, { $project: { cust_name: 1 } } ])	loan_1
db.customer.aggregate([ { $lookup: { from: "loan", localField: "cust_ID", foreignField: "cust_ID", as: "loan_info" } }, { $match: { "loan_info.0": { $exists: true } } }, { $group: { _id: null, avgCreditScore: { $avg: "$credit_score" } } } , { $project: { avgCreditScore: 1 } }])	loan_1
db.customer.aggregate([ { $lookup: { from: "loan", localField: "cust_ID", foreignField: "cust_ID", as: "loan_info" } }, { $match: { "loan_info.0": { $exists: true } } }, { $group: { _id: null, avgCreditScore: { $avg: "$credit_score" } } } , { $project: { avgCreditScore: 1 } }])	loan_1
db.customer.aggregate([ { $lookup: { from: "loan", localField: "cust_ID", foreignField: "cust_ID", as: "loan_info" } }, { $match: { "loan_info": { $eq: [] } } }, { $group: { _id: null, avgCreditScore: { $avg: "$credit_score" } } } , { $project: { avgCreditScore: 1 } }])	loan_1
db.customer.aggregate([ { $lookup: { from: "loan", localField: "cust_ID", foreignField: "cust_ID", as: "loan_data" } }, { $match: { "loan_data": { $size: 0 } } }, { $group: { _id: null, avgCreditScore: { $avg: "$credit_score" } } }, { $project: { avgCreditScore: 1 } } ])	loan_1
db.Students.find({}, {cell_mobile_number: 1, email_address: 1})	behavior_monitoring
db.Students.findOne({first_name: 'Emma', last_name: 'Rohan'}, {email_address: 1})	behavior_monitoring
db.Teachers.findOne({last_name: 'Medhurst'}, {gender: 1})	behavior_monitoring
db.Ref_Incident_Type.findOne({incident_type_code: 'VIOLENCE'}, {incident_type_description: 1})	behavior_monitoring
db.Student_Addresses.aggregate([ { $group: { _id: null, maxMonthlyRental: { $max: "$monthly_rental" }, minMonthlyRental: { $min: "$monthly_rental" } } }, { $project: { maxMonthlyRental: 1, minMonthlyRental: 1 } } ])	behavior_monitoring
db.Teachers.find({email_address: {$regex: /man/}}, {first_name: 1})	behavior_monitoring
db.Addresses.find({}, {city: 1}).sort({city: 1})	behavior_monitoring
db.Teachers.find({}, {first_name: 1, last_name: 1}).sort({last_name: 1})	behavior_monitoring
db.Assessment_Notes.aggregate([ { $group: { _id: "$student_id", count: { $sum: 1 } }}, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Students", localField: "_id", foreignField: "student_id", as: "student_info" }}, { $unwind: "$student_info" }, { $project: { student_id: "$_id", first_name: "$student_info.first_name" } } ])	behavior_monitoring
db.Behavior_Incident.aggregate([ { $group: { _id: "$student_id", incidentCount: { $sum: 1 } } }, { $sort: { incidentCount: -1 } }, { $limit: 1 }, { $lookup: { from: "Students", localField: "_id", foreignField: "student_id", as: "student_info" }}, { $unwind: "$student_info" }, { $project: { _id: "$student_info.student_id", last_name: "$student_info.last_name" } } ])	behavior_monitoring
db.Detention.aggregate([ { $match: { detention_type_code: 'AFTER' } }, { $group: { _id: "$teacher_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Teachers", localField: "_id", foreignField: "teacher_id", as: "teacher_info" }}, { $unwind: "$teacher_info" }, { $project: { teacher_id: "$_id", last_name: "$teacher_info.last_name" } } ])	behavior_monitoring
db.Student_Addresses.aggregate([ { $lookup: { from: "Students", localField: "student_id", foreignField: "student_id", as: "student_info" } }, { $unwind: "$student_info" }, { $group: { _id: "$student_id", first_name: { $first: "$student_info.first_name" }, avg_monthly_rental: { $avg: "$monthly_rental" } } }, { $sort: { avg_monthly_rental: -1 } }, { $limit: 1 }, { $project: { student_id: "$_id", first_name: 1 } } ])	behavior_monitoring
db.Addresses.aggregate([ { $lookup: { from: "Student_Addresses", localField: "address_id", foreignField: "address_id", as: "student_addresses" } }, { $unwind: "$student_addresses" }, { $group: { _id: "$address_id", city: { $first: "$city" }, avgMonthlyRental: { $avg: "$student_addresses.monthly_rental" } } }, { $sort: { avgMonthlyRental: -1 } }, { $limit: 1 }, { $project: { address_id: "$_id", city: 1 } } ])	behavior_monitoring
db.Detention.aggregate([ { $lookup: { from: "Ref_Detention_Type", localField: "detention_type_code", foreignField: "detention_type_code", as: "detention_type" } }, { $unwind: "$detention_type" }, { $group: { _id: "$detention_type_code", count: { $sum: 1 }, detention_type_description: { $first: "$detention_type.detention_type_description" } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { detention_type_code: "$_id", detention_type_description: 1 } } ])	behavior_monitoring
db.Addresses.aggregate([ { $lookup: { from: "Student_Addresses", localField: "address_id", foreignField: "address_id", as: "student_addresses" } }, { $unwind: "$student_addresses" }, { $sort: { "student_addresses.monthly_rental": -1 } }, { $limit: 1 }, { $project: { address_id: "$address_id", zip_postcode: "$zip_postcode" } } ])	behavior_monitoring
db.Students.aggregate([ { $lookup: { from: "Student_Addresses", localField: "student_id", foreignField: "student_id", as: "address_info" } }, { $unwind: "$address_info" }, { $sort: {"address_info.monthly_rental": 1} }, { $limit: 1 }, { $project: { cell_mobile_number: 1 } } ])	behavior_monitoring
db.Addresses.aggregate([ { $match: { state_province_county: "Texas" } }, { $lookup: { from: "Student_Addresses", localField: "address_id", foreignField: "address_id", as: "student_addresses" } }, { $unwind: "$student_addresses" }, { $project: { monthly_rental: "$student_addresses.monthly_rental" } } ])	behavior_monitoring
db.Addresses.aggregate([ { $match: { state_province_county: "Wisconsin" } }, { $lookup: { from: "Students", localField: "address_id", foreignField: "address_id", as: "student_info" } }, { $unwind: "$student_info" }, { $project: { first_name: "$student_info.first_name", last_name: "$student_info.last_name" } } ])	behavior_monitoring
db.Teachers.aggregate([ { $lookup: { from: "Addresses", localField: "address_id", foreignField: "address_id", as: "address_info" } }, { $match: { "address_info.zip_postcode": "918" } }, { $project: { email_address: 1 } } ])	behavior_monitoring
db.Students.aggregate([ { $lookup: { from: "Behavior_Incident", localField: "student_id", foreignField: "student_id", as: "incidents" } }, { $match: { incidents: { $size: 0 } } }, { $count: "num_students_not_involved_in_incidents" } ])	behavior_monitoring
db.Addresses.aggregate([ { $lookup: { from: "Students", localField: "address_id", foreignField: "address_id", as: "students" } }, { $lookup: { from: "Teachers", localField: "address_id", foreignField: "address_id", as: "teachers" } }, { $match: { "students.0": { $exists: true }, "teachers.0": { $exists: true } } }, { $project: { line_1: 1 } } ])	behavior_monitoring
db.Assets.aggregate([ { $group: { _id: "$maintenance_contract_id", count: { $sum: 1 } } }, { $project: { maintenance_contract_id: "$_id", count: "$count" } } ])	assets_maintenance
db.Third_Party_Companies.aggregate([ { $lookup: { from: "Maintenance_Engineers", localField: "company_id", foreignField: "company_id", as: "engineers" } }, { $lookup: { from: "Maintenance_Contracts", localField: "company_id", foreignField: "maintenance_contract_company_id", as: "contracts" } }, { $project: { "company_id": 1, "company_name": 1, "engineerCount": { $size: "$engineers" }, "contractCount": { $size: "$contracts" } } }, { $match: { $or:[ { engineerCount: { $gte: 2 } }, { contractCount: { $gte: 2 } } ] } }, { $project: { "company_id": 1, "company_name": 1 } } ])	assets_maintenance
db.Staff.aggregate([ { $lookup: { from: "Fault_Log", localField: "staff_id", foreignField: "recorded_by_staff_id", as: "fault_logs" } }, { $lookup: { from: "Engineer_Visits", localField: "staff_id", foreignField: "contact_staff_id", as: "engineer_visits" } }, { $match: { fault_logs: { $ne: [] }, engineer_visits: { $eq: [] } } }, { $project: { staff_id: 1, staff_name: 1 } } ])	assets_maintenance
db.Parts.aggregate([ { $lookup: { from: "Part_Faults", localField: "part_id", foreignField: "part_id", as: "part_faults" } }, { $match: { "part_faults.0": { $exists: true } } }, { $project: { part_name: 1, part_id: 1 } }, { $match: { fault_count: { $gt: 2 } } } ])	assets_maintenance
db.Part_Faults.aggregate([ { $lookup: { from: "Skills_Required_To_Fix", localField: "part_fault_id", foreignField: "part_fault_id", as: "skills_required" } }, { $unwind: "$skills_required" }, { $lookup: { from: "Skills", localField: "skills_required.skill_id", foreignField: "skill_id", as: "skill_details" } }, { $unwind: "$skill_details" }, { $project: { fault_short_name: 1, skill_description: "$skill_details.skill_description" } } ])	assets_maintenance
db.Parts.aggregate([ { $lookup: { from: "Asset_Parts", localField: "part_id", foreignField: "part_id", as: "asset_parts" } }, { $project: { part_name: 1, asset_count: { $size: "$asset_parts" } } } ])	assets_maintenance
db.Fault_Log.aggregate([ { $lookup: { from: "Fault_Log_Parts", localField: "fault_log_entry_id", foreignField: "fault_log_entry_id", as: "faultParts" } }, { $unwind: "$faultParts" }, { $project: { fault_description: 1, fault_status: "$faultParts.fault_status" } } ])	assets_maintenance
db.Fault_Log.aggregate([ { $lookup: { from: "Engineer_Visits", localField: "fault_log_entry_id", foreignField: "fault_log_entry_id", as: "visits" } }, { $project: { fault_log_entry_id: 1, visit_count: { $size: "$visits" } } }, { $sort: { visit_count: -1 } }, { $limit: 1 } ])	assets_maintenance
db.Maintenance_Engineers.aggregate([ { $lookup: { from: "Engineer_Visits", localField: "engineer_id", foreignField: "engineer_id", as: "visits" } }, { $match: { "visits": { $size: 0 } } }, { $project: { first_name: 1, last_name: 1 } } ])	assets_maintenance
db.Assets.find({}, {asset_id: 1, asset_details: 1, asset_make: 1, asset_model: 1})	assets_maintenance
db.Parts.aggregate([ { $lookup: { from: "Part_Faults", localField: "part_id", foreignField: "part_id", as: "part_faults" } }, { $unwind: "$part_faults" }, { $lookup: { from: "Skills_Required_To_Fix", localField: "part_faults.part_fault_id", foreignField: "part_fault_id", as: "part_faults.skills_required" } }, { $unwind: "$part_faults.skills_required" }, { $group: { _id: "$part_id", part_name: { $first: "$part_name" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { part_id: "$_id", part_name: 1 } } ])	assets_maintenance
db.Parts.aggregate([ { $lookup: { from: "Part_Faults", localField: "part_id", foreignField: "part_id", as: "part_faults" } }, { $project: { part_name: 1} }, { $sort: { fault_count: 1 } }, { $limit: 1 } ])	assets_maintenance
db.Skills.aggregate([ { $lookup: { from: "Skills_Required_To_Fix", localField: "skill_id", foreignField: "skill_id", as: "skill_count" } }, { $project: { skill_id: 1, skill_description: 1 } }, { $sort: { count: -1 } }, { $limit: 1 } ])	assets_maintenance
db.Assets.find({}, {asset_make: 1, asset_model: 1, asset_details: 1}).sort({asset_disposed_date: 1})	assets_maintenance
db.Parts.find({}, { part_id: 1, chargeable_amount: 1}).sort({chargeable_amount: 1}).limit(1)	assets_maintenance
db.Third_Party_Companies.aggregate([ { $lookup: { from: "Maintenance_Contracts", localField: "company_id", foreignField: "maintenance_contract_company_id", as: "contracts" } }, { $unwind: "$contracts" }, { $sort: { "contracts.contract_start_date": 1 } }, { $limit: 1 }, { $project: { company_name: 1 } } ])	assets_maintenance
db.Staff.aggregate([ { $group: { _id: "$gender", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { gender: "$_id" } } ])	assets_maintenance
db.Assets.find({ asset_id: { $nin: db.Fault_Log.distinct("asset_id") } }, { asset_model: 1 })	assets_maintenance
db.station.find({}, {local_authority: 1, services: 1})	station_weather
db.train.find({}, { train_number: 1, name: 1}).sort({time: 1})	station_weather
db.train.find( { destination: 'Chennai' }, { time: 1, train_number: 1 } ).sort({ time: 1 })	station_weather
db.train.find( { origin: "Chennai", destination: "Guruvayur" }, { train_number: 1, time: 1 } )	station_weather
db.train.aggregate([ { $group: { _id: "$origin", count: { $sum: 1 } } } ])	station_weather
db.train.aggregate([ { $lookup: { from: "route", localField: "id", foreignField: "train_id", as: "train_routes" } }, { $project: { name: 1 } }, { $sort: { routeCount: -1 } }, { $limit: 1 } ])	station_weather
db.weekly_weather.aggregate([ { $group: { _id: "$day_of_week", averageHighTemperature: { $avg: "$high_temperature" } } } ])	station_weather
db.weekly_weather.aggregate([ { $lookup: { from: "station", localField: "station_id", foreignField: "id", as: "station_info" } }, { $match: { "station_info.network_name": "Amersham" } }, { $group: { _id: null, maxLowTemperature: { $max: "$low_temperature" }, avgPrecipitation: { $avg: "$precipitation" } } }, { $project: { maxLowTemperature: 1, avgPrecipitation: 1 } } ])	station_weather
db.station.aggregate([ { $match: { local_authority: "Chiltern" } }, { $lookup: { from: "route", localField: "id", foreignField: "station_id", as: "routes" } }, { $unwind: "$routes" }, { $lookup: { from: "train", localField: "routes.train_id", foreignField: "id", as: "trains" } }, { $unwind: "$trains" }, { $project: { name: "$trains.name", time: "$trains.time" } } ])	station_weather
db.station.aggregate([ { $lookup: { from: "weekly_weather", localField: "id", foreignField: "station_id", as: "weather_data" } }, { $unwind: "$weather_data" }, { $group: { _id: "$id", averageHighTemp: { $avg: "$weather_data.high_temperature" }, local_authority: { $first: "$local_authority" } } }, { $sort: { averageHighTemp: -1 } }, { $limit: 1 }, { $project: { _id: "$_id", local_authority: "$local_authority" } } ])	station_weather
db.weekly_weather.aggregate([ { $group: { _id: "$station_id", max_precipitation: { $max: "$precipitation" } } }, { $match: { max_precipitation: { $gt: 50 } } }, { $lookup: { from: "station", localField: "_id", foreignField: "id", as: "station_info" } }, { $unwind: "$station_info" }, { $project: { _id: "$station_info.id", local_authority: "$station_info.local_authority" } } ])	station_weather
db.weekly_weather.aggregate([ { $group: { "_id": null, "minLowTemperature": { "$min": "$low_temperature" }, "maxWindSpeed": { "$max": "$wind_speed_mph" } } }, { $project: { "_id": 0, "minLowTemperature": 1, "maxWindSpeed": 1 } } ])	station_weather
db.train.aggregate([ { $group: { _id: "$origin", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { origin: "$_id" } } ])	station_weather
db.CLASS.aggregate([ { $match: { CRS_CODE: 'ACCT-211' } }, { $group: { _id: "$PROF_NUM" } }, { $count: "distinct_professors" } ])	college_1
db.CLASS.aggregate([ { $match: { CRS_CODE: "ACCT-211" } }, { $group: { _id: "$PROF_NUM" } }, { $count: "distinct_professors" } ])	college_1
db.PROFESSOR.aggregate([ { $lookup: { from: "DEPARTMENT", localField: "DEPT_CODE", foreignField: "DEPT_CODE", as: "department" } }, { $unwind: "$department" }, { $lookup: { from: "EMPLOYEE", localField: "EMP_NUM", foreignField: "EMP_NUM", as: "employee" } }, { $unwind: "$employee" }, { $match: { "department.DEPT_NAME": "Biology" } }, { $project: { EMP_FNAME: "$employee.EMP_FNAME", EMP_LNAME: "$employee.EMP_LNAME" } } ])	college_1
db.EMPLOYEE.aggregate([ { $lookup: { from: "CLASS", localField: "EMP_NUM", foreignField: "PROF_NUM", as: "class_info" } }, { $match: { "class_info.CRS_CODE": "ACCT-211" } }, { $project: { EMP_FNAME: 1, EMP_DOB: 1 } }, { $group: { _id: { EMP_FNAME: "$EMP_FNAME", EMP_DOB: "$EMP_DOB" } } }, { $project: { EMP_FNAME: "$_id.EMP_FNAME", EMP_DOB: "$_id.EMP_DOB" } } ])	college_1
db.EMPLOYEE.aggregate([ { $match: { EMP_LNAME: 'Graztevski' } }, { $lookup: { from: 'CLASS', localField: 'EMP_NUM', foreignField: 'PROF_NUM', as: 'classes' } }, { $unwind: '$classes' }, { $count: 'numberOfClasses' } ])	college_1
db.EMPLOYEE.aggregate([ { $match: { EMP_LNAME: 'Graztevski' } }, { $lookup: { from: "CLASS", localField: "EMP_NUM", foreignField: "PROF_NUM", as: "classes_taught" }}, { $unwind: "$classes_taught" }, { $count: "num_classes" } ])	college_1
db.DEPARTMENT.findOne({ DEPT_NAME: 'Accounting' }, { SCHOOL_CODE: 1 })	college_1
db.COURSE.find({ CRS_CODE: 'CIS-220' }, { CRS_CREDIT: 1, CRS_DESCRIPTION: 1 })	college_1
db.DEPARTMENT.findOne({ DEPT_NAME: 'History' }, { DEPT_ADDRESS: 1 })	college_1
db.DEPARTMENT.find({ DEPT_NAME: 'History' }, { DEPT_ADDRESS: 1 })	college_1
db.DEPARTMENT.aggregate([ { $group: { _id: "$SCHOOL_CODE", distinctLocations: { $addToSet: "$DEPT_ADDRESS" } } }, { $project: { school_code: "$_id", locationsCount: { $size: "$distinctLocations" } } } ])	college_1
db.DEPARTMENT.aggregate([ { $group: { _id: "$SCHOOL_CODE", count: { $sum: 1 } } }, { $project: { school_code: "$_id", count: "$count" } } ])	college_1
db.COURSE.find({ CRS_CODE: 'QM-261' }, { CRS_DESCRIPTION: 1, CRS_CREDIT: 1 })	college_1
db.COURSE.find({ CRS_CODE: 'QM-261' }, { CRS_DESCRIPTION: 1, CRS_CREDIT: 1 })	college_1
db.DEPARTMENT.aggregate([ { $group: { _id: "$SCHOOL_CODE", numberOfDepartments: { $sum: 1 } } } ])	college_1
db.DEPARTMENT.aggregate([ { $group: { _id: "$SCHOOL_CODE", numberOfDepartments: { $sum: 1 } }} ])	college_1
db.CLASS.aggregate([ { $group: { _id: "$CRS_CODE", count: { $sum: 1 } } } ])	college_1
db.CLASS.aggregate([ { $group: { _id: "$CRS_CODE", count: { $sum: 1 } } } ])	college_1
db.COURSE.aggregate([ { $group: { _id: "$DEPT_CODE", TotalCredits: { $sum: "$CRS_CREDIT" } } } ])	college_1
db.COURSE.aggregate([ { $group: { _id: "$DEPT_CODE", TotalCredits: { $sum: "$CRS_CREDIT" } } }, { $project: { DEPT_CODE: "$_id", TotalCredits: 1 } } ])	college_1
db.CLASS.aggregate([ { $group: { _id: "$CLASS_ROOM", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { CLASS_ROOM: "$_id", number_of_classes: "$count" } } ])	college_1
db.CLASS.aggregate([ { $group: { _id: "$CLASS_ROOM", classCount: { $sum: 1 } } }, { $match: { classCount: { $gte: 2 } } }, { $project: { class_room: "$_id", classCount: 1 } } ])	college_1
db.CLASS.aggregate([ { $lookup: { from: "COURSE", localField: "CRS_CODE", foreignField: "CRS_CODE", as: "course_info" } }, { $unwind: "$course_info" }, { $group: { _id: "$course_info.DEPT_CODE", count: { $sum: 1 } } }, { $project: { DEPT_CODE: "$_id", count: 1 } } ])	college_1
db.CLASS.aggregate([ { $lookup: { from: "COURSE", localField: "CRS_CODE", foreignField: "CRS_CODE", as: "course_info" } }, { $unwind: "$course_info" }, { $group: { _id: "$course_info.DEPT_CODE", count: { $sum: 1 } } }, { $project: { dept_code: "$_id", count: 1 } } ])	college_1
db.CLASS.aggregate([ { $lookup: { from: "COURSE", localField: "CRS_CODE", foreignField: "CRS_CODE", as: "course_info" } }, { $unwind: "$course_info" }, { $lookup: { from: "DEPARTMENT", localField: "course_info.DEPT_CODE", foreignField: "DEPT_CODE", as: "dept_info" } }, { $unwind: "$dept_info" }, { $group: { _id: "$dept_info.SCHOOL_CODE", count: { $sum: 1 } } }, { $project: { count: 1, SCHOOL_CODE: "$_id" } } ])	college_1
db.CLASS.aggregate([ { $lookup: { from: "COURSE", localField: "CRS_CODE", foreignField: "CRS_CODE", as: "course_info" } }, { $unwind: "$course_info" }, { $lookup: { from: "DEPARTMENT", localField: "course_info.DEPT_CODE", foreignField: "DEPT_CODE", as: "dept_info" } }, { $unwind: "$dept_info" }, { $group: { _id: "$dept_info.SCHOOL_CODE", count: { $sum: 1 } } } ])	college_1
db.DEPARTMENT.aggregate([ { $lookup: { from: "PROFESSOR", localField: "DEPT_CODE", foreignField: "DEPT_CODE", as: "professors" } }, { $group: { _id: "$SCHOOL_CODE", professorCount: { $sum: { $size: "$professors" } } } }, { $project: { school_code: "$_id", professorCount: 1 } } ])	college_1
db.DEPARTMENT.aggregate([ { $lookup: { from: "PROFESSOR", localField: "DEPT_CODE", foreignField: "DEPT_CODE", as: "professors" } }, { $unwind: "$professors" }, { $group: { _id: "$SCHOOL_CODE", uniqueProfessors: { $addToSet: "$professors.EMP_NUM" } } }, { $project: { count: { $size: "$uniqueProfessors" } } } ])	college_1
db.EMPLOYEE.aggregate([ { $group: { _id: "$EMP_JOBCODE", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { emp_jobcode: "$_id", count: 1 } } ])	college_1
db.EMPLOYEE.aggregate([ { $group: { _id: "$EMP_JOBCODE", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { "EMP_JOBCODE": "$_id", "count": 1 } } ])	college_1
db.PROFESSOR.aggregate([ { $match: { PROF_HIGH_DEGREE: 'Ph.D.' } }, { $group: { _id: "$DEPT_CODE", count: { $sum: 1 } } }, { $project: { dept_code: "$_id", count: 1 } } ])	college_1
db.STUDENT.aggregate([ { $group : { _id: "$DEPT_CODE", numberOfStudents: {$sum: 1} } }, { $project: { dept_code: "$_id", count: "$numberOfStudents" } } ])	college_1
db.STUDENT.aggregate([ { $group: { _id: "$DEPT_CODE", numberOfStudents: { $sum: 1 } } }, { $project: { DEPT_CODE: "$_id", numberOfStudents: 1 } } ])	college_1
db.STUDENT.aggregate([ { $group: { _id: "$DEPT_CODE", totalHours: { $sum: "$STU_HRS" } } } ])	college_1
db.STUDENT.aggregate([ { $group: { _id: "$DEPT_CODE", maxGPA: { $max: "$STU_GPA" }, avgGPA: { $avg: "$STU_GPA" }, minGPA: { $min: "$STU_GPA" } } }, { $project: { dept_code: "$_id", maxGPA: 1, avgGPA: 1, minGPA: 1 } } ])	college_1
db.STUDENT.aggregate([ { $group: { _id: "$DEPT_CODE", HighestGPA: { $max: "$STU_GPA" }, AverageGPA: { $avg: "$STU_GPA" }, LowestGPA: { $min: "$STU_GPA" } } }, { $project: { DEPT_CODE: "$_id", HighestGPA: 1, AverageGPA: 1, LowestGPA: 1 } } ])	college_1
db.STUDENT.aggregate([ { $lookup: { from: 'DEPARTMENT', localField: 'DEPT_CODE', foreignField: 'DEPT_CODE', as: 'department_info' } }, { $unwind: '$department_info' }, { $group: { _id: { DEPT_CODE: '$DEPT_CODE', DEPT_NAME: '$department_info.DEPT_NAME' }, AVG_GPA: { $avg: '$STU_GPA' } } }, { $sort: { AVG_GPA: -1 } }, { $limit: 1 }, { $project: { DEPT_NAME: '$_id.DEPT_NAME', AVG_GPA: 1 } } ])	college_1
db.DEPARTMENT.aggregate([ { $group: { _id: "$SCHOOL_CODE" } }, { $count: "unique_schools" } ])	college_1
db.COURSE.aggregate([ { $lookup: { from: "DEPARTMENT", localField: "DEPT_CODE", foreignField: "DEPT_CODE", as: "department_info" } }, { $match: { "department_info.DEPT_NAME": "Computer Info. Systems" } }, { $count: "number_of_courses" } ])	college_1
db.CLASS.aggregate([ { $match: { CRS_CODE: 'ACCT-211' } }, { $group: { _id: "$CLASS_SECTION" } }, { $count: "total_sections" } ])	college_1
db.CLASS.aggregate([ { $match: { CRS_CODE: 'ACCT-211' } }, { $group: { _id: "$CLASS_SECTION" } }, { $count: "distinct_class_sections" } ])	college_1
db.CLASS.aggregate([ { $lookup: { from: "COURSE", localField: "CRS_CODE", foreignField: "CRS_CODE", as: "course_info" } }, { $unwind: "$course_info" }, { $group: { _id: "$course_info.DEPT_CODE", totalCredits: {$sum: "$course_info.CRS_CREDIT"} } }, { $project: { dept_code: "$_id", totalCredits: 1 } } ])	college_1
db.COURSE.aggregate([ { $lookup: { from: "CLASS", localField: "CRS_CODE", foreignField: "CRS_CODE", as: "class_info" } }, { $unwind: "$class_info" }, { $group: { _id: "$DEPT_CODE", totalCredits: { $sum: "$CRS_CREDIT" } } }, { $project: { DEPT_CODE: "$_id", totalCredits: 1 } } ])	college_1
db.COURSE.aggregate([ { $lookup: { from: "CLASS", localField: "CRS_CODE", foreignField: "CRS_CODE", as: "class_info" } }, { $unwind: "$class_info" }, { $lookup: { from: "DEPARTMENT", localField: "DEPT_CODE", foreignField: "DEPT_CODE", as: "department_info" } }, { $unwind: "$department_info" }, { $group: { _id: "$DEPT_CODE", totalCredits: { $sum: "$CRS_CREDIT" }, DEPT_NAME: { $first: "$department_info.DEPT_NAME" } } }, { $sort: { totalCredits: -1 } }, { $limit: 1 }, { $project: { DEPT_NAME: 1 } } ])	college_1
db.COURSE.aggregate([ { $lookup: { from: "CLASS", localField: "CRS_CODE", foreignField: "CRS_CODE", as: "class_info" } }, { $unwind: "$class_info" }, { $group: { _id: "$DEPT_CODE", totalCredits: { $sum: "$CRS_CREDIT" } } }, { $sort: { totalCredits: -1 } }, { $limit: 1 }, { $lookup: { from: "DEPARTMENT", localField: "_id", foreignField: "DEPT_CODE", as: "department_info" } }, { $unwind: "$department_info" }, { $project: { dept_name: "$department_info.DEPT_NAME" } } ])	college_1
db.CLASS.aggregate([ { $match: { CRS_CODE: 'ACCT-211' } }, { $lookup: { from: 'ENROLL', localField: 'CLASS_CODE', foreignField: 'CLASS_CODE', as: 'enrollment' } }, { $unwind: '$enrollment' }, { $count: 'student_count' } ])	college_1
db.CLASS.aggregate([ { $match: { CRS_CODE: "ACCT-211" } }, { $lookup: { from: "ENROLL", localField: "CLASS_CODE", foreignField: "CLASS_CODE", as: "enrollment" }}, { $unwind: "$enrollment" }, { $group: { _id: "$CRS_CODE", total_students: { $sum: 1 } }}, { $project: { total_students: 1 }} ])	college_1
db.STUDENT.aggregate([ { $lookup: { from: "ENROLL", localField: "STU_NUM", foreignField: "STU_NUM", as: "enrollment" } }, { $unwind: "$enrollment" }, { $lookup: { from: "CLASS", localField: "enrollment.CLASS_CODE", foreignField: "CLASS_CODE", as: "class" } }, { $unwind: "$class" }, { $match: { "class.CRS_CODE": "ACCT-211" } }, { $project: { STU_FNAME: 1 } } ])	college_1
db.CLASS.aggregate([ { $lookup: { from: "COURSE", localField: "CRS_CODE", foreignField: "CRS_CODE", as: "course_info" } }, { $unwind: "$course_info" }, { $lookup: { from: "DEPARTMENT", localField: "course_info.DEPT_CODE", foreignField: "DEPT_CODE", as: "dept_info" } }, { $unwind: "$dept_info" }, { $match: { "dept_info.DEPT_NAME": "Accounting" } }, { $lookup: { from: "ENROLL", localField: "CLASS_CODE", foreignField: "CLASS_CODE", as: "enroll_info" } }, { $unwind: "$enroll_info" }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1 } } ])	college_1
db.CLASS.aggregate([ { $lookup: { from: "COURSE", localField: "CRS_CODE", foreignField: "CRS_CODE", as: "course_info" } }, { $unwind: "$course_info" }, { $lookup: { from: "DEPARTMENT", localField: "course_info.DEPT_CODE", foreignField: "DEPT_CODE", as: "dept_info" } }, { $unwind: "$dept_info" }, { $match: { "dept_info.DEPT_NAME": "Accounting" } }, { $lookup: { from: "ENROLL", localField: "CLASS_CODE", foreignField: "CLASS_CODE", as: "enroll_info" } }, { $unwind: "$enroll_info" }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1 } } ])	college_1
db.ENROLL.aggregate([ { $lookup: { from: "CLASS", localField: "CLASS_CODE", foreignField: "CLASS_CODE", as: "class_info" } }, { $unwind: "$class_info" }, { $lookup: { from: "COURSE", localField: "class_info.CRS_CODE", foreignField: "CRS_CODE", as: "course_info" } }, { $unwind: "$course_info" }, { $lookup: { from: "DEPARTMENT", localField: "course_info.DEPT_CODE", foreignField: "DEPT_CODE", as: "department_info" } }, { $unwind: "$department_info" }, { $group: { _id: "$course_info.DEPT_CODE", DEPT_NAME: { $first: "$department_info.DEPT_NAME" }, STUDENT_COUNT: { $sum: 1 } } }, { $sort: { STUDENT_COUNT: -1 } }, { $limit: 1 }, { $project: { DEPT_NAME: 1 } } ])	college_1
db.ENROLL.aggregate([ { $lookup: { from: "CLASS", localField: "CLASS_CODE", foreignField: "CLASS_CODE", as: "class_info" } }, { $unwind: "$class_info" }, { $lookup: { from: "COURSE", localField: "class_info.CRS_CODE", foreignField: "CRS_CODE", as: "course_info" } }, { $unwind: "$course_info" }, { $group: { _id: "$course_info.DEPT_CODE", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "DEPARTMENT", localField: "_id", foreignField: "DEPT_CODE", as: "department_info" } }, { $unwind: "$department_info" }, { $project: { dept_name: "$department_info.DEPT_NAME" } } ])	college_1
db.DEPARTMENT.find({}, {DEPT_NAME: 1}).sort({DEPT_NAME: 1})	college_1
db.DEPARTMENT.find({}, { DEPT_NAME: 1 }).sort({ DEPT_NAME: 1 })	college_1
db.CLASS.find({ CLASS_ROOM: "KLR209" }, { CLASS_CODE: 1 })	college_1
db.EMPLOYEE.find({}, { EMP_FNAME: 1, EMP_LNAME: 1 }).sort({ EMP_DOB: 1 }).limit(1)	college_1
db.STUDENT.aggregate([ { $lookup: { from: "ENROLL", localField: "STU_NUM", foreignField: "STU_NUM", as: "enroll_info" } }, { $unwind: "$enroll_info" }, { $match: { "enroll_info.ENROLL_GRADE": "C" } }, { $group: { _id: "$STU_FNAME" } }, { $project: { STU_FNAME: "$_id" } } ])	college_1
db.PROFESSOR.aggregate([ { $match: { PROF_HIGH_DEGREE: "Ph.D." } }, { $group: { _id: "$DEPT_CODE", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "DEPARTMENT", localField: "_id", foreignField: "DEPT_CODE", as: "department_info" }}, { $unwind: "$department_info" }, { $project: { dept_name: "$department_info.DEPT_NAME", dept_code: "$_id" } } ])	college_1
db.EMPLOYEE.aggregate([ { $lookup: { from: "PROFESSOR", localField: "EMP_NUM", foreignField: "EMP_NUM", as: "professor" } }, { $unwind: "$professor" }, { $lookup: { from: "DEPARTMENT", localField: "professor.DEPT_CODE", foreignField: "DEPT_CODE", as: "department" } }, { $unwind: "$department" }, { $match: { "department.DEPT_NAME": "History" } }, { $lookup: { from: "CLASS", localField: "EMP_NUM", foreignField: "PROF_NUM", as: "class" } }, { $match: { "class": { $size: 0 } } }, { $project: { EMP_FNAME: 1 } } ])	college_1
db.EMPLOYEE.aggregate([ { $lookup: { from: "PROFESSOR", localField: "EMP_NUM", foreignField: "EMP_NUM", as: "professor" } }, { $unwind: "$professor" }, { $lookup: { from: "DEPARTMENT", localField: "professor.DEPT_CODE", foreignField: "DEPT_CODE", as: "department" } }, { $unwind: "$department" }, { $match: { "department.DEPT_NAME": "History" } }, { $project: { EMP_LNAME: 1, PROF_OFFICE: "$professor.PROF_OFFICE" } } ])	college_1
db.EMPLOYEE.aggregate([ { $match: { EMP_LNAME: "Heffington" } }, { $lookup: { from: "PROFESSOR", localField: "EMP_NUM", foreignField: "EMP_NUM", as: "professor" } }, { $unwind: "$professor" }, { $lookup: { from: "DEPARTMENT", localField: "professor.DEPT_CODE", foreignField: "DEPT_CODE", as: "department" } }, { $unwind: "$department" }, { $project: { DEPT_NAME: "$department.DEPT_NAME", PROF_OFFICE: "$professor.PROF_OFFICE" } } ])	college_1
db.EMPLOYEE.aggregate([ { $match: { EMP_LNAME: 'Heffington' } }, { $lookup: { from: 'PROFESSOR', localField: 'EMP_NUM', foreignField: 'EMP_NUM', as: 'prof_details' } }, { $unwind: '$prof_details' }, { $lookup: { from: 'DEPARTMENT', localField: 'prof_details.DEPT_CODE', foreignField: 'DEPT_CODE', as: 'dept_details' } }, { $unwind: '$dept_details' }, { $project: { DEPT_NAME: '$dept_details.DEPT_NAME', PROF_OFFICE: '$prof_details.PROF_OFFICE' } } ])	college_1
db.ENROLL.aggregate([ { $lookup: { from: "STUDENT", localField: "STU_NUM", foreignField: "STU_NUM", as: "student_info" } }, { $match: { "student_info.STU_LNAME": "Smithson" } }, { $lookup: { from: "CLASS", localField: "CLASS_CODE", foreignField: "CLASS_CODE", as: "class_info" } }, { $unwind: "$class_info" }, { $project: { CRS_CODE: "$class_info.CRS_CODE" } } ])	college_1
db.STUDENT.aggregate([ { $match: { STU_LNAME: "Smithson" } }, { $lookup: { from: "ENROLL", localField: "STU_NUM", foreignField: "STU_NUM", as: "enrollment" } }, { $unwind: "$enrollment" }, { $lookup: { from: "CLASS", localField: "enrollment.CLASS_CODE", foreignField: "CLASS_CODE", as: "class" } }, { $unwind: "$class" }, { $lookup: { from: "COURSE", localField: "class.CRS_CODE", foreignField: "CRS_CODE", as: "course" } }, { $unwind: "$course" }, { $project: { crs_description: "$course.CRS_DESCRIPTION", crs_credit: "$course.CRS_CREDIT" } } ])	college_1
db.CLASS.aggregate([ { $lookup: { from: "ENROLL", localField: "CLASS_CODE", foreignField: "CLASS_CODE", as: "enroll_join" } }, { $unwind: "$enroll_join" }, { $lookup: { from: "STUDENT", localField: "enroll_join.STU_NUM", foreignField: "STU_NUM", as: "student_join" } }, { $unwind: "$student_join" }, { $lookup: { from: "COURSE", localField: "CRS_CODE", foreignField: "CRS_CODE", as: "course_join" } }, { $unwind: "$course_join" }, { $match: { "student_join.STU_LNAME": "Smithson" } }, { $project: { "crs_description": "$course_join.CRS_DESCRIPTION", "crs_credit": "$course_join.CRS_CREDIT" } } ])	college_1
db.ENROLL.aggregate([ { $lookup: { from: "STUDENT", localField: "STU_NUM", foreignField: "STU_NUM", as: "student_info" } }, { $unwind: "$student_info" }, { $lookup: { from: "CLASS", localField: "CLASS_CODE", foreignField: "CLASS_CODE", as: "class_info" } }, { $unwind: "$class_info" }, { $match: { "class_info.CRS_CODE": "ACCT-211" } }, { $group: { _id: null, averageGPA: { $avg: "$student_info.STU_GPA" } } }, { $project: { averageGPA: 1 } } ])	college_1
db.STUDENT.aggregate([ { $lookup: { from: "ENROLL", localField: "STU_NUM", foreignField: "STU_NUM", as: "enrollment_info" } }, { $unwind: "$enrollment_info" }, { $lookup: { from: "CLASS", localField: "enrollment_info.CLASS_CODE", foreignField: "CLASS_CODE", as: "class_info" } }, { $unwind: "$class_info" }, { $match: { "class_info.CRS_CODE": "ACCT-211" } }, { $group: { _id: null, avgGPA: { $avg: "$STU_GPA" } } }, { $project: { avgGPA: 1 } } ])	college_1
db.STUDENT.find({}, {STU_FNAME: 1, STU_GPA: 1, STU_PHONE: 1}).sort({STU_GPA: -1}).limit(5)	college_1
db.STUDENT.aggregate([ { $lookup: { from: "DEPARTMENT", localField: "DEPT_CODE", foreignField: "DEPT_CODE", as: "department_details" } }, { $unwind: "$department_details" }, { $group: { _id: "$DEPT_CODE", DEPT_NAME: { $first: "$department_details.DEPT_NAME" }, DEPT_ADDRESS: { $first: "$department_details.DEPT_ADDRESS" }, num_students: { $sum: 1 } } }, { $sort: { num_students: -1 } }, { $limit: 1 }, { $project: { DEPT_NAME: "$DEPT_NAME", DEPT_ADDRESS: "$DEPT_ADDRESS" } } ])	college_1
db.CLASS.aggregate([ { $lookup: { from: "EMPLOYEE", localField: "PROF_NUM", foreignField: "EMP_NUM", as: "emp_info" } }, { $lookup: { from: "COURSE", localField: "CRS_CODE", foreignField: "CRS_CODE", as: "course_info" } }, { $unwind: "$emp_info" }, { $unwind: "$course_info" }, { $project: { "emp_fname": "$emp_info.EMP_FNAME", "crs_description": "$course_info.CRS_DESCRIPTION" } } ])	college_1
db.CLASS.aggregate([ { $lookup: { from: "EMPLOYEE", localField: "PROF_NUM", foreignField: "EMP_NUM", as: "emp_info" } }, { $lookup: { from: "COURSE", localField: "CRS_CODE", foreignField: "CRS_CODE", as: "crs_info" } }, { $unwind: "$emp_info" }, { $unwind: "$crs_info" }, { $project: { "emp_fname": "$emp_info.EMP_FNAME", "crs_description": "$crs_info.CRS_DESCRIPTION" } } ])	college_1
db.CLASS.aggregate([ { $lookup: { from: "EMPLOYEE", localField: "PROF_NUM", foreignField: "EMP_NUM", as: "emp_info" } }, { $lookup: { from: "COURSE", localField: "CRS_CODE", foreignField: "CRS_CODE", as: "crs_info" } }, { $lookup: { from: "PROFESSOR", localField: "emp_info.EMP_NUM", foreignField: "EMP_NUM", as: "prof_info" } }, { $unwind: "$emp_info" }, { $unwind: "$crs_info" }, { $unwind: "$prof_info" }, { $project: { "emp_fname": "$emp_info.EMP_FNAME", "prof_office": "$prof_info.PROF_OFFICE", "crs_description": "$crs_info.CRS_DESCRIPTION" } } ])	college_1
db.CLASS.aggregate([ { $lookup: { from: "EMPLOYEE", localField: "PROF_NUM", foreignField: "EMP_NUM", as: "emp_info" } }, { $lookup: { from: "COURSE", localField: "CRS_CODE", foreignField: "CRS_CODE", as: "crs_info" } }, { $lookup: { from: "PROFESSOR", localField: "emp_info.EMP_NUM", foreignField: "EMP_NUM", as: "prof_info" } }, { $unwind: "$emp_info" }, { $unwind: "$crs_info" }, { $unwind: "$prof_info" }, { $project: { "emp_fname": "$emp_info.EMP_FNAME", "prof_office": "$prof_info.PROF_OFFICE", "crs_description": "$crs_info.CRS_DESCRIPTION" } } ])	college_1
db.CLASS.aggregate([ { $lookup: { from: "EMPLOYEE", localField: "PROF_NUM", foreignField: "EMP_NUM", as: "emp_info" } }, { $unwind: "$emp_info" }, { $lookup: { from: "PROFESSOR", localField: "emp_info.EMP_NUM", foreignField: "EMP_NUM", as: "prof_info" } }, { $unwind: "$prof_info" }, { $lookup: { from: "DEPARTMENT", localField: "prof_info.DEPT_CODE", foreignField: "DEPT_CODE", as: "dept_info" } }, { $unwind: "$dept_info" }, { $match: { "dept_info.DEPT_NAME": "Accounting" } }, { $project: { "emp_fname": "$emp_info.EMP_FNAME", "class_room": "$CLASS_ROOM" } } ])	college_1
db.PROFESSOR.aggregate([ { $lookup: { from: "EMPLOYEE", localField: "EMP_NUM", foreignField: "EMP_NUM", as: "EMPLOYEE_INFO" } }, { $unwind: "$EMPLOYEE_INFO" }, { $lookup: { from: "DEPARTMENT", localField: "DEPT_CODE", foreignField: "DEPT_CODE", as: "DEPARTMENT_INFO" } }, { $unwind: "$DEPARTMENT_INFO" }, { $match: { "DEPARTMENT_INFO.DEPT_NAME": "Computer Info. Systems" } }, { $lookup: { from: "CLASS", localField: "EMP_NUM", foreignField: "PROF_NUM", as: "CLASS_INFO" } }, { $unwind: "$CLASS_INFO" }, { $group: { _id: { EMP_NUM: "$EMP_NUM" }, EMP_FNAME: { $first: "$EMPLOYEE_INFO.EMP_FNAME" }, PROF_HIGH_DEGREE: { $first: "$PROF_HIGH_DEGREE" } } }, { $project: { EMP_FNAME: 1, PROF_HIGH_DEGREE: 1 } } ])	college_1
db.CLASS.aggregate([ { $lookup: { from: "EMPLOYEE", localField: "PROF_NUM", foreignField: "EMP_NUM", as: "professor" } }, { $unwind: "$professor" }, { $group: { _id: "$professor.EMP_NUM", emp_fname: { $first: "$professor.EMP_FNAME" }, count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { emp_fname: 1 } } ])	college_1
db.STUDENT.aggregate([ { $match: { STU_LNAME: { $regex: /^S/ } } }, { $lookup: { from: "ENROLL", localField: "STU_NUM", foreignField: "STU_NUM", as: "enrollment" } }, { $unwind: "$enrollment" }, { $lookup: { from: "CLASS", localField: "enrollment.CLASS_CODE", foreignField: "CLASS_CODE", as: "class" } }, { $unwind: "$class" }, { $match: { "class.CRS_CODE": "ACCT-211" } }, { $project: { STU_FNAME: 1 } } ])	college_1
db.STUDENT.aggregate([ { $match: { STU_LNAME: { $regex: '^S' } } }, { $lookup: { from: "ENROLL", localField: "STU_NUM", foreignField: "STU_NUM", as: "enrollment" } }, { $unwind: "$enrollment" }, { $lookup: { from: "CLASS", localField: "enrollment.CLASS_CODE", foreignField: "CLASS_CODE", as: "class" } }, { $unwind: "$class" }, { $match: { "class.CRS_CODE": "ACCT-211" } }, { $project: { STU_FNAME: 1 } } ])	college_1
db.club_rank.aggregate([ { $group: { _id: null, averageGold: { $avg: "$Gold" } } } , { $project: { averageGold: 1 } }])	sports_competition
db.club_rank.aggregate([ { $group: { _id: null, averageGold: { $avg: "$Gold" } } } , { $project: { averageGold: 1 } }])	sports_competition
db.competition.find({}, { Competition_type: 1, Country: 1})	sports_competition
db.competition.find({}, { Competition_type: 1, Country: 1})	sports_competition
db.club_rank.aggregate([ { $group: { _id: null, maxSilver: { $max: "$Silver" }, minSilver: { $min: "$Silver" } } }, { $project: { maxSilver:1, minSilver:1 } } ])	sports_competition
db.club_rank.aggregate([ { $group: { _id: null, maxSilver: { $max: "$Silver" }, minSilver: { $min: "$Silver" } } }, { $project: { maxSilver:1, minSilver:1 } } ])	sports_competition
db.club.find({}, {name: 1}).sort({Start_year: 1})	sports_competition
db.club.find({}, {name: 1}).sort({Start_year: 1})	sports_competition
db.club.find({}, {name: 1}).sort({name: -1})	sports_competition
db.club.find({}, {name: 1}).sort({name: -1})	sports_competition
db.club.aggregate([ { $lookup: { from: "player", localField: "Club_ID", foreignField: "Club_ID", as: "player_data" } }, { $match: { "player_data.Position": "Right Wing" } }, { $project: { name: 1 } } ])	sports_competition
db.club.aggregate([ { $lookup: { from: "player", localField: "Club_ID", foreignField: "Club_ID", as: "players" } }, { $match: { "players.Position": "Right Wing" } }, { $project: { name: 1 } } ])	sports_competition
db.club.aggregate([ { $match: { name: "AIB" } }, { $lookup: { from: "player", localField: "Club_ID", foreignField: "Club_ID", as: "players" } }, { $unwind: "$players" }, { $group: { _id: null, avgPoints: { $avg: "$players.Points" } } } , { $project: { avgPoints: 1 } }])	sports_competition
db.club.aggregate([ { $match: { name: "AIB" } }, { $lookup: { from: "player", localField: "Club_ID", foreignField: "Club_ID", as: "players" } }, { $unwind: "$players" }, { $group: { _id: null, avgPoints: { $avg: "$players.Points" } } }, { $project: { avgPoints: 1 } } ])	sports_competition
db.player.aggregate([ { $group: { _id: "$Position", averagePoints: { $avg: "$Points" } } }, { $project: { Position: "$_id", averagePoints: 1 } } ])	sports_competition
db.player.aggregate([ { $group: { _id: "$Position", avgPoints: { $avg: "$Points" } } } ])	sports_competition
db.competition.aggregate([ { $group: { _id: "$Competition_type", count: { $sum: 1 } } }, { $project: { Competition_type: "$_id", count: 1 } } ])	sports_competition
db.competition.aggregate([ { $group: { _id: "$Competition_type", count: { $sum: 1 } } }, { $project: { Competition_type: "$_id", count: 1 } } ])	sports_competition
db.competition.aggregate([ { $group: { _id: "$Competition_type", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Competition_type: "$_id" } } ])	sports_competition
db.competition.aggregate([ { $group: { _id: "$Competition_type", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { Competition_type: "$_id" } }])	sports_competition
db.competition.aggregate([ { $group: { _id: "$Competition_type", count: { $sum: 1 } } }, { $match: { count: { $lte: 5 } } }, { $project: { Competition_type: "$_id" } } ])	sports_competition
db.competition.aggregate([ { $group: { _id: "$Competition_type", count: { $sum: 1 } } }, { $match: { count: { $lte: 5 } } }, { $project: { Competition_type: "$_id" } } ])	sports_competition
db.club.find( { Club_ID: { $nin: db.player.distinct("Club_ID") } }, { name: 1 } )	sports_competition
db.club.find({ Club_ID: { $nin: db.player.distinct("Club_ID") } }, { name: 1 })	sports_competition
db.player.aggregate([ { $match: { $or: [ { Points: { $gt: 20 } }, { Points: { $lt: 10 } } ] } }, { $group: { _id: "$Position", players: { $push: { points: "$Points" } } } }, { $addFields: { moreThan20: { $anyElementTrue: { $map: { input: "$players", as: "player", in: { $gt: ["$$player.points", 20] } } } }, lessThan10: { $anyElementTrue: { $map: { input: "$players", as: "player", in: { $lt: ["$$player.points", 10] } } } } } }, { $match: { moreThan20: true, lessThan10: true } }, { $project: { _id: 1 } } ])	sports_competition
db.player.aggregate([ { $match: { $or: [{ Points: { $gt: 20 } }, { Points: { $lt: 10 } }] } }, { $group: { _id: "$Position", pointsRange: { $addToSet: { $cond: [{ $gt: ["$Points", 20] }, "moreThan20", "lessThan10"] } } } }, { $match: { $and: [{ pointsRange: "moreThan20" }, { pointsRange: "lessThan10" }] } }, { $project: { _id: 1 } } ])	sports_competition
db.player.aggregate([ { $group: { _id: null, totalPoints: { $sum: "$Points" } } } , { $project: { totalPoints: 1 } }])	sports_competition
db.player.aggregate([ { $group: { _id: null, totalPoints: { $sum: "$Points" } } }, { $project: { totalPoints: 1} } ])	sports_competition
db.player.aggregate([ { $group: { _id: null, avgPoints: { $avg: "$Points" } } }, { $lookup: { from: "player", let: { avgPoints: "$avgPoints" }, pipeline: [ { $match: { $expr: { $gt: [ "$Points", "$$avgPoints" ] } } }, { $project: { name: 1 } } ], as: "players" } }, { $unwind: "$players" }, { $replaceRoot: { newRoot: "$players" } } ])	sports_competition
db.player.aggregate([ { $group: { _id: null, avgPoints: { $avg: "$Points" } } }, { $lookup: { from: "player", let: { avgPoints: "$avgPoints" }, pipeline: [ { $match: { $expr: { $gt: ["$Points", "$$avgPoints"] } } }, { $project: { name: 1 } } ], as: "players" } }, { $unwind: "$players" }, { $replaceRoot: { newRoot: "$players" } } ])	sports_competition
db.player.aggregate([ { $match: { Points: { $lt: 30 } } }, { $group: { _id: "$Position", count: { $sum: 1 } } } ])	sports_competition
db.player.aggregate([ { $match: { Points: { $lt: 30 } } }, { $group: { _id: "$Position", count: { $sum: 1 } } } ])	sports_competition
db.competition.aggregate([ { $match: { $or: [{ Competition_type: 'Friendly' }, { Competition_type: 'Tournament' }] } }, { $group: { _id: "$Country", types: { $addToSet: "$Competition_type" } } }, { $match: { types: { $all: ["Friendly", "Tournament"] } } }, { $project: { _id: 1 } } ])	sports_competition
db.competition.aggregate([ { $match: { $or: [ { Competition_type: 'Friendly' }, { Competition_type: 'Tournament' } ] } }, { $group: { _id: '$Country', types: { $addToSet: '$Competition_type' } } }, { $match: { types: { $all: ['Friendly', 'Tournament'] } } }, { $project: { Country: '$_id' } } ])	sports_competition
db.competition.aggregate([ { $match: { "Competition_type": { $ne: "Friendly" } } }, { $group: { _id: null, countries: { $addToSet: "$Country" } } }, { $lookup: { from: "competition", pipeline: [ { $match: { "Competition_type": "Friendly" } }, { $group: { _id: null, friendlyCountries: { $addToSet: "$Country" } } } ], as: "friendlyComps" } }, { $project: { countriesNeverFriendly: { $setDifference: ["$countries", { $arrayElemAt: ["$friendlyComps.friendlyCountries", 0] }] } } }, { $unwind: "$countriesNeverFriendly" }, { $replaceRoot: { newRoot: { country: "$countriesNeverFriendly" } } } ])	sports_competition
db.furniture.aggregate([ { $group: { _id: null, totalComponents: { $sum: "$Num_of_Component" } } }, { $project: { totalComponents: 1 } } ])	manufacturer
db.furniture.find({}, { Name: 1, Furniture_ID: 1 }).sort({ Market_Rate: -1 }).limit(1)	manufacturer
db.furniture.find({Num_of_Component: {$gt: 10}}, { Num_of_Component: 1, Name: 1})	manufacturer
db.furniture.aggregate([ { $lookup: { from: "furniture_manufacte", localField: "Furniture_ID", foreignField: "Furniture_ID", as: "furniture_manufacte" } }, { $unwind: "$furniture_manufacte" }, { $group: { _id: "$Furniture_ID", name: { $first: "$Name" }, Num_of_Component: { $first: "$Num_of_Component" }, count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { name: 1, Num_of_Component: 1 } } ])	manufacturer
db.manufacturer.aggregate([ { $lookup: { from: "furniture_manufacte", localField: "Manufacturer_ID", foreignField: "Manufacturer_ID", as: "furniture_manufacte" } }, { $project: { Open_Year: 1, Name: 1 } }, { $sort: { Num_of_Shops: -1 } }, { $limit: 1 } ])	manufacturer
db.manufacturer.aggregate([ { $match: { Num_of_Shops: { $gt: 20 } } }, { $group: { _id: null, average: { $avg: "$Num_of_Factories" } } } , { $project: { average: 1} }])	manufacturer
db.manufacturer.find({}, { Name: 1, Manufacturer_ID: 1}).sort({Open_Year: 1})	manufacturer
db.manufacturer.find( { $or: [ {Num_of_Shops: {$gt: 10}}, {Num_of_Factories: {$lt: 10}} ] }, { Name: 1, Open_Year: 1 } )	manufacturer
db.manufacturer.aggregate([ { $match: { Open_Year: { $lt: 1990 } } }, { $group: { _id: null, max_num_of_shops: { $max: "$Num_of_Shops" }, avg_num_of_factories: { $avg: "$Num_of_Factories" } } }, { $project: { max_num_of_shops: 1, avg_num_of_factories: 1 } } ])	manufacturer
db.manufacturer.aggregate([ { $lookup: { from: "furniture_manufacte", localField: "Manufacturer_ID", foreignField: "Manufacturer_ID", as: "furniture_manufacte" } }, { $unwind: "$furniture_manufacte" }, { $sort: { "furniture_manufacte.Price_in_Dollar": -1 } }, { $limit: 1 }, { $project: { Manufacturer_ID: "$Manufacturer_ID", Num_of_Shops: "$Num_of_Shops" } } ])	manufacturer
db.furniture.aggregate([ { $lookup: { from: "furniture_manufacte", localField: "Furniture_ID", foreignField: "Furniture_ID", as: "manufacturing_details" } }, { $unwind: "$manufacturing_details" }, { $project: { name: "$Name", price_in_dollar: "$manufacturing_details.Price_in_Dollar" } } ])	manufacturer
db.furniture.aggregate([ { $lookup: { from: "furniture_manufacte", localField: "Furniture_ID", foreignField: "Furniture_ID", as: "furniture_manufacte" } }, { $match: { "furniture_manufacte": { $size: 0 } } }, { $project: { Market_Rate: 1, Name: 1 } } ])	manufacturer
db.employees.find({ "LAST_NAME": "McEwen" }, { "FIRST_NAME": 1, "DEPARTMENT_ID": 1, "_id": 0 })	hr_1
db.employees.find({ "LAST_NAME": "McEwen" }, { "FIRST_NAME": 1, "DEPARTMENT_ID": 1, "_id": 0 })	hr_1
db.departments.find({ DEPARTMENT_NAME: 'Marketing' })	hr_1
db.departments.findOne({ DEPARTMENT_NAME: 'Marketing' })	hr_1
db.employees.find( { "FIRST_NAME": /m$/ }, { "FIRST_NAME": 1, "LAST_NAME": 1, "SALARY": 1, "_id": 0 } )	hr_1
db.employees.find( { "FIRST_NAME": /m$/ }, { "FIRST_NAME": 1, "LAST_NAME": 1, "SALARY": 1, "_id": 0 } )	hr_1
db.employees.find( { $or: [ { DEPARTMENT_ID: 70 }, { DEPARTMENT_ID: 90 } ] }, { FIRST_NAME: 1, LAST_NAME: 1 } )	hr_1
db.employees.find( { $or: [{ DEPARTMENT_ID: 70 }, { DEPARTMENT_ID: 90 }] }, { FIRST_NAME: 1, LAST_NAME: 1 } )	hr_1
db.jobs.find({ MIN_SALARY: { $gt: 9000 }}, { JOB_TITLE: 1 })	hr_1
db.jobs.find({ "MIN_SALARY": { "$gt": 9000 } }, { "JOB_TITLE": 1, "_id": 0 })	hr_1
db.job_history.aggregate([ { $group: { _id: "$EMPLOYEE_ID", END_DATE: { $max: "$END_DATE" } } }, { $project: { EMPLOYEE_ID: "$_id", END_DATE: "$END_DATE" } } ])	hr_1
db.job_history.aggregate([ { $group: { _id: "$EMPLOYEE_ID", final_date_of_employment: { $max: "$END_DATE" } } }, { $project: { EMPLOYEE_ID: "$_id", END_DATE: "$final_date_of_employment" } } ])	hr_1
db.employees.aggregate([ { $match: { COMMISSION_PCT: { $exists: true, $ne: null } } }, { $group: { _id: "$DEPARTMENT_ID", count: { $sum: 1 } } }, { $match: { count: { $gt: 10 } } }, { $project: { DEPARTMENT_ID: "$_id" } } ])	hr_1
db.employees.aggregate([ { $match: { COMMISSION_PCT: { $exists: true } } }, { $group: { _id: "$DEPARTMENT_ID", numCommissions: { $sum: 1 } } }, { $match: { numCommissions: { $gt: 10 } } }, { $project: { DEPARTMENT_ID: "$_id" } } ])	hr_1
db.employees.aggregate([ { $group: { _id: { department_id: "$DEPARTMENT_ID", manager_id: "$MANAGER_ID"}, employeeCount: { $sum: 1 } }}, { $match: { employeeCount: { $gte: 4 } }}, { $project: { department_id: "$_id.department_id" }}, { $group: { _id: "$department_id" }}, { $project: { department_id: "$_id" }} ])	hr_1
db.employees.aggregate([ { $match: { COMMISSION_PCT: { $ne: null } } }, { $group: { _id: "$DEPARTMENT_ID", avgSalary: { $avg: "$SALARY" } } } ])	hr_1
db.locations.aggregate([ { $group: { _id: "$COUNTRY_ID", number_of_cities: { $sum: 1 } } }, { $project: { country_id: "$_id", number_of_cities: 1 } } ])	hr_1
db.locations.aggregate([ { $group: { _id: "$COUNTRY_ID", countOfCities: { $sum: 1 } } } ])	hr_1
db.job_history.aggregate([ { $group: { _id: "$EMPLOYEE_ID", numJobs: { $sum: 1 } } }, { $match: { numJobs: { $gte: 2 } } }, { $project: { _id: 1 } } ])	hr_1
db.job_history.aggregate([ { $group: { _id: "$EMPLOYEE_ID", jobCount: { $sum: 1 } }}, { $match: { jobCount: { $gte: 2 } }}, { $project: { EMPLOYEE_ID: "$_id" }} ])	hr_1
db.employees.aggregate([ { $lookup: { from: "departments", localField: "DEPARTMENT_ID", foreignField: "DEPARTMENT_ID", as: "department_info" } }, { $unwind: "$department_info" }, { $group: { _id: "$department_info.DEPARTMENT_NAME", numEmployees: { $sum: 1 } } }, { $project: { department_name: "$_id", numEmployees: 1 } } ])	hr_1
db.employees.aggregate([ { $lookup: { from: "departments", localField: "DEPARTMENT_ID", foreignField: "DEPARTMENT_ID", as: "department_info" } }, { $unwind: "$department_info" }, { $group: { _id: "$department_info.DEPARTMENT_NAME", count: { $sum: 1 } } }, { $project: { department_name: "$_id", number_of_employees: "$count" } } ])	hr_1
db.employees.aggregate([ { $lookup: { from: "jobs", localField: "JOB_ID", foreignField: "JOB_ID", as: "jobDetails" } }, { $unwind: "$jobDetails" }, { $group: { _id: "$jobDetails.JOB_TITLE", averageSalary: { $avg: "$SALARY" } } }, { $project: { job_title: "$_id", averageSalary: 1 } } ])	hr_1
db.employees.aggregate([ { $lookup: { from: "jobs", localField: "JOB_ID", foreignField: "JOB_ID", as: "jobDetails" } }, { $unwind: "$jobDetails" }, { $group: { _id: "$jobDetails.JOB_TITLE", averageSalary: { $avg: "$SALARY" } } }, { $project: { jobTitle: "$_id", averageSalary: 1 } } ])	hr_1
db.employees.aggregate([ { $group: { _id: "$DEPARTMENT_ID", minSalary: { $min: "$SALARY" } } }, { $project: { department_id: "$_id", minSalary: 1 } } ])	hr_1
db.employees.aggregate([ { $group: { _id: "$DEPARTMENT_ID", minSalary: { $min: "$SALARY" } } }, { $project: { department_id: "$_id", minSalary: 1 } } ])	hr_1
db.employees.aggregate([ { $lookup: { from: 'employees', localField: 'MANAGER_ID', foreignField: 'EMPLOYEE_ID', as: 'manager' } }, { $match: { 'manager.FIRST_NAME': 'Payam' } }, { $project: { EMPLOYEE_ID: 1, SALARY: 1 } } ])	hr_1
db.departments.aggregate([ { $lookup: { from: "employees", localField: "DEPARTMENT_ID", foreignField: "DEPARTMENT_ID", as: "employee_info" } }, { $match: { "employee_info.EMPLOYEE_ID": { $exists: true, $not: { $size: 0 } } } }, { $project: { DEPARTMENT_NAME: 1 } } ])	hr_1
db.departments.findOne({ DEPARTMENT_NAME: "Marketing" })	hr_1
db.departments.find({ DEPARTMENT_NAME: 'Marketing' })	hr_1
db.job_history.aggregate([ { $group: { _id: "$EMPLOYEE_ID", numJobs: { $sum: 1 } } }, { $match: { numJobs: { $gte: 2 } } }, { $project: { EMPLOYEE_ID: "$_id" } } ])	hr_1
db.job_history.aggregate([ { $group: { _id: "$EMPLOYEE_ID", jobCount: { $sum: 1 } }}, { $match: { jobCount: { $gte: 2 } }}, { $project: { EMPLOYEE_ID: "$_id" }} ])	hr_1
db.employees.aggregate([ { $group: { _id: { department_id: "$DEPARTMENT_ID", manager_id: "$MANAGER_ID" }, employeeCount: { $sum: 1 } } }, { $match: { employeeCount: { $gte: 4 } } }, { $group: { _id: null, uniqueDepartmentIds: { $addToSet: "$_id.department_id" } } }, { $unwind: "$uniqueDepartmentIds" }, { $project: { department_id: "$uniqueDepartmentIds" } } ])	hr_1
db.employees.aggregate([ { $group: { _id: "$JOB_ID", avgSalary: { $avg: "$SALARY" } }}, { $match: { avgSalary: { $gt: 8000 } }}, { $project: { JOB_ID: "$_id" }} ])	hr_1
db.employees.aggregate([ { $group: { _id: "$JOB_ID", averageSalary: { $avg: "$SALARY" } } }, { $match: { averageSalary: { $gt: 8000 } } }, { $project: { job_id: "$_id" } } ])	hr_1
db.employees.aggregate([ { $lookup: { from: "departments", localField: "DEPARTMENT_ID", foreignField: "DEPARTMENT_ID", as: "dept" } }, { $match: { "dept.DEPARTMENT_NAME": "Finance" } }, { $project: { FIRST_NAME: 1, JOB_ID: 1 } } ])	hr_1
db.employees.aggregate([ { $lookup: { from: "departments", localField: "DEPARTMENT_ID", foreignField: "DEPARTMENT_ID", as: "department" } }, { $match: { "department.DEPARTMENT_NAME": "Finance" } }, { $project: { FIRST_NAME: 1, JOB_ID: 1 } } ])	hr_1
db.employees.aggregate([ { $match: { $expr: { $and: [ { $gte: ["$SALARY", { $min: "$SALARY" }] }, { $lte: ["$SALARY", 2500] } ] } } } ])	hr_1
db.employees.aggregate([ { $group: { _id: "$DEPARTMENT_ID", totalSalary: { $sum: "$SALARY" }, numOfEmployees: { $sum: 1 } }}, { $match: { numOfEmployees: { $gte: 2 } }}, { $project: { department_id: "$_id", totalSalary: 1 }} ])	hr_1
db.employees.aggregate([ { $match: { FIRST_NAME: /z/i } }, { $lookup: { from: "departments", localField: "DEPARTMENT_ID", foreignField: "DEPARTMENT_ID", as: "department" } }, { $unwind: "$department" }, { $lookup: { from: "locations", localField: "department.LOCATION_ID", foreignField: "LOCATION_ID", as: "location" } }, { $unwind: "$location" }, { $project: { FIRST_NAME: 1, LAST_NAME: 1, CITY: "$location.CITY" } } ])	hr_1
db.employees.aggregate([ { $lookup: { from: "departments", localField: "DEPARTMENT_ID", foreignField: "DEPARTMENT_ID", as: "department_info" } }, { $unwind: "$department_info" }, { $group: { _id: "$department_info.DEPARTMENT_NAME", numberOfEmployees: { $sum: 1 } } }, { $project: { department_name: "$_id", numberOfEmployees: 1 } } ])	hr_1
db.employees.aggregate([ { $lookup: { from: "departments", localField: "DEPARTMENT_ID", foreignField: "DEPARTMENT_ID", as: "department_info" } }, { $unwind: "$department_info" }, { $group: { _id: "$department_info.DEPARTMENT_NAME", numberOfEmployees: { $sum: 1 } } }, { $project: { department_name: "$_id", numberOfEmployees: 1 } } ])	hr_1
db.employees.aggregate([ { $lookup: { from: "departments", localField: "DEPARTMENT_ID", foreignField: "DEPARTMENT_ID", as: "department_info" } }, { $unwind: "$department_info" }, { $lookup: { from: "locations", localField: "department_info.LOCATION_ID", foreignField: "LOCATION_ID", as: "location_info" } }, { $unwind: "$location_info" }, { $match: { "location_info.CITY": "London" } }, { $project: { FIRST_NAME: 1, LAST_NAME: 1, SALARY: 1 } } ])	hr_1
db.employees.aggregate([ { $lookup: { from: "departments", localField: "DEPARTMENT_ID", foreignField: "DEPARTMENT_ID", as: "department" } }, { $unwind: "$department" }, { $lookup: { from: "locations", localField: "department.LOCATION_ID", foreignField: "LOCATION_ID", as: "location" } }, { $unwind: "$location" }, { $match: { "location.CITY": "London" } }, { $project: { FIRST_NAME: 1, LAST_NAME: 1, SALARY: 1 } } ])	hr_1
db.song.find({}, { song_name: 1, releasedate: 1 }).sort({ releasedate: -1 }).limit(1)	music_1
db.song.find({}, {song_name: 1, releasedate: 1}).sort({releasedate: -1}).limit(1)	music_1
db.files.find({}, {f_id: 1}).sort({duration: -1}).limit(1)	music_1
db.files.find({}, {f_id: 1}).sort({duration: -1}).limit(1)	music_1
db.song.find({languages: 'english'}, {song_name: 1})	music_1
db.song.find({languages: 'english'}, {song_name: 1})	music_1
db.files.find({ formats: 'mp3' }, { f_id: 1 })	music_1
db.files.find({ formats: 'mp3' }, { f_id: 1 })	music_1
db.artist.aggregate([ { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "song_info" } }, { $unwind: "$song_info" }, { $match: { "song_info.rating": { $gt: 9 } } }, { $project: { artist_name: 1, country: 1 } } ])	music_1
db.artist.aggregate([ { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "song_info" } }, { $unwind: "$song_info" }, { $match: { "song_info.rating": { $gt: 9 } } }, { $project: { artist_name: 1, country: 1 } } ])	music_1
db.song.aggregate([ { $match: { resolution: { $lt: 800 } } }, { $lookup: { from: "files", localField: "f_id", foreignField: "f_id", as: "files_info" } }, { $unwind: "$files_info" }, { $project: { file_size: "$files_info.file_size", formats: "$files_info.formats" } } ])	music_1
db.files.aggregate([ { $lookup: { from: "song", localField: "f_id", foreignField: "f_id", as: "song_info" } }, { $unwind: "$song_info" }, { $match: { "song_info.resolution": { $lt: 800 } } }, { $project: { file_size: 1, formats: 1 } } ])	music_1
db.song.aggregate([ { $lookup: { from: "files", localField: "f_id", foreignField: "f_id", as: "files_info" } }, { $unwind: "$files_info" }, { $sort: { "files_info.duration": 1 } }, { $limit: 1 }, { $project: { artist_name: 1 } } ])	music_1
db.song.aggregate([ { $lookup: { from: "files", localField: "f_id", foreignField: "f_id", as: "files_info" } }, { $unwind: "$files_info" }, { $sort: { "files_info.duration": 1 } }, { $limit: 1 }, { $project: { artist_name: 1 } } ])	music_1
db.artist.aggregate([ { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "song_info" } }, { $unwind: "$song_info" }, { $sort: { "song_info.rating": -1 } }, { $limit: 3 }, { $project: { artist_name: 1, country: 1 } } ])	music_1
db.artist.aggregate([ { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "song_info" } }, { $unwind: "$song_info" }, { $sort: { "song_info.rating": -1 } }, { $limit: 3 }, { $project: { artist_name: 1, country: 1 } } ])	music_1
db.files.aggregate([ { $match: { duration: /^4:/ } }, { $count: "total" } ])	music_1
db.files.aggregate([ { $match: { duration: /^4:/ } }, { $count: "count" } ])	music_1
db.artist.aggregate([ { $match: { gender: "Female" } }, { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "songs" } }, { $unwind: "$songs" }, { $group: { _id: null, avgRating: { $avg: "$songs.rating" } } }, { $project: { avgRating: 1 } } ])	music_1
db.artist.aggregate([ { $match: { gender: "Female" } }, { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "songs" } }, { $unwind: "$songs" }, { $group: { _id: null, avgRating: { $avg: "$songs.rating" } } } , { $project: { avgRating:1 } }])	music_1
db.files.aggregate([ { $group: { _id: "$formats", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { formats: "$_id" } } ])	music_1
db.files.aggregate([ { $group: { _id: "$formats", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { formats: "$_id" } } ])	music_1
db.artist.aggregate([ { $match: { country: "UK" } }, { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "song_info" } }, { $match: { "song_info.languages": "english" } }, { $project: { artist_name: 1 } } ])	music_1
db.artist.aggregate([ { $match: { country: "UK", artist_name: { $in: db.song.distinct("artist_name", { languages: "english" }) } } }, { $project: { artist_name: 1 } } ])	music_1
db.files.aggregate([ { $match: { formats: "mp4" } }, { $lookup: { from: "song", localField: "f_id", foreignField: "f_id", as: "song_info" } }, { $unwind: "$song_info" }, { $match: { "song_info.resolution": { $lt: 1000 } } }, { $project: { f_id: 1 } } ])	music_1
db.files.find( { formats: "mp4", f_id: { $in: db.song.distinct( "f_id", { resolution: { $lt: 1000 } } ) } }, { f_id: 1 } )	music_1
db.artist.aggregate([ { $match: { gender: "Female" } }, { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "song_info" } }, { $unwind: "$song_info" }, { $match: { "song_info.languages": "bangla" } }, { $project: { country: 1 } } ])	music_1
db.artist.aggregate([ { $match: { gender: "Female" } }, { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "song_info" } }, { $unwind: "$song_info" }, { $match: { "song_info.languages": "bangla" } }, { $project: { country: 1 } } ])	music_1
db.artist.aggregate([ { $group: { _id: "$gender", count: { $sum: 1 } } } ])	music_1
db.artist.aggregate([ { $group: { _id: "$gender", count: { $sum: 1 } } } ])	music_1
db.song.aggregate([ { $group: { _id: "$languages", averageRating: { $avg: "$rating" } } } ])	music_1
db.song.aggregate([ { $group: { _id: "$languages", averageRating: { $avg: "$rating" } } } ])	music_1
db.artist.aggregate([ { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "song_info" } }, { $unwind: "$song_info" }, { $sort: { "song_info.resolution": 1 } }, { $limit: 1 }, { $project: { gender: 1, artist_name: 1 } } ])	music_1
db.artist.aggregate([ { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "song_info" } }, { $unwind: "$song_info" }, { $sort: { "song_info.resolution": 1 } }, { $limit: 1 }, { $project: { gender: 1, artist_name: 1 } } ])	music_1
db.files.aggregate([ { $group: { _id: "$formats", count: { $sum: 1 } } }, { $project: { formats: "$_id", count: 1 } } ])	music_1
db.files.aggregate([ { $group: { _id: "$formats", count: { $sum: 1 } } } ])	music_1
db.song.aggregate([ { $match: { rating: { $lt: db.song.findOne({ genre_is: 'blues' }).rating } } }, { $project: { song_name: 1 } } ])	music_1
db.song.find({rating: {$lt: db.song.findOne({genre_is: 'blues'}, {rating: 1}).rating}}, {song_name: 1})	music_1
db.artist.aggregate([ { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "song_info" } }, { $unwind: "$song_info" }, { $match: { "song_info.song_name": { $regex: /love/, $options: "i" } } }, { $project: { artist_name: 1, country: 1 } } ])	music_1
db.artist.aggregate([ { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "song_info" } }, { $unwind: "$song_info" }, { $match: { "song_info.song_name": { $regex: /.*love.*/, $options: "i" } } }, { $project: { artist_name: 1, country: 1 } } ])	music_1
db.genre.find({}, { g_name: 1, rating: 1}).sort({g_name: 1})	music_1
db.genre.find({}, { g_name: 1, rating: 1}).sort({g_name: 1})	music_1
db.song.find({}, { song_name: 1}).sort({resolution: 1})	music_1
db.song.find({}, { song_name: 1}).sort({resolution: 1})	music_1
db.files.aggregate([ { $match: { formats: 'mp4' } }, { $project: { f_id: 1 } }, { $unionWith: { coll: 'song', pipeline: [ { $match: { resolution: { $gt: 720 } } }, { $project: { f_id: 1 } } ] } }, { $group: { _id: '$f_id' } }, { $project: { f_id: '$_id' } } ])	music_1
db.song.aggregate([ { $lookup: { from: "files", localField: "f_id", foreignField: "f_id", as: "song_files" } }, { $match: { $or: [ { "song_files.formats": "mp4" }, { resolution: { $gt: 720 } } ] } }, { $project: { f_id: 1 } } ])	music_1
db.song.aggregate([ { $lookup: { from: "files", localField: "f_id", foreignField: "f_id", as: "files_info" } }, { $match: { $or: [ { "files_info.duration": { $regex: /^4:/ } }, { languages: "english" } ] } }, { $project: { song_name: 1 } } ])	music_1
db.song.aggregate([ { $lookup: { from: "files", localField: "f_id", foreignField: "f_id", as: "files_data" } }, { $match: { $or: [ { "files_data.duration": { $regex: /^4:/ } }, { languages: "english" } ] } }, { $project: { song_name: 1 } } ])	music_1
db.song.aggregate([ { $group: { _id: "$languages", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { languages: "$_id" } } ])	music_1
db.song.aggregate([ { $group: { _id: "$languages", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { languages: "$_id" } } ])	music_1
db.artist.find({country: 'UK', gender: 'Male'}, {artist_name: 1})	music_1
db.artist.find({country: 'UK', gender: 'Male'}, {artist_name: 1})	music_1
db.song.find( { $or: [ { genre_is: 'modern' }, { languages: 'english' } ] }, { song_name: 1 } )	music_1
db.song.find( { $or: [ { genre_is: 'modern' }, { languages: 'english' } ] }, { song_name: 1 } )	music_1
db.files.aggregate([ { $match: { formats: "mp3" } }, { $lookup: { from: "song", localField: "f_id", foreignField: "f_id", as: "song_info" } }, { $unwind: "$song_info" }, { $match: { "song_info.resolution": { $lt: 1000 } } }, { $project: { song_name: "$song_info.song_name" } } ])	music_1
db.song.aggregate([ { $lookup: { from: "files", localField: "f_id", foreignField: "f_id", as: "files_data" } }, { $match: { "files_data.formats": "mp3", resolution: { $lt: 1000 } } }, { $project: { song_name: 1 } } ])	music_1
db.artist.aggregate([ { $match: { country: "UK" } }, { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "song_info" } }, { $match: { "song_info.languages": "english" } }, { $project: { artist_name: 1 } } ])	music_1
db.artist.aggregate([ { $match: { country: "UK" } }, { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "songs" } }, { $match: { "songs.languages": "english" } }, { $project: { artist_name: 1 } } ])	music_1
db.song.aggregate([ { $match: { languages: "bangla" } }, { $group: { _id: null, avgRating: { $avg: "$rating" }, avgResolution: { $avg: "$resolution" } } }, { $project: { avgRating: 1 , avgResolution:1} } ])	music_1
db.song.aggregate([ { $match: { languages: "bangla" } }, { $group: { _id: null, avgRating: { $avg: "$rating" }, avgResolution: { $avg: "$resolution" } } } , { $project: { avgRating:1, avgResolution:1} }])	music_1
db.files.aggregate([ { $match: { duration: /^3:/ } }, { $lookup: { from: "song", localField: "f_id", foreignField: "f_id", as: "song_info" } }, { $unwind: "$song_info" }, { $group: { _id: null, maxResolution: { $max: "$song_info.resolution" }, minResolution: { $min: "$song_info.resolution" } } }, { $project: { maxResolution: 1, minResolution: 1 } } ])	music_1
db.files.aggregate([ { $match: { duration: /^3:/ } }, { $lookup: { from: "song", localField: "f_id", foreignField: "f_id", as: "song_info" } }, { $unwind: "$song_info" }, { $group: { _id: null, max_resolution: { $max: "$song_info.resolution" }, min_resolution: { $min: "$song_info.resolution" } } }, { $project: { max_resolution: 1, min_resolution: 1 } } ])	music_1
db.song.aggregate([ { $lookup: { from: "files", localField: "f_id", foreignField: "f_id", as: "file_info" } }, { $unwind: "$file_info" }, { $group: { _id: "$languages", maxDuration: { $max: "$file_info.duration" }, maxResolution: { $max: "$resolution" } } }, { $sort: { _id: 1 } }, { $project: { languages: "$_id", maxDuration: 1, maxResolution: 1 } } ])	music_1
db.song.aggregate([ { $lookup: { from: "files", localField: "f_id", foreignField: "f_id", as: "file_details" } }, { $unwind: "$file_details" }, { $group: { _id: "$languages", maxDuration: { $max: "$file_details.duration" }, maxResolution: { $max: "$resolution" } } }, { $sort: { "_id": 1 } }, { $project: { languages: "$_id", maxDuration: 1, maxResolution: 1 } } ])	music_1
db.song.aggregate([ { $lookup: { from: "files", localField: "f_id", foreignField: "f_id", as: "file_info" } }, { $unwind: "$file_info" }, { $group: { _id: "$genre_is", shortest_duration: { $min: "$file_info.duration" }, lowest_rating: { $min: "$rating" } } }, { $sort: { _id: 1 } }, { $project: { genre_is: "$_id", shortest_duration: 1, lowest_rating: 1 } } ])	music_1
db.song.aggregate([ { $lookup: { from: "files", localField: "f_id", foreignField: "f_id", as: "file_info" } }, { $unwind: "$file_info" }, { $group: { _id: "$genre_is", shortestDuration: {$min: "$file_info.duration"}, lowestRating: {$min: "$rating"} } }, { $sort: { _id: 1 } }, { $project: { genre: "$_id", shortestDuration: 1, lowestRating: 1 } } ])	music_1
db.artist.aggregate([ { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "songs" } }, { $match: { "songs.languages": "english" } }, { $project: { artist_name: 1, song_count: { $size: "$songs" } } } ])	music_1
db.artist.aggregate([ { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "songs" } }, { $match: { "songs.languages": "english" } }, { $project: { artist_name: 1, song_count: { $size: "$songs" } } } ])	music_1
db.artist.aggregate([ { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "songs" } }, { $match: { "songs.resolution": { $gt: 900 } } }, { $project: { artist_name: 1, country: 1 } } ])	music_1
db.artist.aggregate([ { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "songs" } }, { $unwind: "$songs" }, { $match: { "songs.resolution": { $gt: 900 } } }, { $group: { _id: "$artist_name", country: { $first: "$country" } } }, { $project: { artist_name: "$_id", country: 1 } } ])	music_1
db.song.aggregate([ { $match: { languages: 'english' } }, { $group: { _id: null, minRating: { $min: "$rating" } } }, { $lookup: { from: "song", let: { englishMinRating: "$minRating" }, pipeline: [ { $match: { $expr: { $lt: ["$rating", "$$englishMinRating"] } } }, { $project: { song_name: 1 } } ], as: "songsBelowEnglishRating" } }, { $unwind: "$songsBelowEnglishRating" }, { $replaceRoot: { newRoot: "$songsBelowEnglishRating" } } ])	music_1
db.song.aggregate([ { $match: { rating: { $lt: db.song.aggregate([ { $match: { languages: "english" } }, { $group: { _id: null, minRating: { $min: "$rating" } } } ]).toArray()[0].minRating } } }, { $project: { song_name: 1 } } ])	music_1
db.song.aggregate([ { $match: { genre_is: "modern" } }, { $group: { _id: null, avgResolution: { $avg: "$resolution" } } }, { $lookup: { from: "song", let: { avgResolution: "$avgResolution" }, pipeline: [ { $match: { $expr: { $gt: [ "$resolution", "$$avgResolution" ] } } }, { $project: { f_id: 1 } } ], as: "songs" } }, { $unwind: "$songs" }, { $replaceRoot: { newRoot: "$songs" } } ])	music_1
db.song.aggregate([ { $match: { genre_is: "modern" } }, { $group: { _id: null, avgResolution: { $avg: "$resolution" } } }, { $lookup: { from: "song", let: { avgResolution: "$avgResolution" }, pipeline: [ { $match: { $expr: { $gt: [ "$resolution", "$$avgResolution" ] } } }, { $project: { f_id: 1 } } ], as: "higherResolutionSongs" } }, { $unwind: "$higherResolutionSongs" }, { $replaceRoot: { newRoot: "$higherResolutionSongs" } } ])	music_1
db.song.find( { languages: 'english' }, { f_id: 1, genre_is: 1, artist_name: 1 } ).sort({ rating: 1 })	music_1
db.song.find( { languages: "english" }, { f_id: 1, genre_is: 1, artist_name: 1 } ).sort({ rating: 1 })	music_1
db.song.aggregate([ { $match: { genre_is: "pop" } }, { $lookup: { from: "files", localField: "f_id", foreignField: "f_id", as: "files_info" } }, { $unwind: "$files_info" }, { $project: { duration: "$files_info.duration", file_size: "$files_info.file_size", formats: "$files_info.formats" } }, { $sort: { song_name: 1 } } ])	music_1
db.song.aggregate([ { $match: { genre_is: "pop" } }, { $lookup: { from: "files", localField: "f_id", foreignField: "f_id", as: "file_info" } }, { $unwind: "$file_info" }, { $project: { duration: "$file_info.duration", file_size: "$file_info.file_size", formats: "$file_info.formats" } }, { $sort: { song_name: 1 } } ])	music_1
db.song.aggregate([ { $match: { languages: 'english', rating: { $lte: 8 } } }, { $group: { _id: '$artist_name' } }, { $lookup: { from: 'song', let: { artist_name: '$_id' }, pipeline: [ { $match: { $expr: { $and: [ { $gt: ['$rating', 8] }, { $eq: ['$artist_name', '$$artist_name'] } ] } } }, { $project: { artist_name: 1 } } ], as: 'high_rated_songs' } }, { $match: { high_rated_songs: { $eq: [] } } }, { $project: { artist_name: '$_id' } } ])	music_1
db.song.aggregate([ { $match: { languages: 'english', rating: { $not: { $gt: 8 } } } }, { $group: { _id: "$artist_name" } }, { $project: { artist_name: "$_id" } } ])	music_1
db.artist.aggregate([ { $match: { country: 'Bangladesh' } }, { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "songs" } }, { $unwind: "$songs" }, { $match: { "songs.rating": { $lte: 7 } } }, { $group: { _id: "$artist_name", maxRating: { $max: "$songs.rating" } } }, { $match: { maxRating: { $lte: 7 } } }, { $project: { artist_name: "$_id" } } ])	music_1
db.artist.aggregate([ { $match: { country: 'Bangladesh' } }, { $lookup: { from: "song", localField: "artist_name", foreignField: "artist_name", as: "songs" } }, { $match: { "songs.rating": { $not: { $gt: 7 } } } }, { $group: { _id: "$artist_name" } }, { $project: { artist_name: "$_id" } } ])	music_1
db.college.aggregate([ { $lookup: { from: "player_college", localField: "college_id", foreignField: "college_id", as: "player_college" } }, { $project: { name_full: 1, college_id: 1, player_count: { $size: "$player_college" } } }, { $sort: { player_count: -1 } }, { $limit: 1 }, { $project: { name_full: 1, college_id: 1 } } ])	baseball_1
db.college.aggregate([ { $lookup: { from: "player_college", localField: "college_id", foreignField: "college_id", as: "player_college" } }, { $project: { name_full: 1, college_id: 1, player_count: { $size: "$player_college" } } }, { $sort: { player_count: -1 } }, { $limit: 1 }, { $project: { name_full: 1, college_id: 1 } } ])	baseball_1
db.salary.aggregate([ { $lookup: { from: "team", localField: "team_id", foreignField: "team_id_br", as: "team_info" } }, { $match: { "team_info.name": "Boston Red Stockings" } }, { $group: { _id: null, averageSalary: { $avg: "$salary" } } }, { $project: { averageSalary: 1 } } ])	baseball_1
db.salary.aggregate([ { $lookup: { from: "team", localField: "team_id", foreignField: "team_id_br", as: "team_info" } }, { $match: { "team_info.name": "Boston Red Stockings" } }, { $group: { _id: null, averageSalary: { $avg: "$salary" } } }, { $project: { averageSalary: 1 } } ])	baseball_1
db.player.aggregate([ { $lookup: { from: "all_star", localField: "player_id", foreignField: "player_id", as: "all_star_games" } }, { $addFields: { all_star_count: { $size: "$all_star_games" } } }, { $sort: { all_star_count: -1 } }, { $limit: 1 }, { $project: { name_first: 1, name_last: 1, player_id: 1, all_star_count: 1 } } ])	baseball_1
db.player.aggregate([ { $lookup: { from: "all_star", localField: "player_id", foreignField: "player_id", as: "all_star_games" } }, { $project: { name_first: 1, name_last: 1, player_id: 1, all_star_count: { $size: "$all_star_games" } } }, { $sort: { all_star_count: -1 } }, { $limit: 1 } ])	baseball_1
db.player.aggregate([ { $lookup: { from: "manager_award", localField: "player_id", foreignField: "player_id", as: "awards" } }, { $project: { name_first: 1, name_last: 1, player_id: 1 } }, { $sort: { award_count: -1 } }, { $limit: 1 } ])	baseball_1
db.player.aggregate([ { $lookup: { from: "manager_award", localField: "player_id", foreignField: "player_id", as: "awards" } }, { $project: { name_first: 1, name_last: 1, player_id: 1 } }, { $sort: { award_count: -1 } }, { $limit: 1 } ])	baseball_1
db.player.aggregate([ { $lookup: { from: "player_award", localField: "player_id", foreignField: "player_id", as: "awards" } }, { $project: { name_first: 1, name_last: 1, player_id: 1, awardsCount: { $size: "$awards" } } }, { $sort: { awardsCount: -1 } }, { $limit: 3 }, { $project: { name_first: 1, name_last: 1, player_id: 1 } } ])	baseball_1
db.player.aggregate([ { $lookup: { from: "player_award", localField: "player_id", foreignField: "player_id", as: "awards" } }, { $project: { name_first: 1, name_last: 1, player_id: 1} }, { $sort: { award_count: -1 } }, { $limit: 3 } ])	baseball_1
db.team.aggregate([ { $lookup: { from: "salary", localField: "team_id", foreignField: "team_id", as: "team_salary" } }, { $unwind: "$team_salary" }, { $group: { _id: { team_id: "$team_id", name: "$name" }, averageSalary: { $avg: "$team_salary.salary" } } }, { $sort: { averageSalary: 1 } }, { $limit: 1 }, { $project: { team_id: "$_id.team_id", name: "$_id.name" } } ])	baseball_1
db.salary.aggregate([ { $group: { _id: "$team_id", avgSalary: { $avg: "$salary" } } }, { $sort: { avgSalary: 1 } }, { $limit: 1 }, { $lookup: { from: "team", localField: "_id", foreignField: "team_id", as: "teamInfo" } }, { $project: { name: { $arrayElemAt: ["$teamInfo.name", 0] }, team_id: "$_id" } } ])	baseball_1
db.postseason.aggregate([ { $lookup: { from: "team", localField: "team_id_winner", foreignField: "team_id_br", as: "team_info" } }, { $unwind: "$team_info" }, { $match: { "team_info.name": "Boston Red Stockings" } }, { $group: { _id: null, max_wins: { $max: "$wins" } } }, { $project: { max_wins: 1 } } ])	baseball_1
db.postseason.aggregate([ { $lookup: { from: "team", localField: "team_id_winner", foreignField: "team_id_br", as: "team_info" } }, { $unwind: "$team_info" }, { $match: { "team_info.name": "Boston Red Stockings" } }, { $group: { _id: null, max_wins: { $max: "$wins" } } }, { $project: { max_wins: 1 } } ])	baseball_1
db.postseason.aggregate([ { $lookup: { from: "team", localField: "team_id_winner", foreignField: "team_id_br", as: "team_info" } }, { $unwind: "$team_info" }, { $match: { "team_info.name": "Boston Red Stockings" } }, { $group: { _id: "$year", count: { $sum: 1 } } }, { $project: { year: "$_id", count: 1 } } ])	baseball_1
db.postseason.aggregate([ { $lookup: { from: "team", let: { team_id_winner: "$team_id_winner", team_id_loser: "$team_id_loser" }, pipeline: [ { $match: { $expr: { $or: [ { $eq: ["$team_id_br", "$$team_id_winner"] }, { $eq: ["$team_id_br", "$$team_id_loser"] } ] } } }, { $match: { name: "Boston Red Stockings" } } ], as: "team_info" } }, { $unwind: "$team_info" }, { $group: { _id: null, total: { $sum: 1 } } } , { $project: { total: 1} }])	baseball_1
db.salary.aggregate([ { $lookup: { from: "team", localField: "team_id", foreignField: "team_id_br", as: "team_info" } }, { $unwind: "$team_info" }, { $match: { "team_info.name": "Boston Red Stockings", year: 2010 } }, { $group: { _id: null, total_salary: { $sum: "$salary" } } }, { $project: { total_salary: 1 } } ])	baseball_1
db.salary.aggregate([ { $lookup: { from: "team", localField: "team_id", foreignField: "team_id_br", as: "teamInfo" } }, { $unwind: "$teamInfo" }, { $match: { "teamInfo.name": 'Boston Red Stockings', "year": 2000 } }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1 } } ])	baseball_1
db.salary.aggregate([ { $lookup: { from: "team", localField: "team_id", foreignField: "team_id_br", as: "teamInfo" } }, { $unwind: "$teamInfo" }, { $match: { "teamInfo.name": "Boston Red Stockings", "year": 2000 } }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1 } } ])	baseball_1
db.salary.find({year: 2001}, { salary: 1}).sort({salary: -1}).limit(3)	baseball_1
db.salary.find({year: 2001}, {salary: 1}).sort({salary: -1}).limit(3)	baseball_1
db.hall_of_fame.aggregate([ { $group: { _id: "$yearid", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	baseball_1
db.hall_of_fame.aggregate([ { $group: { _id: "$yearid", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { yearid: "$_id" } } ])	baseball_1
db.home_game.aggregate([ { $lookup: { from: "park", localField: "park_id", foreignField: "park_id", as: "park_info" } }, { $match: { "park_info.park_name": "Columbia Park", year: 1907 } }, { $count: "games_played" } ])	baseball_1
db.home_game.aggregate([ { $lookup: { from: "park", localField: "park_id", foreignField: "park_id", as: "park_info" } }, { $match: { year: 1907, "park_info.park_name": "Columbia Park" } }, { $count: "number_of_games" } ])	baseball_1
db.home_game.aggregate([ { $lookup: { from: "park", localField: "park_id", foreignField: "park_id", as: "park_info" } }, { $match: { year: 2000, "park_info.city": "Atlanta" } }, { $count: "games_played" } ])	baseball_1
db.home_game.aggregate([ { $lookup: { from: "park", localField: "park_id", foreignField: "park_id", as: "park_info" } }, { $unwind: "$park_info" }, { $match: { year: 2000, "park_info.city": "Atlanta" } }, { $group: { _id: null, count: { $sum: 1 } } } , { $project: { count: 1 } }])	baseball_1
db.player.aggregate([ { $match: { name_first: "Len", name_last: "Barker" } }, { $lookup: { from: "salary", localField: "player_id", foreignField: "player_id", as: "salary_info" } }, { $unwind: "$salary_info" }, { $match: { "salary_info.year": { $gte: 1985, $lte: 1990 } } }, { $group: { _id: null, totalSalary: { $sum: "$salary_info.salary" } } }, { $project: { totalSalary: 1 } } ])	baseball_1
db.salary.aggregate([ { $lookup: { from: "player", localField: "player_id", foreignField: "player_id", as: "player_info" } }, { $unwind: "$player_info" }, { $match: { "player_info.name_first": "Len", "player_info.name_last": "Barker", "year": { $gte: 1985, $lte: 1990 } } }, { $group: { _id: null, total_salary: { $sum: "$salary" } } }, { $project: { total_salary: 1 } } ])	baseball_1
db.home_game.aggregate([ { $lookup: { from: "team", localField: "team_id", foreignField: "team_id_br", as: "team_info" } }, { $unwind: "$team_info" }, { $match: { "team_info.name": "Boston Red Stockings", year: { $gte: 1990, $lte: 2000 } } }, { $group: { _id: null, totalGamesAttended: { $sum: "$games" } } }, { $project: { totalGamesAttended: 1 } } ])	baseball_1
db.home_game.aggregate([ { $lookup: { from: "team", localField: "team_id", foreignField: "team_id_br", as: "team_info" } }, { $unwind: "$team_info" }, { $match: { year: 1980 } }, { $sort: { attendance: 1 } }, { $limit: 1 }, { $project: { name: "$team_info.name" } } ])	baseball_1
db.park.aggregate([ { $group: { _id: "$state", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { state: "$_id" } } ])	baseball_1
db.park.aggregate([ { $group: { _id: "$state", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { state: "$_id" } } ])	baseball_1
db.park.aggregate([ { $lookup: { from: "home_game", localField: "park_id", foreignField: "park_id", as: "home_games" } }, { $unwind: "$home_games" }, { $match: { "home_games.year": 2008 } }, { $sort: { "home_games.attendance": -1 } }, { $limit: 1 }, { $project: { park_name: 1 } } ])	baseball_1
db.home_game.aggregate([ { $lookup: { from: "park", localField: "park_id", foreignField: "park_id", as: "park_info" } }, { $unwind: "$park_info" }, { $match: { year: 2008 } }, { $sort: { attendance: -1 } }, { $limit: 1 }, { $project: { park_name: "$park_info.park_name" } } ])	baseball_1
db.camera_lens.find({}, {brand: 1, name: 1}).sort({max_aperture: -1})	mountain_photos
db.photos.find({}, { id: 1, color: 1, name: 1 })	mountain_photos
db.mountain.aggregate([ { $group: { _id: null, maxHeight: { $max: "$Height" }, avgHeight: { $avg: "$Height" } } }, { $project: { maxHeight: 1, avgHeight: 1 } } ])	mountain_photos
db.mountain.aggregate([ { $match: { Country: 'Morocco' } }, { $group: { _id: null, averageProminence: { $avg: "$Prominence" } } }, { $project: { averageProminence: 1 } } ])	mountain_photos
db.photos.aggregate([ { $group: { _id: "$mountain_id", count: { $sum: 1 } }}, { $match: { count: { $gte: 2 } }}, { $lookup: { from: "mountain", localField: "_id", foreignField: "id", as: "mountain_info" }}, { $unwind: "$mountain_info" }, { $project: { _id: "$mountain_info.id", name: "$mountain_info.name" }} ])	mountain_photos
db.photos.aggregate([ { $group: { _id: "$camera_lens_id", mountainCount: { $sum: 1 } } }, { $sort: { mountainCount: -1 } }, { $limit: 1 }, { $lookup: { from: "camera_lens", localField: "_id", foreignField: "id", as: "lens" } }, { $unwind: "$lens" }, { $project: { name: "$lens.name" } } ])	mountain_photos
db.camera_lens.aggregate([ { $lookup: { from: "photos", localField: "id", foreignField: "camera_lens_id", as: "photos_taken" } }, { $match: { "photos_taken": { $size: 0 } } }, { $count: "lenses_not_used" } ])	mountain_photos
db.photos.aggregate([ { $lookup: { from: "mountain", localField: "mountain_id", foreignField: "id", as: "mountain_info" } }, { $unwind: "$mountain_info" }, { $match: { "mountain_info.Country": "Ethiopia" } }, { $group: { _id: "$camera_lens_id" } }, { $count: "distinct_camera_lens_count" } ])	mountain_photos
db.camera_lens.aggregate([ { $lookup: { from: "photos", localField: "id", foreignField: "camera_lens_id", as: "photos" } }, { $unwind: "$photos" }, { $lookup: { from: "mountain", localField: "photos.mountain_id", foreignField: "id", as: "mountain" } }, { $unwind: "$mountain" }, { $match: { $or: [{ "mountain.Range": "Toubkal Atlas" }, { "mountain.Range": "Lasta Massif" }] } }, { $group: { _id: "$brand", ranges: { $addToSet: "$mountain.Range" } } }, { $match: { ranges: { $all: ["Toubkal Atlas", "Lasta Massif"] } } }, { $project: { brand: "$_id" } } ])	mountain_photos
db.mountain.aggregate([ { $lookup: { from: "photos", localField: "id", foreignField: "mountain_id", as: "photos" } }, { $lookup: { from: "camera_lens", localField: "photos.camera_lens_id", foreignField: "id", as: "lens" } }, { $match: { "lens.brand": { $ne: "Sigma" } } }, { $group: { _id: "$id", name: { $first: "$name" }, prominence: { $first: "$Prominence" } } }, { $project: { name: 1, prominence: 1 } } ])	mountain_photos
db.camera_lens.find({name: {$regex: /Digital/}}, { name: 1})	mountain_photos
db.channel.find({Owner: {$ne: 'CCTV'}}, { Name: 1})	program_share
db.channel.find({Owner: {$ne: 'CCTV'}}, {Name: 1})	program_share
db.channel.find({}, { Name: 1}).sort({Rating_in_percent: -1})	program_share
db.channel.find({}, { Name: 1}).sort({Rating_in_percent: -1})	program_share
db.channel.find({}, { Owner: 1}).sort({Rating_in_percent: -1}).limit(1)	program_share
db.channel.find({}, { Owner: 1}).sort({Rating_in_percent: -1}).limit(1)	program_share
db.program.aggregate([ { $sort: { "Launch": 1 } }, { $project: { "_id": 0, "Name": 1 } } ])	program_share
db.program.aggregate([ { $lookup: { from: "broadcast", localField: "Program_ID", foreignField: "Program_ID", as: "broadcast_info" } }, { $lookup: { from: "broadcast_share", localField: "Program_ID", foreignField: "Program_ID", as: "broadcast_share_info" } }, { $sort: { "launch": 1 } }, { $project: { "_id": 0, "Name": 1 } } ])	program_share
db.program.aggregate([ { $lookup: { from: "broadcast", localField: "Program_ID", foreignField: "Program_ID", as: "broadcast_info" } }, { $lookup: { from: "broadcast_share", localField: "Program_ID", foreignField: "Program_ID", as: "broadcast_share_info" } }, { $project: { Name: 1, Origin: 1, Owner: 1 } } ])	program_share
db.program.find({}, { Name: 1, Origin: 1, Owner: 1 })	program_share
db.program.aggregate([ { $sort: { "Launch": -1 } }, { $limit: 1 }, { $project: { "_id": 0, "Name": 1 } } ])	program_share
db.program.aggregate([ { $sort: { Launch: -1 } }, { $limit: 1 }, { $project: { Name: 1 } } ])	program_share
db.channel.aggregate([ { $lookup: { from: "broadcast", localField: "Channel_ID", foreignField: "Channel_ID", as: "broadcast_info" } }, { $unwind: "$broadcast_info" }, { $match: { "broadcast_info.Time_of_day": "Morning" } }, { $project: { Name: 1 } } ])	program_share
db.channel.aggregate([ { $lookup: { from: "broadcast", localField: "Channel_ID", foreignField: "Channel_ID", as: "broadcast_info" } }, { $unwind: "$broadcast_info" }, { $match: { "broadcast_info.Time_of_day": "Morning" } }, { $project: { Name: 1 } } ])	program_share
db.channel.aggregate([ { $lookup: { from: "broadcast", localField: "Channel_ID", foreignField: "Channel_ID", as: "broadcast_docs" } }, { $unwind: "$broadcast_docs" }, { $match: { $or: [ { "broadcast_docs.Time_of_day": "Morning" }, { "broadcast_docs.Time_of_day": "Night" } ] } }, { $group: { _id: "$Name", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Name: "$_id" } } ])	program_share
db.channel.aggregate([ { $lookup: { from: "broadcast", localField: "Channel_ID", foreignField: "Channel_ID", as: "broadcast_docs" } }, { $match: { $and: [ { "broadcast_docs.Time_of_day": "Morning" }, { "broadcast_docs.Time_of_day": "Night" } ] } }, { $project: { Name: 1 } } ])	program_share
db.broadcast.aggregate([ { $group: { _id: "$Time_of_day", count: { $sum: 1 } } } ])	program_share
db.broadcast.aggregate([ { $group: { _id: "$Time_of_day", count: { $sum: 1 } } }, { $project: { time_of_day: "$_id", count: 1 } } ])	program_share
db.broadcast.aggregate([ { $match: { Time_of_day: 'Night' } }, { $group: { _id: "$Program_ID" } }, { $count: "distinct_program_count" } ])	program_share
db.broadcast.aggregate([ { $match: { Time_of_day: 'Night' } }, { $group: { _id: "$Program_ID" } }, { $count: "distinct_program_count" } ])	program_share
db.program.aggregate([ { $lookup: { from: "broadcast", localField: "Program_ID", foreignField: "Program_ID", as: "broadcast_info" } }, { $match: { "broadcast_info.Time_of_day": { $ne: "Morning" } } }, { $project: { Name: 1 } } ])	program_share
db.program.aggregate([ { $lookup: { from: "broadcast", localField: "Program_ID", foreignField: "Program_ID", as: "broadcast_info" } }, { $match: { "broadcast_info.Time_of_day": { $ne: "Morning" } } }, { $project: { Name: 1 } } ])	program_share
db.program.aggregate([ { $lookup: { from: "broadcast", localField: "Program_ID", foreignField: "Program_ID", as: "broadcast_docs" } }, { $unwind: "$broadcast_docs" }, { $match: { $or: [ { "broadcast_docs.Time_of_day": "Morning" }, { "broadcast_docs.Time_of_day": "Night" } ] } }, { $group: { _id: "$Owner", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { owner: "$_id" } } ])	program_share
db.program.aggregate([ { $lookup: { from: "broadcast", localField: "Program_ID", foreignField: "Program_ID", as: "broadcasts" } }, { $match: { "broadcasts.Time_of_day": { $all: ["Morning", "Night"] } } }, { $group: { _id: "$Owner" } }, { $project: { owner: "$_id" } } ])	program_share
db.program.find({}, { Origin: 1 }).sort({ Origin: 1 })	program_share
db.program.find({}, { Origin: 1 }).sort({ Origin: 1 })	program_share
db.channel.aggregate([ { $group: { _id: "$Owner" } }, { $count: "distinct_owners" } ])	program_share
db.program.find({ "Origin": { $ne: "Beijing" } }, { "Name": 1, "_id": 0 })	program_share
db.program.find({ Origin: { $ne: 'Beijing' }}, { Name: 1 })	program_share
db.channel.find({"Owner": {"$in": ["CCTV", "HBS"]}}, {"Name": 1, "_id": 0})	program_share
db.channel.find({"Owner": {"$in": ["CCTV", "HBS"]}}, {"Name": 1, "_id": 0})	program_share
db.program.aggregate([ { $lookup: { from: "broadcast", localField: "Program_ID", foreignField: "Program_ID", as: "broadcast_docs" } }, { $unwind: "$broadcast_docs" }, { $group: { _id: "$Program_ID", name: { $first: "$Name" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { name: 1 } } ])	program_share
db.Courses.find({course_name: 'database'}, {course_description: 1})	e_learning
db.Courses.find({course_name: 'database'}, {course_description: 1})	e_learning
db.Course_Authors_and_Tutors.find({ personal_name: 'Cathrine' }, { address_line_1: 1 })	e_learning
db.Course_Authors_and_Tutors.find({personal_name: 'Cathrine'}, {address_line_1: 1})	e_learning
db.Course_Authors_and_Tutors.find({}, {address_line_1: 1})	e_learning
db.Course_Authors_and_Tutors.find({}, {address_line_1: 1})	e_learning
db.Course_Authors_and_Tutors.find({}, {login_name: 1, family_name: 1})	e_learning
db.Course_Authors_and_Tutors.find({}, {login_name: 1, family_name: 1})	e_learning
db.Students.find({family_name: 'Ward'}, {login_name: 1})	e_learning
db.Students.find({family_name: 'Ward'}, {login_name: 1})	e_learning
db.Subjects.find({}, { subject_name: 1})	e_learning
db.Subjects.find({}, { subject_name: 1})	e_learning
db.Course_Authors_and_Tutors.find().sort({personal_name: 1})	e_learning
db.Course_Authors_and_Tutors.find({}).sort({personal_name: 1})	e_learning
db.Students.find({}, {personal_name: 1, family_name: 1}).sort({family_name: 1})	e_learning
db.Students.find({}, { personal_name: 1, family_name: 1}).sort({family_name: 1})	e_learning
db.Student_Tests_Taken.aggregate([ { $group: { _id: "$test_result", count: { $sum: 1 } } }, { $sort: { count: -1 } } ])	e_learning
db.Student_Tests_Taken.aggregate([ { $group: { _id: "$test_result", count: { $sum: 1 } } }, { $sort: { count: -1 } } ])	e_learning
db.Course_Authors_and_Tutors.aggregate([ { $lookup: { from: "Courses", localField: "author_id", foreignField: "author_id", as: "course_info" } }, { $unwind: "$course_info" }, { $match: { "course_info.course_name": "advanced database" } }, { $project: { "_id": 0, "login_name": 1 } } ])	e_learning
db.Course_Authors_and_Tutors.aggregate([ { $lookup: { from: "Courses", localField: "author_id", foreignField: "author_id", as: "course_info" } }, { $unwind: "$course_info" }, { $match: { "course_info.course_name": "advanced database" } }, { $project: { login_name: 1 } } ])	e_learning
db.Course_Authors_and_Tutors.aggregate([ { $lookup: { from: "Courses", localField: "author_id", foreignField: "author_id", as: "courses" } }, { $match: { "courses.course_name": { $in: ["operating system", "data structure"] } } }, { $project: { address_line_1: 1 } } ])	e_learning
db.Course_Authors_and_Tutors.aggregate([ { $lookup: { from: "Courses", localField: "author_id", foreignField: "author_id", as: "courses" } }, { $match: { "courses.course_name": { $in: ["operating system", "data structure"] } } }, { $project: { address_line_1: 1 } } ])	e_learning
db.Course_Authors_and_Tutors.aggregate([ { $lookup: { from: "Courses", localField: "author_id", foreignField: "author_id", as: "courses" } }, { $match: { "courses.1": { $exists: true } } }, { $project: { address_line_1: 1, author_id: 1 } } ])	e_learning
db.Course_Authors_and_Tutors.aggregate([ { $lookup: { from: "Courses", localField: "author_id", foreignField: "author_id", as: "courses" } }, { $match: { "courses.1": { $exists: true } } }, { $project: { address_line_1: 1, author_id: 1 } } ])	e_learning
db.Course_Authors_and_Tutors.aggregate([ { $match: { personal_name: "Julio" } }, { $lookup: { from: "Courses", localField: "author_id", foreignField: "author_id", as: "courses" } }, { $unwind: "$courses" }, { $project: { course_name: "$courses.course_name" } } ])	e_learning
db.Course_Authors_and_Tutors.aggregate([ { $match: { personal_name: "Julio" } }, { $lookup: { from: "Courses", localField: "author_id", foreignField: "author_id", as: "courses" } }, { $unwind: "$courses" }, { $project: { course_name: "$courses.course_name" } } ])	e_learning
db.Courses.aggregate([ { $lookup: { from: "Subjects", localField: "subject_id", foreignField: "subject_id", as: "subject_info" } }, { $match: { "subject_info.subject_name": "Computer Science" } }, { $project: { course_name: 1, course_description: 1 } } ])	e_learning
db.Courses.aggregate([ { $lookup: { from: "Subjects", localField: "subject_id", foreignField: "subject_id", as: "subject_info" } }, { $match: { "subject_info.subject_name": "Computer Science" } }, { $project: { course_name: 1, course_description: 1 } } ])	e_learning
db.Courses.aggregate([ { $lookup: { from: "Subjects", localField: "subject_id", foreignField: "subject_id", as: "subject_info" } }, { $unwind: "$subject_info" }, { $group: { _id: "$subject_id", subject_name: { $first: "$subject_info.subject_name" }, count: { $sum: 1 } } }, { $project: { subject_id: "$_id", subject_name: 1, count: 1 } } ])	e_learning
db.Courses.aggregate([ { $lookup: { from: "Subjects", localField: "subject_id", foreignField: "subject_id", as: "subject_info" } }, { $unwind: "$subject_info" }, { $group: { _id: "$subject_id", subject_name: { $first: "$subject_info.subject_name" }, count: { $sum: 1 } } }, { $project: { subject_id: "$_id", subject_name: 1, count: 1 } } ])	e_learning
db.Courses.aggregate([ { $lookup: { from: "Subjects", localField: "subject_id", foreignField: "subject_id", as: "subject_info" } }, { $unwind: "$subject_info" }, { $group: { _id: "$subject_id", subject_name: { $first: "$subject_info.subject_name" }, count: { $sum: 1 } } }, { $project: { subject_id: "$_id", subject_name: 1, count: 1 } }, { $sort: { count: 1 } } ])	e_learning
db.Courses.aggregate([ { $lookup: { from: "Subjects", localField: "subject_id", foreignField: "subject_id", as: "subject_info" } }, { $unwind: "$subject_info" }, { $group: { _id: "$subject_id", subject_name: { $first: "$subject_info.subject_name" }, count: { $sum: 1 } } }, { $project: { subject_id: "$_id", subject_name: 1, count: 1 } }, { $sort: { count: 1 } } ])	e_learning
db.Courses.aggregate([ { $lookup: { from: "Student_Course_Enrolment", localField: "course_id", foreignField: "course_id", as: "enrollment" } }, { $project: { course_name: 1 } }, { $sort: { enrollmentCount: -1 } }, { $limit: 1 } ])	e_learning
db.Courses.aggregate([ { $lookup: { from: "Student_Course_Enrolment", localField: "course_id", foreignField: "course_id", as: "enrollment" } }, { $project: { course_name: 1} }, { $sort: { count: -1 } }, { $limit: 1 } ])	e_learning
db.Courses.aggregate([ { $lookup: { from: "Student_Course_Enrolment", localField: "course_id", foreignField: "course_id", as: "enrolments" } }, { $project: { course_name: 1, enrolmentCount: { $size: "$enrolments" } } }, { $match: { enrolmentCount: 1 } }, { $project: { course_name: 1 } } ])	e_learning
db.Student_Course_Enrolment.aggregate([ { $group: { _id: "$course_id", count: { $sum: 1 } } }, { $match: { count: 1 } }, { $lookup: { from: "Courses", localField: "_id", foreignField: "course_id", as: "courseDetails" } }, { $unwind: "$courseDetails" }, { $project: { course_name: "$courseDetails.course_name" } } ])	e_learning
db.Courses.aggregate([ { $lookup: { from: "Student_Course_Enrolment", localField: "course_id", foreignField: "course_id", as: "enrolments" } }, { $match: { "enrolments.2": { $exists: true } } }, { $project: { course_description: 1, course_name: 1 } } ])	e_learning
db.Courses.aggregate([ { $lookup: { from: "Student_Course_Enrolment", localField: "course_id", foreignField: "course_id", as: "enrollments" } }, { $project: { course_description: 1, course_name: 1, numberOfEnrollments: { $size: "$enrollments" } } }, { $match: { numberOfEnrollments: { $gt: 2 } } }, { $project: { course_description: 1, course_name: 1 } } ])	e_learning
db.Student_Course_Enrolment.aggregate([ { $lookup: { from: "Courses", localField: "course_id", foreignField: "course_id", as: "course_info" } }, { $unwind: "$course_info" }, { $group: { _id: "$course_info.course_name", numberOfEnrollments: { $sum: 1 } } }, { $project: { course_name: "$_id", numberOfEnrollments: 1 } } ])	e_learning
db.Student_Course_Enrolment.aggregate([ { $lookup: { from: "Students", localField: "student_id", foreignField: "student_id", as: "student_info" } }, { $unwind: "$student_info" }, { $group: { _id: "$student_id", login_name: { $first: "$student_info.login_name" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { student_id: "$_id", login_name: 1 } } ])	e_learning
db.Student_Course_Enrolment.aggregate([ { $group: { _id: "$student_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Students", localField: "_id", foreignField: "student_id", as: "student_info" } }, { $project: { student_id: "$_id", login_name: { $arrayElemAt: ["$student_info.login_name", 0] } } } ])	e_learning
db.Student_Course_Enrolment.aggregate([ { $lookup: { from: "Students", localField: "student_id", foreignField: "student_id", as: "student_info" } }, { $unwind: "$student_info" }, { $group: { _id: "$student_id", personal_name: { $first: "$student_info.personal_name" }, count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { student_id: "$_id", personal_name: 1 } } ])	e_learning
db.Student_Course_Enrolment.aggregate([ { $lookup: { from: "Students", localField: "student_id", foreignField: "student_id", as: "student_info" } }, { $unwind: "$student_info" }, { $group: { _id: "$student_id", personal_name: { $first: "$student_info.personal_name" }, count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { student_id: "$_id", personal_name: 1 } } ])	e_learning
db.Student_Course_Enrolment.aggregate([ { $lookup: { from: "Students", localField: "student_id", foreignField: "student_id", as: "student_info" } }, { $unwind: "$student_info" }, { $group: { _id: "$student_id", middle_name: { $first: "$student_info.middle_name" }, count: { $sum: 1 } } }, { $match: { count: { $lte: 2 } } }, { $project: { student_id: "$_id", middle_name: 1 } } ])	e_learning
db.Student_Course_Enrolment.aggregate([ { $group: { _id: "$student_id", count: { $sum: 1 } } }, { $match: { count: { $lte: 2 } } }, { $lookup: { from: "Students", localField: "_id", foreignField: "student_id", as: "student_info" } }, { $project: { student_id: "$_id", middle_name: { $arrayElemAt: ["$student_info.middle_name", 0] } } } ])	e_learning
db.Students.aggregate([ { $lookup: { from: "Student_Course_Enrolment", localField: "student_id", foreignField: "student_id", as: "enrollment" } }, { $match: { "enrollment": { $size: 0 } } }, { $project: { personal_name: 1 } } ])	e_learning
db.Students.aggregate([ { $lookup: { from: "Student_Course_Enrolment", localField: "student_id", foreignField: "student_id", as: "enrollment" } }, { $match: { "enrollment": { $size: 0 } } }, { $project: { personal_name: 1 } } ])	e_learning
db.Students.aggregate([ { $lookup: { from: "Student_Course_Enrolment", localField: "student_id", foreignField: "student_id", as: "enrolments" } }, { $match: { enrolments: { $size: 0 } } }, { $count: "students_without_enrolment" } ])	e_learning
db.Students.aggregate([ { $lookup: { from: "Student_Course_Enrolment", localField: "student_id", foreignField: "student_id", as: "enrolments" } }, { $match: { enrolments: { $size: 0 } } }, { $count: "studentsWithoutEnrolment" } ])	e_learning
db.Customers.aggregate([ { $lookup: { from: "Customer_Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "policies" } }, { $match: { "policies.1": { $exists: true } } }, { $lookup: { from: "Claims", localField: "policies.Policy_ID", foreignField: "Policy_ID", as: "claims" } }, { $match: { "claims": { $size: 0 } } }, { $project: { Customer_Details: 1, Customer_ID: 1 } } ])	insurance_policies
db.Payments.find({}, {Payment_Method_Code: 1, Date_Payment_Made: 1, Amount_Payment: 1}).sort({Date_Payment_Made: 1})	insurance_policies
db.Payments.find({}, {Payment_Method_Code: 1, Date_Payment_Made: 1, Amount_Payment: 1}).sort({Date_Payment_Made: 1})	insurance_policies
db.Claims.aggregate([ { $sort: { Amount_Claimed: -1 } }, { $limit: 1 }, { $project: { Amount_Settled: 1, Amount_Claimed: 1 } } ])	insurance_policies
db.Claims.aggregate([ { $sort: { Amount_Claimed: -1 } }, { $limit: 1 }, { $project: { Amount_Settled: 1, Amount_Claimed: 1 } } ])	insurance_policies
db.Claims.find({}, { Amount_Settled: 1, Amount_Claimed: 1 }).sort({ Amount_Settled: 1 }).limit(1)	insurance_policies
db.Claims.aggregate([ { $sort: { Amount_Settled: 1 } }, { $limit: 1 }, { $project: { Amount_Settled: 1, Amount_Claimed: 1 } } ])	insurance_policies
db.Claims.aggregate([ { $group: { _id: null, averageAmountClaimed: { $avg: "$Amount_Claimed" } } }, { $lookup: { from: "Claims", let: { averageAmountClaimed: "$averageAmountClaimed" }, pipeline: [ { $match: { $expr: { $gt: ["$Amount_Claimed", "$$averageAmountClaimed"] } } }, { $project: { Date_Claim_Made: 1, Date_Claim_Settled: 1 } } ], as: "claims_above_average" } }, { $unwind: "$claims_above_average" }, { $replaceRoot: { newRoot: "$claims_above_average" } } ])	insurance_policies
db.Claims.aggregate([ { $group: { _id: null, averageAmountClaimed: { $avg: "$Amount_Claimed" } } }, { $lookup: { from: "Claims", let: { avgAmountClaimed: "$averageAmountClaimed" }, pipeline: [ { $match: { $expr: { $gt: ["$Amount_Claimed", "$$avgAmountClaimed"] } } }, { $project: { Date_Claim_Made: 1, Date_Claim_Settled: 1 } } ], as: "claimsAboveAverage" } }, { $unwind: "$claimsAboveAverage" }, { $replaceRoot: { newRoot: "$claimsAboveAverage" } } ])	insurance_policies
db.Claims.aggregate([ { $match: { Amount_Settled: { $lte: db.Claims.aggregate([ { $group: { _id: null, average: { $avg: "$Amount_Settled" } } } ]).toArray()[0].average } } }, { $project: { Date_Claim_Made: 1 } } ])	insurance_policies
db.Claims.aggregate([ { $lookup: { from: "Settlements", localField: "Claim_ID", foreignField: "Claim_ID", as: "Settlements" } }, { $project: { Claim_ID: 1, Date_Claim_Made: 1, NumberOfSettlements: { $size: "$Settlements" } } }, { $sort: { NumberOfSettlements: -1 } }, { $limit: 1 } ])	insurance_policies
db.Claims.aggregate([ { $lookup: { from: "Settlements", localField: "Claim_ID", foreignField: "Claim_ID", as: "Settlements" } }, { $unwind: "$Settlements" }, { $group: { _id: { Claim_ID: "$Claim_ID", Date_Claim_Made: "$Date_Claim_Made" }, SettlementCount: { $sum: 1 } } }, { $sort: { SettlementCount: -1 } }, { $limit: 1 }, { $project: { Claim_ID: "$_id.Claim_ID", Date_Claim_Made: "$_id.Date_Claim_Made", Count: "$SettlementCount" } } ])	insurance_policies
db.Claims.aggregate([ { $lookup: { from: "Settlements", localField: "Claim_ID", foreignField: "Claim_ID", as: "Settlements" } }, { $unwind: "$Settlements" }, { $group: { _id: "$Claim_ID", Count: { $sum: 1 }, LatestSettlementDate: { $max: "$Date_Claim_Settled" } } }, { $sort: { LatestSettlementDate: -1 } }, { $limit: 1 }, { $project: { Claim_ID: "$_id", Number_of_Settlements: "$Count" } } ])	insurance_policies
db.Claims.find({}, {Date_Claim_Made: 1}).sort({Date_Claim_Made: 1}).limit(1)	insurance_policies
db.Claims.find({}, {Date_Claim_Made: 1}).sort({Date_Claim_Made: 1}).limit(1)	insurance_policies
db.Settlements.aggregate([ { $group: { _id: null, totalAmountSettled: { $sum: "$Amount_Settled" } } } , { $project: { totalAmountSettled: 1 } }])	insurance_policies
db.Settlements.aggregate([ { $group: { _id: null, totalAmountSettled: { $sum: "$Amount_Settled" } } } , { $project: { totalAmountSettled: 1 } }])	insurance_policies
db.Customers.aggregate([ { $lookup: { from: "Customer_Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "policies" } }, { $match: { "policies.1": { $exists: true } } }, { $project: { Customer_ID: 1, Customer_Details: 1 } } ])	insurance_policies
db.Customers.aggregate([ { $lookup: { from: "Customer_Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "policies" } }, { $match: { "policies.1": { $exists: true } } }, { $project: { Customer_ID: 1, Customer_Details: 1 } } ])	insurance_policies
db.Settlements.find({}, { Date_Claim_Made: 1, Date_Claim_Settled: 1 })	insurance_policies
db.Settlements.find({}, { Date_Claim_Made: 1, Date_Claim_Settled: 1 })	insurance_policies
db.Payments.aggregate([ { $group: { _id: "$Payment_Method_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { Payment_Method_Code: "$_id" } }])	insurance_policies
db.Payments.aggregate([ { $group: { _id: "$Payment_Method_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { Payment_Method_Code: "$_id" } }])	insurance_policies
db.Payments.aggregate([ { $group: { _id: "$Payment_Method_Code", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { Payment_Method_Code: "$_id" } } ])	insurance_policies
db.Payments.aggregate([ { $group: { _id: "$Payment_Method_Code", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { Payment_Method_Code: "$_id" } } ])	insurance_policies
db.Payments.aggregate([ { $group: { _id: null, totalAmountPayment: { $sum: "$Amount_Payment" } } } , { $project: { totalAmountPayment: 1 } }])	insurance_policies
db.Payments.aggregate([ { $group: { _id: null, totalAmount: { $sum: "$Amount_Payment" } } }, { $project: { totalAmount: 1 } } ])	insurance_policies
db.Customer_Policies.aggregate([ { $group: { _id: "$Policy_Type_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { Policy_Type_Code: "$_id" } }])	insurance_policies
db.Customer_Policies.aggregate([ { $group: { _id: "$Policy_Type_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { Policy_Type_Code: "$_id" } }])	insurance_policies
db.Payments.find({Payment_Method_Code: 'Visa'}, {Payment_ID: 1, Date_Payment_Made: 1, Amount_Payment: 1})	insurance_policies
db.Payments.find( { Payment_Method_Code: 'Visa' }, { Payment_ID: 1, Date_Payment_Made: 1, Amount_Payment: 1 } )	insurance_policies
db.Customers.aggregate([ { $lookup: { from: "Customer_Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "policies" } }, { $match: { "policies": { $size: 0 } } }, { $project: { Customer_Details: 1 } } ])	insurance_policies
db.Customers.aggregate([ { $lookup: { from: "Customer_Policies", localField: "Customer_ID", foreignField: "Customer_ID", as: "Policies" } }, { $match: { "Policies": { $size: 0 } } }, { $project: { Customer_Details: 1 } } ])	insurance_policies
db.Claims.aggregate([ { $group: { _id: null, totalClaimedAmount: { $sum: "$Amount_Claimed" } } } , { $project: { totalClaimedAmount: 1 } }])	insurance_policies
db.Claims.aggregate([ { $group: { _id: null, totalClaimedAmount: { $sum: "$Amount_Claimed" } } } , { $project: { totalClaimedAmount: 1 } }])	insurance_policies
db.Affiliated_With.aggregate([ { $group: { _id: "$Department", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Department", localField: "_id", foreignField: "DepartmentID", as: "department_info" } }, { $unwind: "$department_info" }, { $project: { name: "$department_info.Name" } } ])	hospital_1
db.Affiliated_With.aggregate([ { $group: { _id: "$Department", numEmployees: { $sum: 1 } } }, { $sort: { numEmployees: -1 } }, { $limit: 1 }, { $lookup: { from: "Department", localField: "_id", foreignField: "DepartmentID", as: "department_info" } }, { $unwind: "$department_info" }, { $project: { name: "$department_info.Name" } } ])	hospital_1
db.Appointment.aggregate([ { $lookup: { from: "Patient", localField: "Patient", foreignField: "SSN", as: "patient_info" } }, { $unwind: "$patient_info" }, { $project: { Name: "$patient_info.Name" } } ])	hospital_1
db.Appointment.aggregate([ { $group: { _id: "$Patient", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $lookup: { from: "Patient", localField: "_id", foreignField: "SSN", as: "patient_info" } }, { $unwind: "$patient_info" }, { $project: { name: "$patient_info.Name", phone: "$patient_info.Phone" } } ])	hospital_1
db.Appointment.aggregate([ { $lookup: { from: "Patient", localField: "Patient", foreignField: "SSN", as: "patient_info" } }, { $unwind: "$patient_info" }, { $group: { _id: "$Patient", name: { $first: "$patient_info.Name" }, phone: { $first: "$patient_info.Phone" }, count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { name: 1, phone: 1 } } ])	hospital_1
db.Appointment.find({}, { AppointmentID: 1 }).sort({ Start: -1 }).limit(1)	hospital_1
db.Appointment.find({}, {AppointmentID: 1}).sort({Start: -1}).limit(1)	hospital_1
db.Appointment.aggregate([ { $lookup: { from: "Physician", localField: "Physician", foreignField: "EmployeeID", as: "physician_info" } }, { $unwind: "$physician_info" }, { $project: { name: "$physician_info.Name" } } ])	hospital_1
db.Appointment.aggregate([ { $lookup: { from: "Physician", localField: "Physician", foreignField: "EmployeeID", as: "physician_info" } }, { $unwind: "$physician_info" }, { $project: { name: "$physician_info.Name" } } ])	hospital_1
db.Physician.aggregate([ { $lookup: { from: "Appointment", localField: "EmployeeID", foreignField: "Physician", as: "appointments" } }, { $match: { appointments: { $size: 0 } } }, { $project: { Name: 1 } } ])	hospital_1
db.Patient.aggregate([ { $lookup: { from: "Prescribes", localField: "SSN", foreignField: "Patient", as: "prescribes" } }, { $unwind: "$prescribes" }, { $lookup: { from: "Physician", localField: "prescribes.Physician", foreignField: "EmployeeID", as: "physician" } }, { $unwind: "$physician" }, { $match: { "physician.Name": "John Dorian" } }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1} } ])	hospital_1
db.Patient.aggregate([ { $lookup: { from: "Prescribes", localField: "SSN", foreignField: "Patient", as: "prescribes" } }, { $unwind: "$prescribes" }, { $lookup: { from: "Physician", localField: "prescribes.Physician", foreignField: "EmployeeID", as: "physician" } }, { $unwind: "$physician" }, { $match: { "physician.Name": "John Dorian" } }, { $group: { _id: null, count: { $sum: 1 } } } , { $project: { count: 1 } }])	hospital_1
db.Stay.aggregate([ { $match: { Room: 111 } }, { $lookup: { from: "Patient", localField: "Patient", foreignField: "SSN", as: "patient_info" } }, { $unwind: "$patient_info" }, { $lookup: { from: "Prescribes", localField: "patient_info.SSN", foreignField: "Patient", as: "prescribes_info" } }, { $unwind: "$prescribes_info" }, { $lookup: { from: "Medication", localField: "prescribes_info.Medication", foreignField: "Code", as: "medication_info" } }, { $unwind: "$medication_info" }, { $project: { MedicationName: "$medication_info.Name" } } ])	hospital_1
db.Nurse.aggregate([ { $lookup: { from: "Appointment", localField: "EmployeeID", foreignField: "PrepNurse", as: "appointments" } }, { $project: { Name: 1} }, { $sort: { count: -1 } }, { $limit: 1 } ])	hospital_1
db.Appointment.aggregate([ { $group: { _id: "$PrepNurse", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Nurse", localField: "_id", foreignField: "EmployeeID", as: "nurse_info" } }, { $unwind: "$nurse_info" }, { $project: { name: "$nurse_info.Name" } } ])	hospital_1
db.Physician.aggregate([ { $lookup: { from: "Patient", localField: "EmployeeID", foreignField: "PCP", as: "patients" } }, { $match: { "patients.1": { $exists: true } } }, { $project: { Name: 1 } } ])	hospital_1
db.Physician.aggregate([ { $lookup: { from: "Patient", localField: "EmployeeID", foreignField: "PCP", as: "patients" } }, { $match: { "patients.1": { $exists: true } } }, { $project: { Name: 1 } } ])	hospital_1
db.Room.aggregate([ { $group: { _id: "$BlockFloor", NumberOfRooms: { $sum: 1 } }} ])	hospital_1
db.Room.aggregate([ { $group: { _id: "$BlockFloor", NumberOfRooms: { $sum: 1 } } }, { $project: { BlockFloor: "$_id", NumberOfRooms: 1 } } ])	hospital_1
db.Room.aggregate([ { $group: { _id: "$BlockCode", NumberOfRooms: { $sum: 1 } } }, { $project: { BlockCode: "$_id", NumberOfRooms: 1 } } ])	hospital_1
db.Room.aggregate([ { $group: { _id: "$BlockCode", count: { $sum: 1 } } } ])	hospital_1
db.Physician.aggregate([ { $lookup: { from: "Prescribes", localField: "EmployeeID", foreignField: "Physician", as: "prescribes" } }, { $unwind: "$prescribes" }, { $lookup: { from: "Medication", localField: "prescribes.Medication", foreignField: "Code", as: "medication" } }, { $unwind: "$medication" }, { $match: { "medication.Brand": "X" } }, { $project: { Name: 1, Position: 1 } } ])	hospital_1
db.Physician.find({ Position: /senior/i }, { Name: 1 })	hospital_1
db.Physician.find({ Position: { $regex: /senior/i } }, { Name: 1 })	hospital_1
db.Undergoes.aggregate([ { $lookup: { from: "Nurse", localField: "AssistingNurse", foreignField: "EmployeeID", as: "nurse_details" } }, { $match: { "nurse_details": { $ne: [] } } }, { $project: { "nurse_details.Name": 1 } }, { $unwind: "$nurse_details" }, { $group: { _id: "$nurse_details.Name" } } ])	hospital_1
db.Physician.aggregate([ { $lookup: { from: "Prescribes", localField: "EmployeeID", foreignField: "Physician", as: "prescribes" } }, { $unwind: "$prescribes" }, { $sort: { "prescribes.Dose": -1 } }, { $limit: 1 }, { $project: { Name: 1 } } ])	hospital_1
db.Affiliated_With.aggregate([ { $match: { PrimaryAffiliation: 1 } }, { $lookup: { from: "Department", localField: "Department", foreignField: "DepartmentID", as: "department_info" } }, { $unwind: "$department_info" }, { $group: { _id: "$department_info.Name" } }, { $project: { Name: "$_id" } } ])	hospital_1
db.On_Call.find({BlockFloor: 1, BlockCode: 1}, {Nurse: 1})	hospital_1
db.Procedures.aggregate([ { $group: { _id: null, maxCost: { $max: "$Cost" }, minCost: { $min: "$Cost" }, avgCost: { $avg: "$Cost" } } }, { $project: { maxCost: 1, minCost:1, avgCost:1 } } ])	hospital_1
db.Procedures.aggregate([ { $group: { _id: null, maxCost: { $max: "$Cost" }, minCost: { $min: "$Cost" }, avgCost: { $avg: "$Cost" } } }, { $project: { maxCost: 1, minCost:1, avgCost:1 } } ])	hospital_1
db.Procedures.find({}, { Name: 1, Cost: 1}).sort({Cost: -1})	hospital_1
db.Physician.aggregate([ { $lookup: { from: "Trained_In", localField: "EmployeeID", foreignField: "Physician", as: "trained_in" } }, { $unwind: "$trained_in" }, { $lookup: { from: "Procedures", localField: "trained_in.Treatment", foreignField: "Code", as: "procedures" } }, { $unwind: "$procedures" }, { $match: { "procedures.Cost": { $gt: 5000 } } }, { $project: { Name: 1 } } ])	hospital_1
db.Physician.aggregate([ { $lookup: { from: "Trained_In", localField: "EmployeeID", foreignField: "Physician", as: "TrainingInfo" } }, { $unwind: "$TrainingInfo" }, { $lookup: { from: "Procedures", localField: "TrainingInfo.Treatment", foreignField: "Code", as: "ProcedureInfo" } }, { $unwind: "$ProcedureInfo" }, { $sort: { "ProcedureInfo.Cost": -1 } }, { $project: { Name: 1 } }, { $limit: 1 } ])	hospital_1
db.Physician.aggregate([ { $lookup: { from: "Trained_In", localField: "EmployeeID", foreignField: "Physician", as: "Training" } }, { $unwind: "$Training" }, { $lookup: { from: "Procedures", localField: "Training.Treatment", foreignField: "Code", as: "ProcedureInfo" } }, { $unwind: "$ProcedureInfo" }, { $sort: { "ProcedureInfo.Cost": -1 } }, { $limit: 1 }, { $project: { Name: 1 } } ])	hospital_1
db.Physician.aggregate([ { $match: { Name: "John Wen" } }, { $lookup: { from: "Trained_In", localField: "EmployeeID", foreignField: "Physician", as: "trained_in_docs" } }, { $unwind: "$trained_in_docs" }, { $lookup: { from: "Procedures", localField: "trained_in_docs.Treatment", foreignField: "Code", as: "procedures_docs" } }, { $unwind: "$procedures_docs" }, { $group: { _id: null, avgCost: { $avg: "$procedures_docs.Cost" } } }, { $project: { avgCost: 1 } } ])	hospital_1
db.Physician.aggregate([ { $match: { "Name": "John Wen" } }, { $lookup: { from: "Trained_In", localField: "EmployeeID", foreignField: "Physician", as: "trained_in_docs" } }, { $unwind: "$trained_in_docs" }, { $lookup: { from: "Procedures", localField: "trained_in_docs.Treatment", foreignField: "Code", as: "procedures_docs" } }, { $unwind: "$procedures_docs" }, { $group: { "_id": null, "meanCost": { "$avg": "$procedures_docs.Cost" } } }, { $project: { avgCost: 1 } } ])	hospital_1
db.Physician.aggregate([ { $match: { Name: "John Wen" } }, { $lookup: { from: "Trained_In", localField: "EmployeeID", foreignField: "Physician", as: "trained_in_docs" } }, { $unwind: "$trained_in_docs" }, { $lookup: { from: "Procedures", localField: "trained_in_docs.Treatment", foreignField: "Code", as: "procedures_docs" } }, { $unwind: "$procedures_docs" }, { $project: { Name: "$procedures_docs.Name" } } ])	hospital_1
db.Procedures.aggregate([ { $match: { Cost: { $lt: 5000 } } }, { $lookup: { from: "Trained_In", localField: "Code", foreignField: "Treatment", as: "TrainedIn" } }, { $unwind: "$TrainedIn" }, { $lookup: { from: "Physician", localField: "TrainedIn.Physician", foreignField: "EmployeeID", as: "Physician" } }, { $unwind: "$Physician" }, { $match: { "Physician.Name": "John Wen" } }, { $project: { Name: 1 } } ])	hospital_1
db.Physician.aggregate([ { $lookup: { from: "Affiliated_With", localField: "EmployeeID", foreignField: "Physician", as: "affiliated_with" } }, { $unwind: "$affiliated_with" }, { $lookup: { from: "Department", localField: "affiliated_with.Department", foreignField: "DepartmentID", as: "department" } }, { $unwind: "$department" }, { $match: { "department.Name": { $in: ["Surgery", "Psychiatry"] } } }, { $project: { Name: 1 } } ])	hospital_1
db.Physician.aggregate([ { $lookup: { from: "Affiliated_With", localField: "EmployeeID", foreignField: "Physician", as: "affiliations" } }, { $lookup: { from: "Department", localField: "affiliations.Department", foreignField: "DepartmentID", as: "department_info" } }, { $match: { "department_info.Name": { $in: ["Surgery", "Psychiatry"] } } }, { $project: { Name: 1 } } ])	hospital_1
db.Nurse.aggregate([ { $lookup: { from: "On_Call", localField: "EmployeeID", foreignField: "Nurse", as: "on_call_info" } }, { $match: { "on_call_info": { $ne: [] } } }, { $project: { Name: 1 } } ])	hospital_1
db.Nurse.aggregate([ { $lookup: { from: "On_Call", localField: "EmployeeID", foreignField: "Nurse", as: "on_call_info" } }, { $unwind: "$on_call_info" }, { $group: { _id: "$Name" } }, { $project: { Name: "$_id" } } ])	hospital_1
db.ship.find({}, {Name: 1}).sort({Tonnage: 1})	ship_mission
db.ship.find({}, { Name: 1 }).sort({ Tonnage: 1 })	ship_mission
db.ship.find({}, { Type: 1, Nationality: 1})	ship_mission
db.ship.find({}, { Type: 1, Nationality: 1})	ship_mission
db.ship.find({ Nationality: { $ne: 'United States' } }, { Name: 1 })	ship_mission
db.ship.find({ Nationality: { $ne: 'United States' } }, { Name: 1 })	ship_mission
db.ship.find({ Nationality: { $in: ['United States', 'United Kingdom'] } }, { Name: 1 })	ship_mission
db.ship.find( { Nationality: { $in: ["United States", "United Kingdom"] } }, { Name: 1 } )	ship_mission
db.ship.find({}, {Name: 1}).sort({Tonnage: -1}).limit(1)	ship_mission
db.ship.find({}, {Name: 1}).sort({Tonnage: -1}).limit(1)	ship_mission
db.ship.aggregate([ { $group: { _id: "$Type", count: { $sum: 1 } } } ])	ship_mission
db.ship.aggregate([ { $group: { _id: "$Type", count: { $sum: 1 } } } ])	ship_mission
db.ship.aggregate([ { $group: { _id: "$Type", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Type: "$_id" } } ])	ship_mission
db.ship.aggregate([ { $group: { _id: "$Type", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	ship_mission
db.ship.aggregate([ { $group: { _id: "$Nationality", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Nationality: "$_id" } } ])	ship_mission
db.ship.aggregate([ { $group: { _id: "$Nationality", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Nationality: "$_id" } } ])	ship_mission
db.ship.aggregate([ { $group: { _id: "$Type", averageTonnage: { $avg: "$Tonnage" } } } ])	ship_mission
db.ship.aggregate([ { $group: { _id: "$Type", AvgTonnage: { $avg: "$Tonnage" } } }, { $project: { Type: "$_id", AvgTonnage: 1 } } ])	ship_mission
db.mission.aggregate([ { $match: { Launched_Year: { $gt: 1928 } } }, { $lookup: { from: "ship", localField: "Ship_ID", foreignField: "Ship_ID", as: "ship_info" } }, { $unwind: "$ship_info" }, { $project: { Name: "$ship_info.Name" } } ])	ship_mission
db.mission.aggregate([ { $lookup: { from: "ship", localField: "Ship_ID", foreignField: "Ship_ID", as: "ship_info" } }, { $match: { "ship_info.Nationality": "United States" } }, { $group: { _id: "$Fate" } }, { $project: { Fate: "$_id" } } ])	ship_mission
db.mission.aggregate([ { $lookup: { from: "ship", localField: "Ship_ID", foreignField: "Ship_ID", as: "ship_info" } }, { $match: { "ship_info.Nationality": "United States" } }, { $group: { _id: "$Fate" } }, { $project: { Fate: "$_id" } } ])	ship_mission
db.ship.find({ Ship_ID: { $nin: db.mission.distinct("Ship_ID") } }, { Name: 1 })	ship_mission
db.ship.find({ Ship_ID: { $nin: db.mission.distinct("Ship_ID") } }, { Name: 1 })	ship_mission
db.ship.aggregate([ { $facet: { "HeavyShips": [ { $match: { Tonnage: { $gt: 6000 } } }, { $group: { _id: "$Type" } } ], "LightShips": [ { $match: { Tonnage: { $lt: 4000 } } }, { $group: { _id: "$Type" } } ] } }, { $project: { CommonTypes: { $setIntersection: ["$HeavyShips._id", "$LightShips._id"] } } }, { $unwind: "$CommonTypes" }, { $replaceRoot: { newRoot: { Type: "$CommonTypes" } } } ])	ship_mission
db.list.find({ Classroom: 111 }, { LastName: 1 })	student_1
db.list.find({Classroom: 111}, {LastName: 1})	student_1
db.list.find({ Classroom: 108 }, { FirstName: 1 })	student_1
db.list.find({Classroom: 108}, {FirstName: 1})	student_1
db.list.find({ Classroom: 107 }, { FirstName: 1 })	student_1
db.list.find({ Classroom: 107 }, { FirstName: 1 })	student_1
db.list.aggregate([ { $group: { _id: "$Classroom", Grade: { $first: "$Grade" } } }, { $project: { Classroom: "$_id", Grade: 1 } } ])	student_1
db.list.aggregate([ {$group: { _id: {classroom: "$Classroom", grade: "$Grade"} }}, {$project: { classroom: "$_id.classroom", grade: "$_id.grade" }} ])	student_1
db.list.aggregate([ { $match: { Grade: 5 } }, { $lookup: { from: "teachers", localField: "Classroom", foreignField: "Classroom", as: "teachers_info" } }, { $unwind: "$teachers_info" }, { $group: { _id: "$teachers_info.LastName" } }, { $project: { LastName: "$_id" } } ])	student_1
db.teachers.aggregate([ { $lookup: { from: "list", localField: "Classroom", foreignField: "Classroom", as: "class_info" } }, { $match: { "class_info.Grade": 5 } }, { $group: { _id: "$LastName" } }, { $project: { LastName: "$_id" } } ])	student_1
db.teachers.aggregate([ { $lookup: { from: "list", localField: "Classroom", foreignField: "Classroom", as: "first_grade_students" } }, { $match: { "first_grade_students.Grade": 1 } }, { $group: { _id: "$FirstName" } }, { $project: { FirstName: "$_id" } } ])	student_1
db.teachers.aggregate([ { $lookup: { from: "list", localField: "Classroom", foreignField: "Classroom", as: "grade_class" } }, { $unwind: "$grade_class" }, { $match: { "grade_class.Grade": 1 } }, { $group: { _id: "$FirstName" } }, { $project: { FirstName: "$_id" } } ])	student_1
db.teachers.find({Classroom: 110}, {FirstName: 1})	student_1
db.teachers.find({Classroom: 110}, {FirstName: 1})	student_1
db.teachers.find({Classroom: 109}, {LastName: 1})	student_1
db.teachers.find({Classroom: 109}, {LastName: 1})	student_1
db.teachers.find({}, { FirstName: 1, LastName: 1})	student_1
db.teachers.find({}, { FirstName: 1, LastName: 1})	student_1
db.list.aggregate([ { $lookup: { from: "teachers", localField: "Classroom", foreignField: "Classroom", as: "teacher" } }, { $match: { Grade: 1, teacher: { $not: { $elemMatch: { FirstName: "OTHA", LastName: "MOYER" } } } } }, { $group: { _id: { FirstName: "$FirstName", LastName: "$LastName" } } }, { $project: { FirstName: "$_id.FirstName", LastName: "$_id.LastName" } } ])	student_1
db.list.aggregate([ { $lookup: { from: "teachers", localField: "Classroom", foreignField: "Classroom", as: "teacher_info" } }, { $match: { Grade: 1, "teacher_info": { $not: { $elemMatch: { FirstName: "OTHA", LastName: "MOYER" } } } } }, { $project: { FirstName: 1, LastName: 1 } }, { $group: { _id: { FirstName: "$FirstName", LastName: "$LastName" } } }, { $project: { FirstName: "$_id.FirstName", LastName: "$_id.LastName" } } ])	student_1
db.list.aggregate([ { $match: { Grade: 3 } }, { $lookup: { from: 'teachers', localField: 'Classroom', foreignField: 'Classroom', as: 'teacher_info' } }, { $match: { 'teacher_info.FirstName': { $ne: 'COVIN' }, 'teacher_info.LastName': { $ne: 'JEROME' } } }, { $group: { _id: "$LastName" } }, { $project: { LastName: "$_id" } } ])	student_1
db.list.aggregate([ { $match: { Grade: 3 } }, { $lookup: { from: "teachers", localField: "Classroom", foreignField: "Classroom", as: "teacher_info" } }, { $match: { "teacher_info.FirstName": { $ne: "JEROME" }, "teacher_info.LastName": { $ne: "COVIN" } } }, { $group: { _id: "$LastName" } } ])	student_1
db.list.aggregate([ { $group: { _id: "$Grade", totalStudents: { $sum: 1 }, totalClassrooms: { $addToSet: "$Classroom" } } }, { $project: { grade: "$_id", totalClassrooms: { $size: "$totalClassrooms" }, totalStudents: 1 } } ])	student_1
db.list.aggregate([ { $group: { _id: "$Grade", totalStudents: { $sum: 1 }, totalClassrooms: { $addToSet: "$Classroom" } } }, { $project: { grade: "$_id", totalClassrooms: { $size: "$totalClassrooms" }, totalStudents: 1 } } ])	student_1
db.list.aggregate([ { $group: { _id: "$Classroom", count: { $addToSet: "$Grade" } } }, { $project: { _id: 1, count: { $size: "$count" } } } ])	student_1
db.list.aggregate([ { $group: { _id: "$Classroom", count: { $addToSet: "$Grade" } } }, { $project: { Classroom: "$_id", count: { $size: "$count" } } } ])	student_1
db.list.aggregate([ { $group: { _id: "$Classroom", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { classroom: "$_id" } }])	student_1
db.list.aggregate([ { $group: { _id: "$Classroom", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { classroom: "$_id" } }])	student_1
db.list.aggregate([ { $group: { _id: "$Classroom", count: { $sum: 1 } } } ])	student_1
db.list.aggregate([ { $group: { _id: "$Classroom", count: { $sum: 1 } } } ])	student_1
db.teachers.aggregate([ { $lookup: { from: "list", localField: "Classroom", foreignField: "Classroom", as: "students" } }, { $project: { FirstName: 1, LastName: 1, numberOfStudents: { $size: "$students" } } }, { $sort: { numberOfStudents: -1 } }, { $limit: 1 }, { $project: { FirstName: 1, LastName: 1 } } ])	student_1
db.teachers.aggregate([ { $lookup: { from: "list", localField: "Classroom", foreignField: "Classroom", as: "students" } }, { $project: { FirstName: 1, LastName: 1, studentCount: { $size: "$students" } } }, { $sort: { studentCount: -1 } }, { $limit: 1 }, { $project: { FirstName: 1, LastName: 1 } } ])	student_1
db.list.aggregate([ { $group: { _id: "$Classroom", count: { $sum: 1 } } } ])	student_1
db.list.aggregate([ { $group: { _id: "$Classroom", count: { $sum: 1 } } } ])	student_1
db.company.aggregate([ { $project: { Name: 1, Sales_in_Billion: 1 } }, { $sort: { Sales_in_Billion: 1 } }, { $project: { Name: 1} } ])	company_employee
db.company.find({}, {Headquarters: 1, Industry: 1})	company_employee
db.company.find({ Industry: { $in: ['Banking', 'Retailing'] } }, { Name: 1 })	company_employee
db.company.aggregate([ { $group: { _id: null, maxMarketValue: { $max: "$Market_Value_in_Billion" }, minMarketValue: { $min: "$Market_Value_in_Billion" } } }, { $project: { maxMarketValue: 1, minMarketValue: 1 } } ])	company_employee
db.company.find({}, {Headquarters: 1}).sort({Sales_in_Billion: -1}).limit(1)	company_employee
db.company.aggregate([ { $group: { _id: "$Headquarters", count: { $sum: 1 } } }, { $project: { Headquarters: "$_id", count: 1 } } ])	company_employee
db.company.aggregate([ { $group: { _id: "$Headquarters", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Headquarters: "$_id" } } ])	company_employee
db.company.aggregate([ { $group: { _id: "$Headquarters", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Headquarters: "$_id" } } ])	company_employee
db.company.aggregate([ { $match: { $or: [ { Industry: 'Banking' }, { Industry: 'Oil and gas' } ] } }, { $group: { _id: "$Headquarters", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Headquarters: "$_id" } } ])	company_employee
db.employment.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "employee_info" } }, { $unwind: "$employee_info" }, { $lookup: { from: "company", localField: "Company_ID", foreignField: "Company_ID", as: "company_info" } }, { $unwind: "$company_info" }, { $project: { "company_name": "$company_info.Name", "employee_name": "$employee_info.Name" } } ])	company_employee
db.employment.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "employee" } }, { $lookup: { from: "company", localField: "Company_ID", foreignField: "Company_ID", as: "company" } }, { $unwind: "$employee" }, { $unwind: "$company" }, { $project: { Company_Name: "$company.Name", Employee_Name: "$employee.Name" } }, { $sort: { Year_working: -1 } } ])	company_employee
db.employment.aggregate([ { $lookup: { from: "people", localField: "People_ID", foreignField: "People_ID", as: "people_info" } }, { $lookup: { from: "company", localField: "Company_ID", foreignField: "Company_ID", as: "company_info" } }, { $unwind: "$company_info" }, { $group: { _id: "$company_info.Name", count: { $sum: 1 } } }, { $project: { Name: "$_id", count: 1 } } ])	company_employee
db.people.aggregate([ { $lookup: { from: "employment", localField: "People_ID", foreignField: "People_ID", as: "employment" } }, { $match: { "employment": {$size: 0} } }, { $project: { Name: 1 } } ])	company_employee
db.company.find( { Sales_in_Billion: { $gt: 200 } }, { Name: 1 } ).sort({ Sales_in_Billion: -1, Profits_in_Billion: -1 })	company_employee
db.film.aggregate([ { $group: { _id: null, averageGross: { $avg: "$Gross_in_dollar" } } }, { $project: { averageGross: 1} } ])	film_rank
db.film.aggregate([ { $group: { _id: null, averageGross: { $avg: "$Gross_in_dollar" } } } , { $project: { averageGross: 1 } }])	film_rank
db.film_market_estimation.find({}, {Low_Estimate: 1, High_Estimate: 1})	film_rank
db.film_market_estimation.find({}, {Low_Estimate: 1, High_Estimate: 1})	film_rank
db.film_market_estimation.find({Year: 1995}, { Type: 1})	film_rank
db.market.aggregate([ { $group: { _id: null, maxNumberCities: { $max: "$Number_cities" }, minNumberCities: { $min: "$Number_cities" } } }, { $project: { maxNumberCities: 1, minNumberCities: 1 } } ])	film_rank
db.market.aggregate([ { $group: { _id: null, maxNumberCities: { $max: "$Number_cities" }, minNumberCities: { $min: "$Number_cities" } } }, { $project: { maxNumberCities: 1, minNumberCities: 1 } } ])	film_rank
db.market.find({}, {Country: 1}).sort({Country: 1})	film_rank
db.market.find({}, {Country: 1}).sort({Country: 1})	film_rank
db.market.find({}, {Country: 1}).sort({Number_cities: -1})	film_rank
db.market.find({}, {Country: 1}).sort({Number_cities: -1})	film_rank
db.film.aggregate([ { $lookup: { from: "film_market_estimation", localField: "Film_ID", foreignField: "Film_ID", as: "estimation" } }, { $unwind: "$estimation" }, { $match: { "estimation.Year": 1995 } }, { $group: { _id: "$Director" } }, { $project: { Director: "$_id" } } ])	film_rank
db.film.aggregate([ { $lookup: { from: "film_market_estimation", localField: "Film_ID", foreignField: "Film_ID", as: "film_market_estimation" } }, { $unwind: "$film_market_estimation" }, { $match: { "film_market_estimation.Year": 1995 } }, { $group: { _id: "$Director" } }, { $project: { Director: "$_id" } } ])	film_rank
db.film_market_estimation.aggregate([ { $match: { Low_Estimate: { $gt: 10000 } } }, { $lookup: { from: "market", localField: "Market_ID", foreignField: "Market_ID", as: "market_data" } }, { $unwind: "$market_data" }, { $group: { _id: null, avgNumberOfCities: { $avg: "$market_data.Number_cities" } } }, { $project: { avgNumberOfCities: 1 } } ])	film_rank
db.film_market_estimation.aggregate([ { $match: { Low_Estimate: { $gt: 10000 } } }, { $lookup: { from: "market", localField: "Market_ID", foreignField: "Market_ID", as: "market_data" } }, { $unwind: "$market_data" }, { $group: { _id: null, avgNumberOfCities: { $avg: "$market_data.Number_cities" } } }, { $project: { avgNumberOfCities:1 } } ])	film_rank
db.film_market_estimation.aggregate([ { $lookup: { from: "market", localField: "Market_ID", foreignField: "Market_ID", as: "market_info" } }, { $unwind: "$market_info" }, { $project: { Country: "$market_info.Country", Year: "$Year" } } ])	film_rank
db.film_market_estimation.aggregate([ { $lookup: { from: "market", localField: "Market_ID", foreignField: "Market_ID", as: "market_info" } }, { $unwind: "$market_info" }, { $project: { Country: "$market_info.Country", Year: "$Year" } } ])	film_rank
db.film_market_estimation.aggregate([ { $lookup: { from: "market", localField: "Market_ID", foreignField: "Market_ID", as: "market_data" } }, { $match: { "market_data.Country": "Japan" } }, { $project: { Year: 1 } }, { $sort: { Year: -1 } } ])	film_rank
db.film_market_estimation.aggregate([ { $lookup: { from: "market", localField: "Market_ID", foreignField: "Market_ID", as: "market_data" } }, { $match: { "market_data.Country": "Japan" } }, { $project: { Year: 1 } }, { $sort: { Year: -1 } } ])	film_rank
db.film.aggregate([ { $group: { _id: "$Studio", count: { $sum: 1 } } }, { $project: { Studio: "$_id", count: 1 } } ])	film_rank
db.film.aggregate([ { $group: { _id: "$Studio", count: { $sum: 1 } } } ])	film_rank
db.film.aggregate([ { $group: { _id: "$Studio", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Studio: "$_id" } } ])	film_rank
db.film.aggregate([ { $group: { _id: "$Studio", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Studio: "$_id" } } ])	film_rank
db.film.aggregate([ { $group: { _id: "$Studio", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Studio: "$_id" } } ])	film_rank
db.film.aggregate([ { $group: { _id: "$Studio", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Studio: "$_id" } } ])	film_rank
db.film.aggregate([ { $match: { $or: [ { Director: "Nicholas Meyer" }, { Director: "Walter Hill" } ] } }, { $group: { _id: "$Studio" } }, { $project: { Studio: "$_id" } } ])	film_rank
db.film.aggregate([ { $match: { $or: [ { Director: "Nicholas Meyer" }, { Director: "Walter Hill" } ] } }, { $group: { _id: "$Studio", count: { $sum: 1 } } }, { $match: { count: 2 } }, { $project: { Studio: "$_id" } } ])	film_rank
db.film.find({Studio: {$regex: /Universal/}}, {Title: 1, Studio: 1})	film_rank
db.film.find({Studio: {$regex: /Universal/}}, {Title: 1, Studio: 1})	film_rank
db.film.aggregate([ { $group: { _id: "$Studio", directors: { $addToSet: "$Director" } } }, { $match: { directors: { $ne: "Walter Hill" } } }, { $project: { _id: 1 } } ])	film_rank
db.film.aggregate([ { $group: { _id: "$Studio", averageGross: { $avg: "$Gross_in_dollar" } } }, { $match: { averageGross: { $gt: 4500000 } } }, { $project: { Studio: "$_id" } } ])	film_rank
db.film.aggregate([ { $group: { _id: "$Studio", avgGross: { $avg: "$Gross_in_dollar" } } }, { $match: { avgGross: { $gte: 4500000 } } }, { $project: { Studio: "$_id" } } ])	film_rank
db.film.aggregate([ { $lookup: { from: "film_market_estimation", localField: "Film_ID", foreignField: "Film_ID", as: "estimation" } }, { $unwind: "$estimation" }, { $sort: { "estimation.High_Estimate": -1 } }, { $limit: 1 }, { $project: { Title: 1 } } ])	film_rank
db.film.aggregate([ { $lookup: { from: "film_market_estimation", localField: "Film_ID", foreignField: "Film_ID", as: "estimation" } }, { $unwind: "$estimation" }, { $sort: { "estimation.High_Estimate": -1 } }, { $limit: 1 }, { $project: { Title: 1 } } ])	film_rank
db.Ref_Document_Types.find({}, { Document_Type_Code: 1, Document_Type_Name: 1})	cre_Doc_Tracking_DB
db.Ref_Document_Types.find({}, { Document_Type_Code: 1, Document_Type_Name: 1})	cre_Doc_Tracking_DB
db.Ref_Document_Types.find( { Document_Type_Code: 'RV' }, { Document_Type_Name: 1, Document_Type_Description: 1 } )	cre_Doc_Tracking_DB
db.Ref_Document_Types.find( { Document_Type_Code: 'RV' }, { Document_Type_Name: 1, Document_Type_Description: 1 } )	cre_Doc_Tracking_DB
db.Ref_Document_Types.findOne({Document_Type_Name: 'Paper'}, {Document_Type_Code: 1})	cre_Doc_Tracking_DB
db.Ref_Document_Types.findOne({ Document_Type_Name: 'Paper' }, { Document_Type_Code: 1 })	cre_Doc_Tracking_DB
db.All_Documents.aggregate([ { $match: { $or: [ { Document_Type_Code: 'CV' }, { Document_Type_Code: 'BK' } ] } }, { $count: "number_of_documents" } ])	cre_Doc_Tracking_DB
db.All_Documents.aggregate([ { $match: { Document_Name: "How to read a book" } }, { $lookup: { from: "Ref_Document_Types", localField: "Document_Type_Code", foreignField: "Document_Type_Code", as: "document_type" } }, { $project: { Document_Type_Name: { $arrayElemAt: ["$document_type.Document_Type_Name", 0] } } } ])	cre_Doc_Tracking_DB
db.All_Documents.aggregate([ { $match: { Document_Name: 'How to read a book' } }, { $lookup: { from: 'Ref_Document_Types', localField: 'Document_Type_Code', foreignField: 'Document_Type_Code', as: 'docType' } }, { $unwind: '$docType' }, { $project: { Document_Type_Name: '$docType.Document_Type_Name' } } ])	cre_Doc_Tracking_DB
db.Ref_Locations.find({}, { Location_Code: 1, Location_Name: 1})	cre_Doc_Tracking_DB
db.Ref_Locations.find({}, { Location_Code: 1, Location_Name: 1})	cre_Doc_Tracking_DB
db.Ref_Locations.find({ Location_Code: 'x' }, { Location_Name: 1, Location_Description: 1 })	cre_Doc_Tracking_DB
db.Ref_Locations.find({ Location_Code: 'x' }, { Location_Name: 1, Location_Description: 1 })	cre_Doc_Tracking_DB
db.Ref_Locations.find({Location_Name: 'Canada'}, {Location_Code: 1})	cre_Doc_Tracking_DB
db.Ref_Locations.find({ Location_Name: 'Canada' }, { Location_Code: 1 })	cre_Doc_Tracking_DB
db.Roles.find({}, { Role_Code: 1, Role_Name: 1, Role_Description: 1 })	cre_Doc_Tracking_DB
db.Roles.find({}, { Role_Code: 1, Role_Name: 1, Role_Description: 1 })	cre_Doc_Tracking_DB
db.Roles.find( { Role_Code: 'MG' }, { Role_Name: 1, Role_Description: 1 } )	cre_Doc_Tracking_DB
db.Roles.find( { Role_Code: 'MG' }, { Role_Name: 1, Role_Description: 1 } )	cre_Doc_Tracking_DB
db.Roles.find({Role_Name: 'Proof Reader'}, {Role_Description: 1})	cre_Doc_Tracking_DB
db.Roles.find({Role_Name: 'Proof Reader'}, {Role_Description: 1})	cre_Doc_Tracking_DB
db.Employees.find({Employee_Name: "Ebba"}, {Employee_ID: 1})	cre_Doc_Tracking_DB
db.Employees.find({Employee_Name: 'Ebba'}, {Employee_ID: 1})	cre_Doc_Tracking_DB
db.Employees.find({ Role_Code: 'HR' }, { Employee_Name: 1 })	cre_Doc_Tracking_DB
db.Employees.find({ Role_Code: 'HR' }, { Employee_Name: 1 })	cre_Doc_Tracking_DB
db.Employees.aggregate([ { $group: { _id: "$Role_Code", count: { $sum: 1 } } }, { $project: { Role_Code: "$_id", count: 1 } } ])	cre_Doc_Tracking_DB
db.Employees.aggregate([ { $group: { _id: "$Role_Code", count: { $sum: 1 } } } ])	cre_Doc_Tracking_DB
db.Employees.aggregate([ { $group: { _id: "$Role_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { Role_Code: "$_id" } }])	cre_Doc_Tracking_DB
db.Employees.aggregate([ { $group: { _id: "$Role_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { role_code: "$_id" } } ])	cre_Doc_Tracking_DB
db.Employees.aggregate([ { $group: { _id: "$Role_Code", count: { $sum: 1 } } }, { $match: { count: { $gte: 3 } } }, { $project: { Role_Code: "$_id" } } ])	cre_Doc_Tracking_DB
db.Employees.aggregate([ { $group: { _id: "$Role_Code", count: { $sum: 1 } } }, { $match: { count: { $gte: 3 } } }, { $project: { Role_Code: "$_id" } } ])	cre_Doc_Tracking_DB
db.Employees.aggregate([ { $group: { _id: "$Role_Code", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	cre_Doc_Tracking_DB
db.Employees.aggregate([ { $match: { Employee_Name: "Ebba" } }, { $lookup: { from: "Roles", localField: "Role_Code", foreignField: "Role_Code", as: "role_info" } }, { $unwind: "$role_info" }, { $project: { role_name: "$role_info.Role_Name", role_description: "$role_info.Role_Description" } } ])	cre_Doc_Tracking_DB
db.Employees.aggregate([ { $lookup: { from: "Roles", localField: "Role_Code", foreignField: "Role_Code", as: "role_info" } }, { $match: { "role_info.Role_Name": "Editor" } }, { $project: { Employee_Name: 1 } } ])	cre_Doc_Tracking_DB
db.Employees.aggregate([ { $lookup: { from: "Roles", localField: "Role_Code", foreignField: "Role_Code", as: "role_info" } }, { $match: { "role_info.Role_Name": "Editor" } }, { $project: { Employee_Name: 1 } } ])	cre_Doc_Tracking_DB
db.Employees.aggregate([ { $lookup: { from: "Roles", localField: "Role_Code", foreignField: "Role_Code", as: "role_info" } }, { $match: { "role_info.Role_Name": { $in: ["Human Resource", "Manager"] } } }, { $project: { Employee_ID: 1 } } ])	cre_Doc_Tracking_DB
db.Employees.aggregate([ { $lookup: { from: "Roles", localField: "Role_Code", foreignField: "Role_Code", as: "role_info" } }, { $match: { "role_info.Role_Name": { $in: ["Human Resource", "Manager"] } } }, { $project: { Employee_ID: 1 } } ])	cre_Doc_Tracking_DB
db.All_Documents.aggregate([ { $match: { Document_Name: "Robin CV" } }, { $lookup: { from: "Document_Locations", localField: "Document_ID", foreignField: "Document_ID", as: "document_locations" } }, { $unwind: "$document_locations" }, { $lookup: { from: "Ref_Locations", localField: "document_locations.Location_Code", foreignField: "Location_Code", as: "ref_locations" } }, { $unwind: "$ref_locations" }, { $project: { Location_Name: "$ref_locations.Location_Name" } } ])	cre_Doc_Tracking_DB
db.All_Documents.aggregate([ { $match: { Document_Name: "Robin CV" } }, { $lookup: { from: "Document_Locations", localField: "Document_ID", foreignField: "Document_ID", as: "document_locations" } }, { $unwind: "$document_locations" }, { $lookup: { from: "Ref_Locations", localField: "document_locations.Location_Code", foreignField: "Location_Code", as: "ref_locations" } }, { $unwind: "$ref_locations" }, { $project: { Location_Name: "$ref_locations.Location_Name" } } ])	cre_Doc_Tracking_DB
db.Document_Locations.aggregate([ { $group: { _id: "$Location_Code", count: { $sum: 1 } } } ])	cre_Doc_Tracking_DB
db.Document_Locations.aggregate([ { $group: { _id: "$Location_Code", count: { $sum: 1 } } } ])	cre_Doc_Tracking_DB
db.Document_Locations.aggregate([ { $group: { _id: "$Location_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { Location_Code: "$_id" } } ])	cre_Doc_Tracking_DB
db.Document_Locations.aggregate([ { $group: { _id: "$Location_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Location_Code: "$_id" } } ])	cre_Doc_Tracking_DB
db.Document_Locations.aggregate([ { $group: { _id: "$Location_Code", count: { $sum: 1 } } }, { $match: { count: { $gte: 3 } } }, { $project: { Location_Code: "$_id" } } ])	cre_Doc_Tracking_DB
db.Document_Locations.aggregate([ { $group: { _id: "$Location_Code", count: { $sum: 1 } } }, { $match: { count: { $gte: 3 } } }, { $project: { Location_Code: "$_id" } } ])	cre_Doc_Tracking_DB
db.Document_Locations.aggregate([ { $group: { _id: "$Location_Code", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $lookup: { from: "Ref_Locations", localField: "_id", foreignField: "Location_Code", as: "location_info" } }, { $project: { location_name: { $arrayElemAt: ["$location_info.Location_Name", 0] }, location_code: "$_id" } } ])	cre_Doc_Tracking_DB
db.Document_Locations.aggregate([ { $group: { _id: "$Location_Code", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $lookup: { from: "Ref_Locations", localField: "_id", foreignField: "Location_Code", as: "location_info" } }, { $unwind: "$location_info" }, { $project: { location_name: "$location_info.Location_Name", location_code: "$location_info.Location_Code" } } ])	cre_Doc_Tracking_DB
db.Documents_to_be_Destroyed.aggregate([ { $lookup: { from: "Employees", localField: "Destruction_Authorised_by_Employee_ID", foreignField: "Employee_ID", as: "authorised_employee" } }, { $lookup: { from: "Employees", localField: "Destroyed_by_Employee_ID", foreignField: "Employee_ID", as: "destroyed_employee" } }, { $project: { authorised_employee: { $arrayElemAt: ["$authorised_employee.Employee_Name", 0] }, destroyed_employee: { $arrayElemAt: ["$destroyed_employee.Employee_Name", 0] } } } ])	cre_Doc_Tracking_DB
db.Documents_to_be_Destroyed.aggregate([ { $group: { _id: "$Destruction_Authorised_by_Employee_ID", count: { $sum: 1 } } } ])	cre_Doc_Tracking_DB
db.Documents_to_be_Destroyed.aggregate([ { $group: { _id: "$Destruction_Authorised_by_Employee_ID", count: { $sum: 1 } } } ])	cre_Doc_Tracking_DB
db.Documents_to_be_Destroyed.aggregate([ { $group: { _id: "$Destroyed_by_Employee_ID", count: { $sum: 1 } } }, { $project: { Destroyed_by_Employee_ID: "$_id", count: 1 } } ])	cre_Doc_Tracking_DB
db.Documents_to_be_Destroyed.aggregate([ { $group: { _id: "$Destroyed_by_Employee_ID", count: { $sum: 1 } } } ])	cre_Doc_Tracking_DB
db.Employees.aggregate([ { $lookup: { from: "Documents_to_be_Destroyed", localField: "Employee_ID", foreignField: "Destruction_Authorised_by_Employee_ID", as: "authorized_documents" } }, { $match: { "authorized_documents": { $size: 0 } } }, { $project: { Employee_ID: 1 } } ])	cre_Doc_Tracking_DB
db.Employees.aggregate([ { $lookup: { from: "Documents_to_be_Destroyed", localField: "Employee_ID", foreignField: "Destruction_Authorised_by_Employee_ID", as: "destruction_authorized" } }, { $match: { "destruction_authorized": { $size: 0 } } }, { $project: { Employee_ID: 1 } } ])	cre_Doc_Tracking_DB
db.Employees.aggregate([ { $lookup: { from: "Documents_to_be_Destroyed", localField: "Employee_ID", foreignField: "Destroyed_by_Employee_ID", as: "destroyed_documents" } }, { $match: { "destroyed_documents": { $size: 0 } } }, { $project: { Employee_ID: 1 } } ])	cre_Doc_Tracking_DB
db.Employees.aggregate([ { $lookup: { from: "Documents_to_be_Destroyed", localField: "Employee_ID", foreignField: "Destroyed_by_Employee_ID", as: "destroyed_documents" } }, { $match: { "destroyed_documents": { $size: 0 } } }, { $project: { Employee_ID: 1 } } ])	cre_Doc_Tracking_DB
db.Documents_to_be_Destroyed.aggregate([ { $group: { _id: null, destroyed: { $addToSet: "$Destroyed_by_Employee_ID" }, authorised: { $addToSet: "$Destruction_Authorised_by_Employee_ID" } } }, { $project: { allIds: { $setUnion: ["$destroyed", "$authorised"] } } }, { $unwind: "$allIds" }, { $replaceRoot: { newRoot: { Employee_ID: "$allIds" } } } ])	cre_Doc_Tracking_DB
db.Documents_to_be_Destroyed.aggregate([ { $group: { _id: null, destroyers: { $addToSet: "$Destroyed_by_Employee_ID" }, authors: { $addToSet: "$Destruction_Authorised_by_Employee_ID" } } }, { $project: { employee_ids: { $setUnion: ["$destroyers", "$authors"] } } }, { $unwind: "$employee_ids" }, { $project: { _id: "$employee_ids" } } ])	cre_Doc_Tracking_DB
db.Club.find({}, {ClubName: 1})	club_1
db.Club.find({}, { ClubName: 1 })	club_1
db.Student.aggregate([ { $lookup: { from: "Member_of_club", localField: "StuID", foreignField: "StuID", as: "member_of_club" } }, { $lookup: { from: "Club", localField: "member_of_club.ClubID", foreignField: "ClubID", as: "club" } }, { $match: { "club.ClubName": "Hopkins Student Enterprises" } }, { $project: { LName: 1 } } ])	club_1
db.Student.aggregate([ { $lookup: { from: "Member_of_club", localField: "StuID", foreignField: "StuID", as: "membership" } }, { $unwind: "$membership" }, { $lookup: { from: "Club", localField: "membership.ClubID", foreignField: "ClubID", as: "club_info" } }, { $unwind: "$club_info" }, { $match: { "club_info.ClubName": "Hopkins Student Enterprises" } }, { $project: { LName: 1 } } ])	club_1
db.Club.aggregate([ { $match: { ClubName: "Tennis Club" } }, { $lookup: { from: "Member_of_club", localField: "ClubID", foreignField: "ClubID", as: "Members" } }, { $unwind: "$Members" }, { $count: "NumberOfMembers" } ])	club_1
db.Student.aggregate([ { $match: { Fname: 'Linda', LName: 'Smith' } }, { $lookup: { from: 'Member_of_club', localField: 'StuID', foreignField: 'StuID', as: 'memberships' } }, { $project: { numberOfClubs: { $size: "$memberships" } } } ])	club_1
db.Student.aggregate([ { $match: { Sex: 'F' }}, { $lookup: { from: 'Member_of_club', localField: 'StuID', foreignField: 'StuID', as: 'membership' }}, { $unwind: '$membership' }, { $lookup: { from: 'Club', localField: 'membership.ClubID', foreignField: 'ClubID', as: 'club_info' }}, { $unwind: '$club_info' }, { $match: { 'club_info.ClubName': 'Bootup Baltimore' }}, { $project: { Fname: 1, LName: 1 }} ])	club_1
db.Student.aggregate([ { $lookup: { from: "Member_of_club", localField: "StuID", foreignField: "StuID", as: "membership" } }, { $unwind: "$membership" }, { $lookup: { from: "Club", localField: "membership.ClubID", foreignField: "ClubID", as: "clubInfo" } }, { $unwind: "$clubInfo" }, { $match: { "clubInfo.ClubName": "Bootup Baltimore", Sex: "F" } }, { $project: { Fname: 1, LName: 1 } } ])	club_1
db.Club.find({ ClubName: 'Tennis Club' }, { ClubDesc: 1 })	club_1
db.Club.findOne({ ClubName: 'Tennis Club' }, { ClubDesc: 1 })	club_1
db.Club.findOne({ ClubName: "Pen and Paper Gaming" }, { ClubDesc: 1 })	club_1
db.Club.find({ ClubName: 'Tennis Club' }, { ClubLocation: 1 })	club_1
db.Club.findOne({ClubName: 'Tennis Club'}, {ClubLocation: 1})	club_1
db.Club.find({ClubName: 'Pen and Paper Gaming'}, {ClubLocation: 1})	club_1
db.Club.find({ ClubName: 'Pen and Paper Gaming' }, { ClubLocation: 1 })	club_1
db.Club.findOne({ClubName: 'Hopkins Student Enterprises'}, {ClubLocation: 1})	club_1
db.Club.findOne({ClubName: 'Hopkins Student Enterprises'}, {ClubLocation: 1})	club_1
db.Club.find({ ClubLocation: 'AKW' }, { ClubName: 1 })	club_1
db.Club.find({ ClubLocation: "AKW" }, { ClubName: 1 })	club_1
db.Member_of_club.aggregate([ { $match: { Position: "CTO" } }, { $lookup: { from: "Club", localField: "ClubID", foreignField: "ClubID", as: "club_info" } }, { $unwind: "$club_info" }, { $match: { "club_info.ClubName": "Hopkins Student Enterprises" } }, { $lookup: { from: "Student", localField: "StuID", foreignField: "StuID", as: "student_info" } }, { $unwind: "$student_info" }, { $project: { fname: "$student_info.Fname", lname: "$student_info.LName" } } ])	club_1
db.Student.aggregate([ { $lookup: { from: "Member_of_club", localField: "StuID", foreignField: "StuID", as: "membership" } }, { $unwind: "$membership" }, { $lookup: { from: "Club", localField: "membership.ClubID", foreignField: "ClubID", as: "club_info" } }, { $unwind: "$club_info" }, { $match: { "club_info.ClubName": "Hopkins Student Enterprises", "membership.Position": "CTO" } }, { $project: { Fname: 1, LName: 1 } } ])	club_1
db.Club.aggregate([ { $match: { ClubName: "Bootup Baltimore" } }, { $lookup: { from: "Member_of_club", localField: "ClubID", foreignField: "ClubID", as: "club_members" } }, { $unwind: "$club_members" }, { $group: { _id: null, uniqueRoles: { $addToSet: "$club_members.Position" } } }, { $project: { count: { $size: "$uniqueRoles" } } } ])	club_1
db.Student.aggregate([ { $lookup: { from: "Member_of_club", localField: "StuID", foreignField: "StuID", as: "membership" } }, { $unwind: "$membership" }, { $lookup: { from: "Club", localField: "membership.ClubID", foreignField: "ClubID", as: "club_info" } }, { $unwind: "$club_info" }, { $match: { "club_info.ClubName": "Bootup Baltimore", "Age": { $lt: 18 } } }, { $count: "count" } ])	club_1
db.Student.aggregate([ { $match: { city_code: 'BAL' } }, { $lookup: { from: "Member_of_club", localField: "StuID", foreignField: "StuID", as: "membership" } }, { $unwind: "$membership" }, { $lookup: { from: "Club", localField: "membership.ClubID", foreignField: "ClubID", as: "clubDetails" } }, { $unwind: "$clubDetails" }, { $group: { _id: "$clubDetails.ClubID", ClubName: { $first: "$clubDetails.ClubName" } } }, { $project: { ClubName: 1 } } ])	club_1
db.Student.aggregate([ { $match: { city_code: 'BAL' } }, { $lookup: { from: "Member_of_club", localField: "StuID", foreignField: "StuID", as: "membership" } }, { $unwind: "$membership" }, { $lookup: { from: "Club", localField: "membership.ClubID", foreignField: "ClubID", as: "clubInfo" } }, { $unwind: "$clubInfo" }, { $group: { _id: "$clubInfo.ClubName" } }, { $project: { ClubName: "$_id" } } ])	club_1
db.Club.aggregate([ { $lookup: { from: "Member_of_club", localField: "ClubID", foreignField: "ClubID", as: "members" } }, { $unwind: "$members" }, { $lookup: { from: "Student", localField: "members.StuID", foreignField: "StuID", as: "student_members" } }, { $unwind: "$student_members" }, { $match: { "student_members.city_code": "HOU" } }, { $group: { _id: "$ClubName" } }, { $project: { ClubName: "$_id" } } ])	club_1
db.Student.aggregate([ { $match: { city_code: 'HOU' } }, { $lookup: { from: 'Member_of_club', localField: 'StuID', foreignField: 'StuID', as: 'membership' } }, { $unwind: '$membership' }, { $lookup: { from: 'Club', localField: 'membership.ClubID', foreignField: 'ClubID', as: 'club_info' } }, { $unwind: '$club_info' }, { $group: { _id: '$club_info.ClubName' } }, { $project: { ClubName: '$_id' } } ])	club_1
db.Student.aggregate([ { $lookup: { from: "Member_of_club", localField: "StuID", foreignField: "StuID", as: "membership" } }, { $unwind: "$membership" }, { $lookup: { from: "Club", localField: "membership.ClubID", foreignField: "ClubID", as: "club_info" } }, { $unwind: "$club_info" }, { $match: { "club_info.ClubName": "Hopkins Student Enterprises" } }, { $group: { _id: null, average_age: { $avg: "$Age" } } }, { $project: { average_age: 1 } } ])	club_1
db.Student.aggregate([ { $lookup: { from: "Member_of_club", localField: "StuID", foreignField: "StuID", as: "membership" } }, { $unwind: "$membership" }, { $lookup: { from: "Club", localField: "membership.ClubID", foreignField: "ClubID", as: "club_info" } }, { $unwind: "$club_info" }, { $match: { "club_info.ClubName": "Tennis Club" } }, { $group: { _id: null, averageAge: { $avg: "$Age" } } }, { $project: { averageAge: 1 } } ])	club_1
db.Projects.aggregate([ { $lookup: { from: "Project_Outcomes", localField: "project_id", foreignField: "project_id", as: "project_outcomes" } }, { $match: { $and: [ { "project_outcomes.outcome_code": "Paper" }, { "project_outcomes.outcome_code": "Patent" } ] } }, { $project: { project_details: 1 } } ])	tracking_grants_for_research
db.Projects.aggregate([ { $lookup: { from: "Project_Outcomes", localField: "project_id", foreignField: "project_id", as: "outcomes" } }, { $match: { "outcomes.outcome_code": { $all: ["Paper", "Patent"] } } }, { $project: { project_details: 1 } } ])	tracking_grants_for_research
db.Grants.aggregate([ { $group: { _id: "$organisation_id", totalGrantAmount: { $sum: "$grant_amount" } } }, { $match: { totalGrantAmount: { $gt: 6000 } } }, { $lookup: { from: "Organisations", localField: "_id", foreignField: "organisation_id", as: "organisationDetails" } }, { $unwind: "$organisationDetails" }, { $project: { organisation_id: "$organisationDetails.organisation_id", organisation_details: "$organisationDetails.organisation_details" } } ])	tracking_grants_for_research
db.Grants.aggregate([ { $match: { grant_amount: { $gt: 6000 } } }, { $group: { _id: "$organisation_id", total_grant_amount: { $sum: "$grant_amount" } } }, { $match: { total_grant_amount: { $gt: 6000 } } }, { $lookup: { from: "Organisations", localField: "_id", foreignField: "organisation_id", as: "organisation_details" } }, { $unwind: "$organisation_details" }, { $project: { _id: "$organisation_details.organisation_id", organisation_details: "$organisation_details.organisation_details" } } ])	tracking_grants_for_research
db.Organisations.aggregate([ { $lookup: { from: "Research_Staff", localField: "organisation_id", foreignField: "employer_organisation_id", as: "research_staff" } }, { $group: { _id: { organisation_type: "$organisation_type", organisation_id: "$organisation_id" }, count: { $sum: { $size: "$research_staff" } } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { organisation_type: "$_id.organisation_type", organisation_id: "$_id.organisation_id" } } ])	tracking_grants_for_research
db.Organisations.aggregate([ { $lookup: { from: "Research_Staff", localField: "organisation_id", foreignField: "employer_organisation_id", as: "research_staff" } }, { $group: { _id: "$organisation_type", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { organisation_type: "$_id" } } ])	tracking_grants_for_research
db.Organisations.aggregate([ { $lookup: { from: "Research_Staff", localField: "organisation_id", foreignField: "employer_organisation_id", as: "research_staff" } }, { $group: { _id: "$organisation_type", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { organisation_type: "$_id" } } ])	tracking_grants_for_research
db.Projects.find( { project_id: { $nin: db.Project_Staff.distinct( "project_id", { role_code: "researcher" } ) } }, { project_details: 1 } )	tracking_grants_for_research
db.Projects.find( { project_id: { $nin: db.Project_Staff.distinct("project_id", { role_code: "researcher" }) } }, { project_details: 1 } )	tracking_grants_for_research
db.Grants.aggregate([ { $group: { _id: "$organisation_id", total_grant_amount: { $sum: "$grant_amount" } } } ])	tracking_grants_for_research
db.Grants.aggregate([ { $group: { _id: "$organisation_id", total_grant_amount: { $sum: "$grant_amount" } } } ])	tracking_grants_for_research
db.Projects.aggregate([ { $lookup: { from: "Project_Outcomes", localField: "project_id", foreignField: "project_id", as: "project_outcomes" } }, { $unwind: "$project_outcomes" }, { $lookup: { from: "Research_Outcomes", localField: "project_outcomes.outcome_code", foreignField: "outcome_code", as: "research_outcomes" } }, { $unwind: "$research_outcomes" }, { $match: { "research_outcomes.outcome_description": { $regex: /Published/, $options: "i" } } }, { $project: { project_details: 1 } } ])	tracking_grants_for_research
db.Projects.aggregate([ { $lookup: { from: "Project_Outcomes", localField: "project_id", foreignField: "project_id", as: "project_outcomes" } }, { $unwind: "$project_outcomes" }, { $lookup: { from: "Research_Outcomes", localField: "project_outcomes.outcome_code", foreignField: "outcome_code", as: "research_outcomes" } }, { $unwind: "$research_outcomes" }, { $match: { "research_outcomes.outcome_description": { $regex: /Published/, $options: "i" } } }, { $project: { project_details: 1 } } ])	tracking_grants_for_research
db.Project_Staff.aggregate([ { $group: { _id: "$project_id", count: { $sum: 1 } } }, { $sort: { count: 1 } } ])	tracking_grants_for_research
db.Project_Staff.aggregate([ { $lookup: { from: "Projects", localField: "project_id", foreignField: "project_id", as: "project_info" } }, { $unwind: "$project_info" }, { $group: { _id: "$project_id", count: { $sum: 1 } } }, { $sort: { count: 1 } } ])	tracking_grants_for_research
db.Staff_Roles.findOne({role_code: 'researcher'}, {role_description: 1})	tracking_grants_for_research
db.Staff_Roles.findOne({role_code: 'researcher'}, {role_description: 1})	tracking_grants_for_research
db.Projects.aggregate([ { $lookup: { from: "Project_Outcomes", localField: "project_id", foreignField: "project_id", as: "outcomes" } }, { $project: { project_details: 1, project_id: 1, numberOfOutcomes: { $size: "$outcomes" } } }, { $sort: { numberOfOutcomes: -1 } }, { $limit: 1 }, { $project: { project_id: 1, project_details: 1 } } ])	tracking_grants_for_research
db.Project_Outcomes.aggregate([ { $group: { _id: "$project_id", outcomeCount: { $sum: 1 } } }, { $sort: { outcomeCount: -1 } }, { $limit: 1 }, { $lookup: { from: "Projects", localField: "_id", foreignField: "project_id", as: "projectDetails" } }, { $unwind: "$projectDetails" }, { $project: { project_details: "$projectDetails.project_details", project_id: "$projectDetails.project_id" } } ])	tracking_grants_for_research
db.Projects.find( { "project_id": { "$nin": db.Project_Outcomes.distinct("project_id") } }, { "project_details": 1, "_id": 0 } )	tracking_grants_for_research
db.Organisations.aggregate([ { $lookup: { from: "Research_Staff", localField: "organisation_id", foreignField: "employer_organisation_id", as: "research_staff" } }, { $group: { _id: { organisation_id: "$organisation_id", organisation_type: "$organisation_type", organisation_details: "$organisation_details" }, count: { $sum: { $size: "$research_staff" } } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { organisation_id: "$_id.organisation_id", organisation_type: "$_id.organisation_type", organisation_details: "$_id.organisation_details" } } ])	tracking_grants_for_research
db.Research_Staff.aggregate([ { $group: { _id: "$employer_organisation_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Organisations", localField: "_id", foreignField: "organisation_id", as: "organisationDetails" } }, { $project: { organisation_id: "$_id", organisation_type: { $arrayElemAt: ["$organisationDetails.organisation_type", 0] }, organisation_details: { $arrayElemAt: ["$organisationDetails.organisation_details", 0] } } } ])	tracking_grants_for_research
db.Staff_Roles.aggregate([ { $lookup: { from: "Project_Staff", localField: "role_code", foreignField: "role_code", as: "project_staff" } }, { $unwind: "$project_staff" }, { $lookup: { from: "Project_Outcomes", localField: "project_staff.project_id", foreignField: "project_id", as: "project_outcomes" } }, { $unwind: "$project_outcomes" }, { $group: { _id: "$project_staff.staff_id", role_description: { $first: "$role_description" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { role_description:1, staff_id: "$_id" } }])	tracking_grants_for_research
db.Staff_Roles.aggregate([ { $lookup: { from: "Project_Staff", localField: "role_code", foreignField: "role_code", as: "project_staff" } }, { $unwind: "$project_staff" }, { $lookup: { from: "Project_Outcomes", localField: "project_staff.project_id", foreignField: "project_id", as: "project_outcomes" } }, { $unwind: "$project_outcomes" }, { $group: { _id: "$project_staff.staff_id", role_description: { $first: "$role_description" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { role_description:1, staff_id: "$_id" } }])	tracking_grants_for_research
db.Document_Types.find({document_description: /^Initial/}, {document_type_code: 1})	tracking_grants_for_research
db.Document_Types.find({document_description: /^Initial/}, {document_type_code: 1})	tracking_grants_for_research
db.Documents.aggregate([ { $group: { _id: "$grant_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	tracking_grants_for_research
db.Documents.aggregate([ { $group: { _id: "$grant_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	tracking_grants_for_research
db.Organisation_Types.aggregate([ { $lookup: { from: "Organisations", localField: "organisation_type", foreignField: "organisation_type", as: "organisation_details" } }, { $match: { "organisation_details.organisation_details": "quo" } }, { $project: { organisation_type_description: 1 } } ])	tracking_grants_for_research
db.Organisation_Types.aggregate([ { $lookup: { from: "Organisations", localField: "organisation_type", foreignField: "organisation_type", as: "organisation_details" } }, { $match: { "organisation_details.organisation_details": "quo" } }, { $project: { organisation_type_description: 1 } } ])	tracking_grants_for_research
db.Organisations.aggregate([ { $lookup: { from: "Organisation_Types", localField: "organisation_type", foreignField: "organisation_type", as: "organisation_type_data" } }, { $unwind: "$organisation_type_data" }, { $match: { "organisation_type_data.organisation_type_description": "Sponsor" } }, { $project: { organisation_details: 1 } }, { $sort: { organisation_details: 1 } } ])	tracking_grants_for_research
db.Organisations.aggregate([ { $lookup: { from: "Organisation_Types", localField: "organisation_type", foreignField: "organisation_type", as: "organisation_type_data" } }, { $unwind: "$organisation_type_data" }, { $match: { "organisation_type_data.organisation_type_description": "Sponsor" } }, { $project: { organisation_details: 1 } }, { $sort: { organisation_details: 1 } } ])	tracking_grants_for_research
db.Projects.aggregate([ { $match: { project_details: 'sint' } }, { $lookup: { from: 'Project_Outcomes', localField: 'project_id', foreignField: 'project_id', as: 'project_outcomes' } }, { $unwind: '$project_outcomes' }, { $lookup: { from: 'Research_Outcomes', localField: 'project_outcomes.outcome_code', foreignField: 'outcome_code', as: 'research_outcomes' } }, { $unwind: '$research_outcomes' }, { $project: { outcome_description: '$research_outcomes.outcome_description' } } ])	tracking_grants_for_research
db.Projects.aggregate([ { $match: { project_details: 'sint' } }, { $lookup: { from: 'Project_Outcomes', localField: 'project_id', foreignField: 'project_id', as: 'project_outcomes' } }, { $unwind: '$project_outcomes' }, { $lookup: { from: 'Research_Outcomes', localField: 'project_outcomes.outcome_code', foreignField: 'outcome_code', as: 'research_outcomes' } }, { $unwind: '$research_outcomes' }, { $project: { outcome_description: '$research_outcomes.outcome_description' } } ])	tracking_grants_for_research
db.Projects.aggregate([ { $lookup: { from: "Project_Outcomes", localField: "project_id", foreignField: "project_id", as: "outcomes" } }, { $group: { _id: "$organisation_id", outcomeCount: { $sum: { $size: "$outcomes" } } } }, { $sort: { outcomeCount: -1 } }, { $limit: 1 }, { $project: { organisation_id: "$_id", outcomeCount: "$outcomeCount" } } ])	tracking_grants_for_research
db.Projects.aggregate([ { $lookup: { from: "Project_Outcomes", localField: "project_id", foreignField: "project_id", as: "outcomes" } }, { $group: { _id: "$organisation_id", numberOfOutcomes: { $sum: { $size: "$outcomes" } } } }, { $sort: { numberOfOutcomes: -1 } }, { $limit: 1 }, { $project: { organisation_id: "$_id", numberOfOutcomes: 1 } } ])	tracking_grants_for_research
db.Projects.aggregate([ { $group: { _id: "$organisation_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Projects", localField: "_id", foreignField: "organisation_id", as: "projects" } }, { $unwind: "$projects" }, { $project: { project_details: "$projects.project_details" } } ])	tracking_grants_for_research
db.Projects.aggregate([ { $group: { _id: "$organisation_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Projects", localField: "_id", foreignField: "organisation_id", as: "projects" } }, { $unwind: "$projects" }, { $project: { project_details: "$projects.project_details" } } ])	tracking_grants_for_research
db.Tasks.aggregate([ { $lookup: { from: "Projects", localField: "project_id", foreignField: "project_id", as: "project_details" } }, { $unwind: "$project_details" }, { $group: { _id: "$project_details.project_id", count: { $sum: 1 }, project_details: { $first: "$project_details.project_details" } } }, { $project: { count: 1, project_details: 1 } } ])	tracking_grants_for_research
db.Projects.aggregate([ { $lookup: { from: "Tasks", localField: "project_id", foreignField: "project_id", as: "tasks" } }, { $project: { project_details: 1, taskCount: { $size: "$tasks" } } } ])	tracking_grants_for_research
db.Research_Outcomes.aggregate([ { $lookup: { from: "Project_Outcomes", localField: "outcome_code", foreignField: "outcome_code", as: "joined_outcomes" } }, { $unwind: "$joined_outcomes" }, { $project: { outcome_description: 1 } } ])	tracking_grants_for_research
db.Research_Outcomes.aggregate([ { $lookup: { from: "Project_Outcomes", localField: "outcome_code", foreignField: "outcome_code", as: "joined" } }, { $unwind: "$joined" }, { $project: { outcome_description: 1 } } ])	tracking_grants_for_research
db.Project_Staff.aggregate([ { $group: { _id: "$role_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { role_code: "$_id" } } ])	tracking_grants_for_research
db.Project_Staff.aggregate([ { $group: { _id: "$role_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { role_code: "$_id" } } ])	tracking_grants_for_research
db.Person.aggregate([ { $group: { _id: null, averageAge: { $avg: "$age" } } } , { $project: { averageAge: 1 } }])	network_2
db.Person.aggregate([ { $group: { _id: null, averageAge: { $avg: "$age" } } } , { $project: { averageAge: 1 } }])	network_2
db.Person.find({}, { name: 1 }).sort({ age: -1 }).limit(1)	network_2
db.Person.find({}, {name: 1}).sort({age: -1}).limit(1)	network_2
db.Person.find({job: 'student'}, {name: 1}).sort({age: -1}).limit(1)	network_2
db.Person.find({job: 'student'}, {name: 1}).sort({age: -1}).limit(1)	network_2
db.Person.find({gender: 'male'}, {name: 1}).sort({age: 1}).limit(1)	network_2
db.Person.find({gender: 'male'}, {name: 1}).sort({age: 1}).limit(1)	network_2
db.Person.find({job: 'doctor', name: 'Zach'}, {age: 1})	network_2
db.Person.find({job: 'doctor', name: 'Zach'}, {age: 1})	network_2
db.Person.find({age: {$lt: 30}}, { name: 1})	network_2
db.Person.find({age: {$lt: 30}}, {name: 1})	network_2
db.Person.aggregate([ { $group: { _id: "$gender", averageAge: { $avg: "$age" } } } ])	network_2
db.Person.aggregate([ { $group: { _id: "$gender", averageAge: { $avg: "$age" } } } ])	network_2
db.Person.aggregate([ { $group: { _id: "$job", averageAge: { $avg: "$age" } } } ])	network_2
db.Person.aggregate([ { $group: { _id: "$job", averageAge: { $avg: "$age" } } } ])	network_2
db.Person.aggregate([ { $match: { gender: "male" } }, { $group: { _id: "$job", averageAge: { $avg: "$age" } } } ])	network_2
db.Person.aggregate([ { $match: { gender: "male" } }, { $group: { _id: "$job", averageAge: { $avg: "$age" } } } ])	network_2
db.Person.aggregate([ { $group: { _id: "$job", minAge: { $min: "$age" } } } ])	network_2
db.Person.aggregate([ { $group: { _id: "$job", youngest: { $min: "$age" } } } ])	network_2
db.Person.aggregate([ { $match: { age: { $lt: 40 } } }, { $group: { _id: "$gender", count: { $sum: 1 } } } ])	network_2
db.Person.aggregate([ { $match: { age: { $lt: 40 } } }, { $group: { _id: "$gender", count: { $sum: 1 } } } ])	network_2
db.Person.aggregate([ { $match: { age: { $gt: db.Person.findOne({ job: "engineer" }).age } } }, { $sort: { age: 1 } }, { $project: { name: 1 } } ])	network_2
db.Person.aggregate([ { $match: { job: "engineer" } }, { $group: { _id: null, minAge: { $min: "$age" } } }, { $lookup: { from: "Person", let: { minAge: "$minAge" }, pipeline: [ { $match: { $expr: { $gt: [ "$age", "$$minAge" ] } } }, { $project: { name: 1 } }, { $sort: { age: 1 } } ], as: "olderThanEngineer" } }, { $unwind: "$olderThanEngineer" }, { $replaceRoot: { newRoot: "$olderThanEngineer" } } ])	network_2
db.Person.aggregate([ { $match: { job: "engineer" } }, { $group: { _id: null, maxAge: { $max: "$age" } } }, { $lookup: { from: "Person", let: { maxAge: "$maxAge" }, pipeline: [ { $match: { $expr: { $gt: [ "$age", "$$maxAge" ] } } }, { $count: "count" } ], as: "count" } }, { $unwind: "$count" }, { $project: { count: "$count.count" } } ])	network_2
db.Person.find({}, {name: 1, job: 1}).sort({name: 1})	network_2
db.Person.find({}, {name: 1, job: 1}).sort({name: 1})	network_2
db.Person.find({}, {name: 1}).sort({age: -1})	network_2
db.Person.find({}, {name: 1}).sort({age: -1})	network_2
db.Person.find({ gender: 'male' }, { name: 1 }).sort({ age: 1 })	network_2
db.Person.find({gender: 'male'}, {name: 1}).sort({age: 1})	network_2
db.Person.aggregate([ { $lookup: { from: "PersonFriend", localField: "name", foreignField: "name", as: "friends" } }, { $match: { "friends.friend": { $all: ["Dan", "Alice"] } } }, { $project: { name: 1, age: 1 } } ])	network_2
db.Person.aggregate([ { $lookup: { from: "PersonFriend", localField: "name", foreignField: "name", as: "friends" } }, { $match: { "friends.friend": { $all: ["Dan", "Alice"] } } }, { $project: { name: 1, age: 1 } } ])	network_2
db.PersonFriend.aggregate([ { $lookup: { from: "Person", localField: "friend", foreignField: "name", as: "friendDetails" } }, { $match: { "friendDetails.age": { $gt: 40 } } }, { $group: { _id: "$name", friendsAge: { $push: "$friendDetails.age" } } }, { $match: { friendsAge: { $not: { $elemMatch: { $lt: 30 } } } } }, { $project: { _id: 1 } } ])	network_2
db.PersonFriend.aggregate([ { $group: { _id: "$name", count: { $sum: 1 } } }, { $match: { count: 1 } }, { $project: { name: "$_id" } } ])	network_2
db.PersonFriend.aggregate([ { $group: { _id: "$name", count: { $sum: 1 } } }, { $match: { count: 1 } }, { $project: { name: "$_id" } } ])	network_2
db.PersonFriend.aggregate([ { $match: { name: "Bob" } }, { $project: { friend: 1 } } ])	network_2
db.PersonFriend.find({name: 'Bob'}, { friend: 1})	network_2
db.Person.aggregate([ { $lookup: { from: "PersonFriend", localField: "name", foreignField: "name", as: "friends" } }, { $unwind: "$friends" }, { $match: { "friends.friend": "Bob" } }, { $project: { name: 1 } } ])	network_2
db.Person.aggregate([ { $lookup: { from: "PersonFriend", localField: "name", foreignField: "name", as: "friends" } }, { $match: { "friends.friend": "Bob" } }, { $project: { name: 1 } } ])	network_2
db.Person.aggregate([ { $match: { city: 'new york city' } }, { $lookup: { from: 'PersonFriend', localField: 'name', foreignField: 'friend', as: 'friends' } }, { $unwind: '$friends' }, { $project: { name: '$friends.name' } } ])	network_2
db.PersonFriend.find( { name: 'Zach' }, { friend: 1 } ).sort({ year: -1 }).limit(1)	network_2
db.PersonFriend.aggregate([ { $match: { name: "Zach" } }, { $sort: { year: -1 } }, { $limit: 1 }, { $project: { friend: 1 } } ])	network_2
db.PersonFriend.aggregate([ { $match: { name: 'Zach' } }, { $group: { _id: '$name', latestYear: { $max: '$year' } } }, { $lookup: { from: 'PersonFriend', localField: 'latestYear', foreignField: 'year', as: 'friends' } }, { $unwind: '$friends' }, { $match: { 'friends.name': 'Zach' } }, { $lookup: { from: 'Person', localField: 'friends.friend', foreignField: 'name', as: 'friend_details' } }, { $unwind: '$friend_details' }, { $project: { age: '$friend_details.age' } } ])	network_2
db.PersonFriend.aggregate([ { $match: { name: "Zach" } }, { $group: { _id: "$name", maxYear: { $max: "$year" } } }, { $lookup: { from: "PersonFriend", localField: "maxYear", foreignField: "year", as: "longestRelation" } }, { $unwind: "$longestRelation" }, { $match: { "longestRelation.name": "Zach" } }, { $lookup: { from: "Person", localField: "longestRelation.friend", foreignField: "name", as: "friendDetails" } }, { $unwind: "$friendDetails" }, { $project: { age: "$friendDetails.age" } } ])	network_2
db.PersonFriend.aggregate([ { $match: { friend: 'Alice' } }, { $group: { _id: null, minYear: { $min: '$year' } } }, { $lookup: { from: "PersonFriend", let: { minYear: '$minYear' }, pipeline: [ { $match: { $expr: { $and: [ { $eq: ['$friend', 'Alice'] }, { $eq: ['$year', '$$minYear'] } ] } } }, { $project: { name: 1 } } ], as: "shortestFriendship" } }, { $unwind: "$shortestFriendship" }, { $replaceRoot: { newRoot: "$shortestFriendship" } } ])	network_2
db.PersonFriend.aggregate([ { $match: { friend: "Alice" } }, { $group: { _id: null, minYear: { $min: "$year" } } }, { $lookup: { from: "PersonFriend", localField: "minYear", foreignField: "year", as: "shortestFriends" } }, { $unwind: "$shortestFriends" }, { $match: { "shortestFriends.friend": "Alice" } }, { $project: { name: "$shortestFriends.name" } } ])	network_2
db.Person.aggregate([ { $lookup: { from: "PersonFriend", localField: "name", foreignField: "name", as: "friends" } }, { $unwind: "$friends" }, { $match: { "friends.friend": "Alice" } }, { $sort: { "friends.year": -1 } }, { $limit: 1 }, { $project: { name: 1, age: 1, job: 1 } } ])	network_2
db.Person.find({ name: { $nin: db.PersonFriend.distinct("name") } }, { name: 1 })	network_2
db.Person.aggregate([ { $lookup: { from: "PersonFriend", localField: "name", foreignField: "name", as: "friends" } }, { $match: { "friends": { $size: 0 } } }, { $project: { name: 1 } } ])	network_2
db.Person.aggregate([ { $lookup: { from: "PersonFriend", localField: "name", foreignField: "friend", as: "friends" } }, { $unwind: "$friends" }, { $group: { _id: "$friends.name", avgAge: { $avg: "$age" } } }, { $sort: { avgAge: -1 } }, { $limit: 1 } ])	network_2
db.PersonFriend.aggregate([ { $match: { name: "Alice" } }, { $lookup: { from: "PersonFriend", localField: "friend", foreignField: "name", as: "friend_of_friend" } }, { $unwind: "$friend_of_friend" }, { $lookup: { from: "Person", localField: "friend_of_friend.friend", foreignField: "name", as: "friend_of_friend_info" } }, { $unwind: "$friend_of_friend_info" }, { $match: { "friend_of_friend_info.name": { $ne: "Alice" } } }, { $project: { name: "$friend_of_friend_info.name" } } ])	network_2
db.PersonFriend.aggregate([ { $match: { name: "Alice" } }, { $lookup: { from: "PersonFriend", localField: "friend", foreignField: "name", as: "friend_of_friend" } }, { $unwind: "$friend_of_friend" }, { $lookup: { from: "Person", localField: "friend_of_friend.friend", foreignField: "name", as: "friend_of_friend_info" } }, { $unwind: "$friend_of_friend_info" }, { $match: { "friend_of_friend_info.name": { $ne: "Alice" } } }, { $project: { name: "$friend_of_friend_info.name" } } ])	network_2
db.member.find({}, {Name: 1}).sort({Name: 1})	decoration_competition
db.member.find({}, { Name: 1, Country: 1})	decoration_competition
db.member.find({ Country: { $in: ["United States", "Canada"] } }, { Name: 1 })	decoration_competition
db.member.aggregate([ { $group: { _id: "$Country", count: { $sum: 1 } } }, { $project: { Country: "$_id", count: 1 } } ])	decoration_competition
db.member.aggregate([ { $group: { _id: "$Country", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { country: "$_id" } } ])	decoration_competition
db.member.aggregate([ { $group: { _id: "$Country", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { country: "$_id" } } ])	decoration_competition
db.college.find({}, {Leader_Name: 1, College_Location: 1})	decoration_competition
db.member.aggregate([ { $lookup: { from: "college", localField: "College_ID", foreignField: "College_ID", as: "college_info" } }, { $project: { "Name": 1, "college_info.Name": 1 } }, { $unwind: "$college_info" }, { $project: { "MemberName": "$Name", "CollegeName": "$college_info.Name" } } ])	decoration_competition
db.college.aggregate([ { $lookup: { from: "member", localField: "College_ID", foreignField: "College_ID", as: "members" } }, { $unwind: "$members" }, { $project: { "Member Name": "$members.Name", "College Location": "$College_Location" } }, { $sort: { "Member Name": 1 } } ])	decoration_competition
db.college.aggregate([ { $lookup: { from: "member", localField: "College_ID", foreignField: "College_ID", as: "members" } }, { $unwind: "$members" }, { $match: { "members.Country": "Canada" } }, { $group: { _id: "$Leader_Name" } }, { $project: { Leader_Name: "$_id" } } ])	decoration_competition
db.member.aggregate([ { $lookup: { from: "round", localField: "Member_ID", foreignField: "Member_ID", as: "round_info" } }, { $project: { Name: 1, "round_info.Decoration_Theme": 1 } }, { $unwind: "$round_info" }, { $project: { Name: 1, Decoration_Theme: "$round_info.Decoration_Theme" } } ])	decoration_competition
db.member.aggregate([ { $lookup: { from: "round", localField: "Member_ID", foreignField: "Member_ID", as: "round_info" } }, { $unwind: "$round_info" }, { $match: { "round_info.Rank_in_Round": { $gt: 3 } } }, { $project: { Name: 1 } } ])	decoration_competition
db.member.aggregate([ { $lookup: { from: "round", localField: "Member_ID", foreignField: "Member_ID", as: "round_info" } }, { $unwind: "$round_info" }, { $sort: { "round_info.Rank_in_Round": 1 } }, { $project: { Name: 1 } } ])	decoration_competition
db.member.find({ Member_ID: { $nin: db.round.distinct("Member_ID") } }, { Name: 1 })	decoration_competition
db.Documents.find({}, { document_name: 1, access_count: 1 }).sort({ document_name: 1 })	document_management
db.Documents.find({}, { document_name: 1, access_count: 1 }).sort({ document_name: 1 })	document_management
db.Documents.find({}, { document_name: 1, access_count: 1 }).sort({ access_count: -1 }).limit(1)	document_management
db.Documents.find({}, { document_name: 1, access_count: 1 }).sort({ access_count: -1 }).limit(1)	document_management
db.Documents.aggregate([ { $group: { _id: "$document_type_code", count: { $sum: 1 } } }, { $match: { count: { $gt: 4 } } }, { $project: { _id: 1 } } ])	document_management
db.Documents.aggregate([ { $group: { _id: "$document_type_code", totalAccess: { $sum: "$access_count" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { totalAccess: 1 } } ])	document_management
db.Documents.aggregate([ { $group: { _id: "$document_type_code", totalAccess: { $sum: "$access_count" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { totalAccess: 1 } } ])	document_management
db.Documents.aggregate([ { $group: { _id: null, averageAccessCount: { $avg: "$access_count" } } }, { $project: { averageAccessCount: 1 } } ])	document_management
db.Documents.aggregate([ { $group: { _id: null, averageAccessCount: { $avg: "$access_count" } } }, { $project: { averageAccessCount: 1 } } ])	document_management
db.Documents.aggregate([ { $group: { _id: "$document_structure_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Document_Structures", localField: "_id", foreignField: "document_structure_code", as: "structure_info" } }, { $unwind: "$structure_info" }, { $project: { document_structure_description: "$structure_info.document_structure_description" } } ])	document_management
db.Documents.findOne({ document_name: 'David CV' }, { document_type_code: 1 })	document_management
db.Documents.findOne({ document_name: 'David CV' }, { document_type_code: 1 })	document_management
db.Documents.aggregate([ { $group: { _id: "$document_type_code", totalAccess: { $sum: "$access_count" } }}, { $match: { totalAccess: { $gt: 10000 } }}, { $project: { _id: 1 }} ])	document_management
db.Documents.aggregate([ { $lookup: { from: "Document_Sections", localField: "document_code", foreignField: "document_code", as: "section" } }, { $match: { "section": { $size: 0 } } }, { $project: { document_name: 1 } } ])	document_management
db.Documents.aggregate([ { $lookup: { from: "Document_Sections", localField: "document_code", foreignField: "document_code", as: "sections" } }, { $match: { sections: { $size: 0 } } }, { $project: { document_name: 1 } } ])	document_management
db.Documents.aggregate([ { $lookup: { from: "Document_Functional_Areas", localField: "document_code", foreignField: "document_code", as: "document_functional_areas" } }, { $unwind: "$document_functional_areas" }, { $lookup: { from: "Functional_Areas", localField: "document_functional_areas.functional_area_code", foreignField: "functional_area_code", as: "functional_areas" } }, { $unwind: "$functional_areas" }, { $match: { "functional_areas.functional_area_description": "Acknowledgement" } }, { $group: { _id: null, averageAccessCount: { $avg: "$access_count" } } }, { $project: { averageAccessCount: 1 } } ])	document_management
db.Documents.aggregate([ { $lookup: { from: "Document_Functional_Areas", localField: "document_code", foreignField: "document_code", as: "document_functional_areas" } }, { $unwind: "$document_functional_areas" }, { $lookup: { from: "Functional_Areas", localField: "document_functional_areas.functional_area_code", foreignField: "functional_area_code", as: "functional_areas" } }, { $unwind: "$functional_areas" }, { $match: { "functional_areas.functional_area_description": "Acknowledgement" } }, { $group: { _id: null, averageAccessCount: { $avg: "$access_count" } } }, { $project: { averageAccessCount: 1 } } ])	document_management
db.Documents.find({document_name: /CV/}, {document_name: 1})	document_management
db.Documents.find( { document_name: /CV/ }, { document_name: 1 } )	document_management
db.Images.find({}, {image_name: 1, image_url: 1}).sort({image_name: 1})	document_management
db.Images.find({}, {image_name: 1, image_url: 1}).sort({image_name: 1})	document_management
db.Users.aggregate([ { $group: { _id: "$role_code", count: { $sum: 1 } } } ])	document_management
db.Users.aggregate([ { $group: { _id: "$role_code", count: { $sum: 1 } } } ])	document_management
db.Documents.aggregate([ { $group: { _id: "$document_type_code", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { _id: 1 } } ])	document_management
db.Companies.find({}, {name: 1}).sort({Market_Value_billion: -1})	company_office
db.Companies.find({}, {name: 1}).sort({Market_Value_billion: -1})	company_office
db.Companies.find({Headquarters: {$ne: 'USA'}}, { name: 1})	company_office
db.Companies.find({Headquarters: {$ne: 'USA'}}, {name: 1})	company_office
db.Companies.find({}, {name: 1, Assets_billion: 1}).sort({name: 1})	company_office
db.Companies.find({}, {name: 1, Assets_billion: 1}).sort({name: 1})	company_office
db.Companies.aggregate([ { $group: { _id: null, averageProfits: { $avg: "$Profits_billion" } } }, { $project: { averageProfits: 1} } ])	company_office
db.Companies.aggregate([ { $group: { _id: null, averageProfits: { $avg: "$Profits_billion" } } }, { $project: { averageProfits: 1 } } ])	company_office
db.Companies.aggregate([ { $match: { Industry: { $ne: 'Banking' } } }, { $group: { _id: null, maxSales: { $max: "$Sales_billion" }, minSales: { $min: "$Sales_billion" } } }, { $project: { maxSales: 1, minSales: 1 } } ])	company_office
db.Companies.aggregate([ { $match: { Industry: { $ne: 'Banking' } } }, { $group: { _id: null, maxSales: { $max: "$Sales_billion" }, minSales: { $min: "$Sales_billion" } } }, { $project: { maxSales: 1, minSales: 1 } } ])	company_office
db.buildings.find({}, {name: 1}).sort({Height: -1})	company_office
db.buildings.find({}, {name: 1}).sort({Height: -1})	company_office
db.buildings.find({}, {Stories: 1}).sort({Height: -1}).limit(1)	company_office
db.buildings.find({}, {Stories: 1}).sort({Height: -1}).limit(1)	company_office
db.Office_locations.aggregate([ { $lookup: { from: "buildings", localField: "building_id", foreignField: "id", as: "building_info" } }, { $lookup: { from: "Companies", localField: "company_id", foreignField: "id", as: "company_info" } }, { $unwind: "$building_info" }, { $unwind: "$company_info" }, { $project: { "company_name": "$company_info.name", "building_name": "$building_info.name" } } ])	company_office
db.Office_locations.aggregate([ { $lookup: { from: "buildings", localField: "building_id", foreignField: "id", as: "building" } }, { $unwind: "$building" }, { $group: { _id: "$building.id", name: { $first: "$building.name" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { name: 1 } } ])	company_office
db.buildings.find( { Status: 'on-hold' }, { name: 1 } ).sort({ Stories: 1 })	company_office
db.buildings.find( { Status: 'on-hold' }, { name: 1 } ).sort({ Stories: 1 })	company_office
db.Companies.aggregate([ { $group: { _id: "$Industry", count: { $sum: 1 } } }, { $project: { Industry: "$_id", count: 1 } } ])	company_office
db.Companies.aggregate([ { $group: { _id: "$Industry", count: { $sum: 1 } } }, { $project: { Industry: "$_id", count: 1 } } ])	company_office
db.Companies.aggregate([ { $group: { _id: "$Industry", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $project: { Industry: "$_id" } } ])	company_office
db.Companies.aggregate([ { $group: { _id: "$Industry", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $project: { Industry: "$_id"} } ])	company_office
db.Companies.aggregate([ { $group: { _id: "$Industry", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Industry: "$_id" } } ])	company_office
db.Companies.aggregate([ { $group: { _id: "$Industry", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Industry: "$_id" } } ])	company_office
db.buildings.aggregate([ { $lookup: { from: "Office_locations", localField: "id", foreignField: "building_id", as: "office_info" } }, { $match: { office_info: { $size: 0 } } }, { $project: { name: 1 } } ])	company_office
db.buildings.aggregate([ { $lookup: { from: "Office_locations", localField: "id", foreignField: "building_id", as: "offices" } }, { $match: { "offices": { $size: 0 } } }, { $project: { "name": 1, "_id": 0 } } ])	company_office
db.Companies.aggregate([ { $facet: { "USA": [ { $match: { Headquarters: "USA" } }, { $group: { _id: "$Industry" } } ], "China": [ { $match: { Headquarters: "China" } }, { $group: { _id: "$Industry" } } ] } }, { $project: { commonIndustries: { $setIntersection: ["$USA._id", "$China._id"] } } }, { $unwind: "$commonIndustries" }, { $replaceRoot: { newRoot: { Industry: "$commonIndustries" }}} ])	company_office
db.Companies.aggregate([ { $match: { $or: [ { Headquarters: "USA" }, { Headquarters: "China" } ] } }, { $group: { _id: "$Industry", headquarters: { $addToSet: "$Headquarters" } } }, { $match: { headquarters: { $all: ["USA", "China"] } } }, { $project: { Industry: "$_id" } } ])	company_office
db.Companies.aggregate([ { $group: { _id: "$Headquarters", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Headquarters: "$_id" } } ])	company_office
db.Companies.aggregate([ { $group: { _id: "$Headquarters", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Headquarters: "$_id" } } ])	company_office
db.Products.find({}, {Product_Name: 1}).sort({Product_Price: 1})	solvency_ii
db.Products.find({}, {Product_Name: 1, Product_Type_Code: 1})	solvency_ii
db.Products.find( { Product_Name: { $in: ["Dining", "Trading Policy"] } }, { Product_Price: 1 } )	solvency_ii
db.Products.aggregate([ { $group: { _id: null, averagePrice: { $avg: "$Product_Price" } } }, { $project: { averagePrice: 1} } ])	solvency_ii
db.Products.find({}, { Product_Name: 1 }).sort({ Product_Price: -1 }).limit(1)	solvency_ii
db.Products.aggregate([ { $group: { _id: "$Product_Type_Code", count: { $sum: 1 } } } ])	solvency_ii
db.Products.aggregate([ { $group: { _id: "$Product_Type_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { product_type_code: "$_id" } }])	solvency_ii
db.Products.aggregate([ { $group: { _id: "$Product_Type_Code", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Product_Type_Code: "$_id" } } ])	solvency_ii
db.Products.aggregate([ { $group: { _id: "$Product_Type_Code", highPrice: { $max: "$Product_Price" }, lowPrice: { $min: "$Product_Price" } } }, { $match: { highPrice: { $gt: 4500 }, lowPrice: { $lt: 3000 } } }, { $project: { Product_Type_Code: "$_id" } } ])	solvency_ii
db.Products.find( { Product_ID: { $nin: db.Products_in_Events.distinct("Product_ID") } }, { Product_Name: 1 } )	solvency_ii
db.artwork.find({}, { Name: 1}).sort({Name: 1})	entertainment_awards
db.artwork.find( { Type: { $ne: 'Program Talent Show' } }, { Name: 1 } )	entertainment_awards
db.festival_detail.find({}, {Festival_Name: 1, Location: 1})	entertainment_awards
db.festival_detail.find({}, {Chair_Name: 1}).sort({Year: 1})	entertainment_awards
db.festival_detail.find({}, { Location: 1}).sort({Num_of_Audience: -1}).limit(1)	entertainment_awards
db.festival_detail.find({Year: 2007}, {Festival_Name: 1})	entertainment_awards
db.festival_detail.aggregate([ { $group: { _id: null, averageAudience: { $avg: "$Num_of_Audience" } } } ,{ $project: { averageAudience: 1 } }])	entertainment_awards
db.nomination.aggregate([ { $lookup: { from: "artwork", localField: "Artwork_ID", foreignField: "Artwork_ID", as: "artwork_info" } }, { $lookup: { from: "festival_detail", localField: "Festival_ID", foreignField: "Festival_ID", as: "festival_info" } }, { $project: { "artwork_name": "$artwork_info.Name", "festival_name": "$festival_info.Festival_Name", "_id": 0 } }, { $unwind: "$artwork_name" }, { $unwind: "$festival_name" } ])	entertainment_awards
db.artwork.aggregate([ { $lookup: { from: "nomination", localField: "Artwork_ID", foreignField: "Artwork_ID", as: "nomination_info" } }, { $unwind: "$nomination_info" }, { $lookup: { from: "festival_detail", localField: "nomination_info.Festival_ID", foreignField: "Festival_ID", as: "festival_info" } }, { $unwind: "$festival_info" }, { $match: { "festival_info.Year": 2007 } }, { $group: { _id: "$Type" } }, { $project: { Type: "$_id" } } ])	entertainment_awards
db.nomination.aggregate([ { $lookup: { from: "artwork", localField: "Artwork_ID", foreignField: "Artwork_ID", as: "artwork_info" } }, { $lookup: { from: "festival_detail", localField: "Festival_ID", foreignField: "Festival_ID", as: "festival_info" } }, { $unwind: "$artwork_info" }, { $unwind: "$festival_info" }, { $project: { Name: "$artwork_info.Name"} }, { $sort: { Year: 1 } } ])	entertainment_awards
db.festival_detail.aggregate([ { $lookup: { from: "nomination", localField: "Festival_ID", foreignField: "Festival_ID", as: "nomination_info" } }, { $unwind: "$nomination_info" }, { $lookup: { from: "artwork", localField: "nomination_info.Artwork_ID", foreignField: "Artwork_ID", as: "artwork_info" } }, { $unwind: "$artwork_info" }, { $match: { "artwork_info.Type": "Program Talent Show" } }, { $project: { "_id": 0, "Festival_Name": 1 } } ])	entertainment_awards
db.nomination.aggregate([ { $lookup: { from: "artwork", localField: "Artwork_ID", foreignField: "Artwork_ID", as: "artwork_info" } }, { $lookup: { from: "festival_detail", localField: "Festival_ID", foreignField: "Festival_ID", as: "festival_info" } }, { $unwind: "$festival_info" }, { $group: { _id: "$Festival_ID", Festival_Name: { $first: "$festival_info.Festival_Name" }, count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Festival_ID: "$_id", Festival_Name: 1 } } ])	entertainment_awards
db.nomination.aggregate([ { $lookup: { from: "artwork", localField: "Artwork_ID", foreignField: "Artwork_ID", as: "artwork_info" } }, { $lookup: { from: "festival_detail", localField: "Festival_ID", foreignField: "Festival_ID", as: "festival_info" } }, { $unwind: "$festival_info" }, { $group: { _id: "$Festival_ID", Festival_Name: { $first: "$festival_info.Festival_Name" }, count: { $sum: 1 } } }, { $project: { _id: 1, Festival_Name: 1, count: 1 } } ])	entertainment_awards
db.artwork.aggregate([ { $group: { _id: "$Type", count: { $sum: 1 } } } ])	entertainment_awards
db.artwork.aggregate([ { $group: { _id: "$Type", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 },{ $project: { type: "$_id" } } ])	entertainment_awards
db.festival_detail.aggregate([ { $group: { _id: "$Year", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Year: "$_id" } } ])	entertainment_awards
db.artwork.aggregate([ { $lookup: { from: "nomination", localField: "Artwork_ID", foreignField: "Artwork_ID", as: "nominations" } }, { $match: { nominations: { $size: 0 } } }, { $project: { Name: 1 } } ])	entertainment_awards
db.festival_detail.find( { Year: { $in: [2008, 2010] } }, { Num_of_Audience: 1 } )	entertainment_awards
db.festival_detail.aggregate([ { $group: { _id: null, total_audience: { $sum: "$Num_of_Audience" } } }, { $project: { total_audience: 1 } } ])	entertainment_awards
db.Premises.find({}, { premises_type: 1, premise_details: 1}).sort({premises_type: 1})	customers_campaigns_ecommerce
db.Premises.aggregate([ { $group: { _id: '$premises_type', count: { $sum: 1 } } }, { $project: { premises_type: '$_id', count: 1 } } ])	customers_campaigns_ecommerce
db.Mailshot_Campaigns.aggregate([ { $group: { _id: "$product_category", count: { $sum: 1 } } } ])	customers_campaigns_ecommerce
db.Customers.find( { customer_id: { $nin: db.Mailshot_Customers.distinct("customer_id") } }, { customer_name: 1, customer_phone: 1 } )	customers_campaigns_ecommerce
db.Mailshot_Customers.aggregate([ { $group: { _id: "$outcome_code", count: { $sum: 1 } } }, { $project: { outcome_code: "$_id", count: 1 } } ])	customers_campaigns_ecommerce
db.Customer_Addresses.aggregate([ { $lookup: { from: "Premises", localField: "premise_id", foreignField: "premise_id", as: "premise_details" } }, { $project: { premises_type: "$premise_details.premises_type", address_type_code: 1 } }, { $unwind: "$premises_type" } ])	customers_campaigns_ecommerce
db.Customer_Orders.find( { order_status_code: { $in: ['Cancelled', 'Paid'] } }, { order_shipping_charges: 1, customer_id: 1 } )	customers_campaigns_ecommerce
db.Course.find({Credits: 1}, {CName: 1})	college_3
db.Course.find({Credits: 1}, {CName: 1})	college_3
db.Department.find({ Room: "268" }, { DPhone: 1 })	college_3
db.Department.find({ Room: "268" }, { DPhone: 1 })	college_3
db.Enrolled_in.aggregate([ { $match: { Grade: 'B' } }, { $group: { _id: "$StuID" } }, { $count: "numberOfStudents" } ])	college_3
db.Enrolled_in.aggregate([ { $match: { Grade: 'B' } }, { $group: { _id: "$StuID" } }, { $count: "NumStudentsWithB" } ])	college_3
db.Gradeconversion.aggregate([ { $group: { _id: null, max_gradepoint: { $max: "$gradepoint" }, min_gradepoint: { $min: "$gradepoint" } } }, { $project: { max_gradepoint: 1, min_gradepoint: 1 } } ])	college_3
db.Gradeconversion.aggregate([ { $group: { _id: null, max_gradepoint: { $max: "$gradepoint" }, min_gradepoint: { $min: "$gradepoint" } } }, { $project: { max_gradepoint: 1, min_gradepoint: 1 } } ])	college_3
db.Faculty.find( { "Sex": "M", "Building": "NEB" }, { "Fname": 1, "Lname": 1, "_id": 0 } )	college_3
db.Faculty.find({ Sex: 'M', Building: 'NEB' }, { Fname: 1, Lname: 1 })	college_3
db.Faculty.find( { Rank: 'Professor', Building: 'NEB' }, { Room: 1 } )	college_3
db.Faculty.find({ Rank: 'Professor', Building: 'NEB' }, { Room: 1 })	college_3
db.Department.find({Building: 'Mergenthaler'}, {DName: 1})	college_3
db.Department.find({Building: 'Mergenthaler'}, {DName: 1})	college_3
db.Student.find({ Sex: 'F' }, { LName: 1 }).sort({ Age: -1 })	college_3
db.Student.find({ Sex: 'F' }, { LName: 1 }).sort({ Age: -1 })	college_3
db.Faculty.find({Building: 'Barton'}, {Lname: 1}).sort({Lname: 1})	college_3
db.Faculty.find({Building: 'Barton'}, {Lname: 1}).sort({Lname: 1})	college_3
db.Department.aggregate([ { $lookup: { from: "Minor_in", localField: "DNO", foreignField: "DNO", as: "Minors" } }, { $unwind: "$Minors" }, { $group: { _id: "$DNO", DName: { $first: "$DName" }, NumberOfMinors: { $sum: 1 } } }, { $sort: { NumberOfMinors: -1 } }, { $limit: 1 }, { $project: { DName: 1 } } ])	college_3
db.Department.find({ DNO: { $nin: db.Minor_in.distinct("DNO") } }, { DName: 1 })	college_3
db.Department.aggregate([ { $lookup: { from: "Minor_in", localField: "DNO", foreignField: "DNO", as: "minoring" } }, { $match: { "minoring": { $size: 0 } } }, { $project: { DName: 1 } } ])	college_3
db.Faculty.aggregate([ { $group: { _id: "$Rank", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { Rank: "$_id" } } ])	college_3
db.Faculty.aggregate([ { $group: { _id: "$Rank", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { Rank: "$_id" } } ])	college_3
db.Faculty.aggregate([ { $lookup: { from: "Course", localField: "FacID", foreignField: "Instructor", as: "CoursesTaught" } }, { $project: { Fname: 1, Lname: 1, numCourses: { $size: "$CoursesTaught" } } }, { $sort: { numCourses: -1 } }, { $limit: 3 }, { $project: { Fname: 1, Lname: 1 } } ])	college_3
db.Faculty.aggregate([ { $lookup: { from: "Course", localField: "FacID", foreignField: "Instructor", as: "CoursesTaught" } }, { $project: { Fname: 1, Lname: 1, numCourses: { $size: "$CoursesTaught" } } }, { $sort: { numCourses: -1 } }, { $limit: 3 }, { $project: { Fname: 1, Lname: 1 } } ])	college_3
db.Course.aggregate([ { $lookup: { from: "Faculty", localField: "Instructor", foreignField: "FacID", as: "instructor_info" } }, { $unwind: "$instructor_info" }, { $group: { _id: "$instructor_info.FacID", building: { $first: "$instructor_info.Building" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { building: 1 } } ])	college_3
db.Course.aggregate([ { $lookup: { from: "Enrolled_in", localField: "CID", foreignField: "CID", as: "enrollments" } }, { $match: { "enrollments.4": { $exists: true } } }, { $project: { CName: 1 } } ])	college_3
db.Faculty.aggregate([ { $lookup: { from: "Course", localField: "FacID", foreignField: "Instructor", as: "course_info" } }, { $unwind: "$course_info" }, { $match: { "course_info.CName": "COMPUTER LITERACY" } }, { $project: { Fname: 1, Lname: 1 } } ])	college_3
db.Faculty.aggregate([ { $lookup: { from: "Course", localField: "FacID", foreignField: "Instructor", as: "CourseInfo" } }, { $match: { "CourseInfo.CName": "COMPUTER LITERACY" } }, { $project: { Fname: 1, Lname: 1 } } ])	college_3
db.Course.aggregate([ { $match: { CName: "INTRODUCTION TO COMPUTER SCIENCE" } }, { $lookup: { from: "Department", localField: "DNO", foreignField: "DNO", as: "department_info" } }, { $unwind: "$department_info" }, { $project: { DName: "$department_info.DName", Room: "$department_info.Room" } } ])	college_3
db.Course.aggregate([ { $match: { CName: "INTRODUCTION TO COMPUTER SCIENCE" } }, { $lookup: { from: "Department", localField: "DNO", foreignField: "DNO", as: "department" } }, { $unwind: "$department" }, { $project: { DName: "$department.DName", Room: "$department.Room" } } ])	college_3
db.Department.aggregate([ { $match: { DName: "Computer Science" } }, { $lookup: { from: "Member_of", localField: "DNO", foreignField: "DNO", as: "members" } }, { $unwind: "$members" }, { $lookup: { from: "Faculty", localField: "members.FacID", foreignField: "FacID", as: "faculty" } }, { $unwind: "$faculty" }, { $project: { Lname: "$faculty.Lname" } } ])	college_3
db.Department.aggregate([ { $match: { DName: "Computer Science" } }, { $lookup: { from: "Member_of", localField: "DNO", foreignField: "DNO", as: "member_of_data" } }, { $unwind: "$member_of_data" }, { $lookup: { from: "Faculty", localField: "member_of_data.FacID", foreignField: "FacID", as: "faculty_data" } }, { $unwind: "$faculty_data" }, { $project: { Lname: "$faculty_data.Lname" } } ])	college_3
db.Student.aggregate([ { $match: { LName: "Smith" } }, { $lookup: { from: "Enrolled_in", localField: "StuID", foreignField: "StuID", as: "enrollments" } }, { $unwind: "$enrollments" }, { $lookup: { from: "Gradeconversion", localField: "enrollments.Grade", foreignField: "lettergrade", as: "enrollments.grade_info" } }, { $unwind: "$enrollments.grade_info" }, { $group: { _id: null, avgGradePoint: { $avg: "$enrollments.grade_info.gradepoint" } } } , { $project: { avgGradePoint:1 } }])	college_3
db.Enrolled_in.aggregate([ { $lookup: { from: "Gradeconversion", localField: "Grade", foreignField: "lettergrade", as: "grade_info" } }, { $unwind: "$grade_info" }, { $lookup: { from: "Student", localField: "StuID", foreignField: "StuID", as: "student_info" } }, { $unwind: "$student_info" }, { $match: { "student_info.LName": "Smith" } }, { $group: { _id: null, averageGradepoint: { $avg: "$grade_info.gradepoint" } } }, { $project: { averageGradepoint: 1 } } ])	college_3
db.Enrolled_in.aggregate([ { $lookup: { from: "Student", localField: "StuID", foreignField: "StuID", as: "student_info" } }, { $unwind: "$student_info" }, { $lookup: { from: "Gradeconversion", localField: "Grade", foreignField: "lettergrade", as: "grade_info" } }, { $unwind: "$grade_info" }, { $match: { "student_info.city_code": "NYC" } }, { $group: { _id: null, maxGradePoint: { $max: "$grade_info.gradepoint" }, minGradePoint: { $min: "$grade_info.gradepoint" } } }, { $project: { maxGradePoint: 1, minGradePoint: 1 } } ])	college_3
db.Enrolled_in.aggregate([ { $lookup: { from: "Gradeconversion", localField: "Grade", foreignField: "lettergrade", as: "grade_info" } }, { $unwind: "$grade_info" }, { $lookup: { from: "Student", localField: "StuID", foreignField: "StuID", as: "student_info" } }, { $unwind: "$student_info" }, { $match: { "student_info.city_code": "NYC" } }, { $group: { _id: null, maxGradePoint: { $max: "$grade_info.gradepoint" }, minGradePoint: { $min: "$grade_info.gradepoint" } } }, { $project: { maxGradePoint: 1, minGradePoint: 1 } } ])	college_3
db.Product_Suppliers.aggregate([ { $sort: { total_amount_purchased: -1 } }, { $limit: 3 }, { $project: { product_id: 1 } } ])	department_store
db.Product_Suppliers.aggregate([ { $sort: { total_amount_purchased: -1 } }, { $limit: 3 }, { $project: { product_id: 1 } } ])	department_store
db.Products.aggregate([ { $sort: { product_price: 1 } }, { $limit: 1 }, { $project: { product_id: 1, product_type_code: 1 } } ])	department_store
db.Products.aggregate([ { $sort: { product_price: 1 } }, { $limit: 1 }, { $project: { product_id: 1, product_type_code: 1 } } ])	department_store
db.Addresses.aggregate([ { $lookup: { from: "Customer_Addresses", localField: "address_id", foreignField: "address_id", as: "customer_addresses" } }, { $match: { "customer_addresses.customer_id": 10 } }, { $project: { address_details: 1 } } ])	department_store
db.Addresses.aggregate([ { $lookup: { from: "Customer_Addresses", localField: "address_id", foreignField: "address_id", as: "customer_addresses" } }, { $unwind: "$customer_addresses" }, { $match: { "customer_addresses.customer_id": 10 } }, { $project: { address_details: 1 } } ])	department_store
db.Staff.aggregate([ { $lookup: { from: "Staff_Department_Assignments", localField: "staff_id", foreignField: "staff_id", as: "staff_assignments" } }, { $match: { "staff_assignments.job_title_code": "Department Manager" } }, { $project: { staff_id: 1, staff_gender: 1 } } ])	department_store
db.Staff.aggregate([ { $lookup: { from: "Staff_Department_Assignments", localField: "staff_id", foreignField: "staff_id", as: "staff_assignments" } }, { $match: { "staff_assignments.job_title_code": "Department Manager" } }, { $project: { staff_id: 1, staff_gender: 1 } } ])	department_store
db.Customers.aggregate([ { $group: { _id: "$payment_method_code", count: { $sum: 1 } } }, { $project: { payment_method_code: "$_id", count: 1 } } ])	department_store
db.Customers.aggregate([ { $group: { _id: "$payment_method_code", count: { $sum: 1 } } } ])	department_store
db.Order_Items.aggregate([ { $group: { _id: "$product_id", count: { $sum: 1 } }}, { $sort: { count: -1 }}, { $limit: 1 }, { $project: { _id: 1 } } ])	department_store
db.Order_Items.aggregate([ { $group: { _id: "$product_id", count: { $sum: 1 } }}, { $sort: { count: -1 }}, { $limit: 1 }, { $project: { _id: 1 } } ])	department_store
db.Customers.aggregate([ { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $project: { customer_name: 1, customer_phone: 1, customer_email: 1} }, { $sort: { orderCount: -1 } }, { $limit: 1 } ])	department_store
db.Customers.aggregate([ { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $project: { customer_name: 1, customer_phone: 1, customer_email: 1, orderCount: { $size: "$orders" } } }, { $sort: { orderCount: -1 } }, { $limit: 1 }, { $project: { customer_name: 1, customer_phone: 1, customer_email: 1 } } ])	department_store
db.Products.aggregate([ { $group: { _id: "$product_type_code", averagePrice: { $avg: "$product_price" } } } ])	department_store
db.Products.aggregate([ { $group: { _id: "$product_type_code", averagePrice: { $avg: "$product_price" } } } ])	department_store
db.Department_Stores.aggregate([ { $lookup: { from: "Department_Store_Chain", localField: "dept_store_chain_id", foreignField: "dept_store_chain_id", as: "store_chain" } }, { $match: { "store_chain.dept_store_chain_name": "South" } }, { $count: "total" } ])	department_store
db.Department_Stores.aggregate([ { $lookup: { from: "Department_Store_Chain", localField: "dept_store_chain_id", foreignField: "dept_store_chain_id", as: "chain" } }, { $match: { "chain.dept_store_chain_name": "South" } }, { $count: "total" } ])	department_store
db.Staff.aggregate([ { $lookup: { from: "Staff_Department_Assignments", localField: "staff_id", foreignField: "staff_id", as: "staff_assignments" } }, { $unwind: "$staff_assignments" }, { $sort: { "staff_assignments.date_assigned_to": -1 } }, { $limit: 1 }, { $project: { staff_name: 1, job_title_code: "$staff_assignments.job_title_code" } } ])	department_store
db.Staff.aggregate([ { $lookup: { from: "Staff_Department_Assignments", localField: "staff_id", foreignField: "staff_id", as: "staff_assignments" } }, { $unwind: "$staff_assignments" }, { $sort: { "staff_assignments.date_assigned_to": -1 } }, { $limit: 1 }, { $project: { staff_name: 1, job_title_code: "$staff_assignments.job_title_code" } } ])	department_store
db.Product_Suppliers.aggregate([ { $match: { supplier_id: 3 } }, { $lookup: { from: "Products", localField: "product_id", foreignField: "product_id", as: "product_info" } }, { $unwind: "$product_info" }, { $project: { product_type_code: "$product_info.product_type_code", product_name: "$product_info.product_name", product_price: "$product_info.product_price" } } ])	department_store
db.Product_Suppliers.aggregate([ { $match: { supplier_id: 3 } }, { $lookup: { from: "Products", localField: "product_id", foreignField: "product_id", as: "product_info" } }, { $unwind: "$product_info" }, { $project: { product_type_code: "$product_info.product_type_code", product_name: "$product_info.product_name", product_price: "$product_info.product_price" } } ])	department_store
db.Customers.aggregate([ { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "customer_orders" } }, { $unwind: "$customer_orders" }, { $match: { "customer_orders.order_status_code": "Pending" } }, { $project: { customer_name: 1 } }, { $sort: { "customer_orders.customer_id": 1 } } ])	department_store
db.Customers.aggregate([ { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $unwind: "$orders" }, { $match: { "orders.order_status_code": "Pending" } }, { $project: { customer_name: 1 } }, { $sort: { customer_id: 1 } } ])	department_store
db.Customers.aggregate([ { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $unwind: "$orders" }, { $match: { $or: [ { "orders.order_status_code": "New" }, { "orders.order_status_code": "Pending" } ] } }, { $group: { _id: "$customer_id", customer_name: { $first: "$customer_name" }, customer_address: { $first: "$customer_address" }, order_statuses: { $addToSet: "$orders.order_status_code" } } }, { $match: { order_statuses: { $all: ["New", "Pending"] } } }, { $project: { customer_name: 1, customer_address: 1 } } ])	department_store
db.Departments.aggregate([ { $match: { department_name: { $in: ['marketing', 'managing'] } } }, { $group: { _id: "$dept_store_id", departments: { $addToSet: "$department_name" }, count: { $sum: 1 } } }, { $match: { count: 2 } }, { $lookup: { from: "Department_Stores", localField: "_id", foreignField: "dept_store_id", as: "store_info" } }, { $unwind: "$store_info" }, { $project: { _id: "$store_info.dept_store_id", name: "$store_info.store_name" } } ])	department_store
db.Departments.aggregate([ { $match: { department_name: { $in: ['marketing', 'managing'] } } }, { $group: { _id: "$dept_store_id", departmentNames: { $addToSet: "$department_name" }, count: { $sum: 1 } } }, { $match: { count: 2, departmentNames: { $all: ['marketing', 'managing'] } } }, { $lookup: { from: "Department_Stores", localField: "_id", foreignField: "dept_store_id", as: "storeDetails" } }, { $unwind: "$storeDetails" }, { $project: { dept_store_id: "$storeDetails.dept_store_id", store_name: "$storeDetails.store_name" } } ])	department_store
db.Department_Stores.aggregate([ { $group: { _id: "$dept_store_chain_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 2 }, { $project: { _id: 1 } } ])	department_store
db.Department_Stores.aggregate([ { $group: { _id: "$dept_store_chain_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 2 }, { $project: { _id: 1 } } ])	department_store
db.Products.aggregate([ { $group: { _id: "$product_type_code", maxPrice: { $max: "$product_price" }, minPrice: { $min: "$product_price" } } } ])	department_store
db.Products.aggregate([ { $group: { _id: "$product_type_code", maxPrice: { $max: "$product_price" }, minPrice: { $min: "$product_price" } } } ])	department_store
db.Products.aggregate([ { $group: { _id: "$product_type_code", avgTypePrice: { $avg: "$product_price" } } }, { $group: { _id: null, avgPrice: { $avg: "$avgTypePrice" }, types: { $push: { type: "$_id", avgTypePrice: "$avgTypePrice" } } } }, { $unwind: "$types" }, { $project: { type: "$types.type", typeAvg: "$types.avgTypePrice", overallAvg: "$avgPrice" } }, { $match: { $expr: { $gt: ["$typeAvg", "$overallAvg"] } } }, { $project: { type: 1 } } ])	department_store
db.Products.aggregate([ { $group: { _id: '$product_type_code', avgTypePrice: { $avg: '$product_price' } } }, { $lookup: { from: 'Products', let: { avgAll: { $avg: '$product_price' } }, as: 'allProducts', pipeline: [ { $group: { _id: null, avgPrice: { $avg: '$product_price' } } } ] } }, { $unwind: '$allProducts' }, { $match: { $expr: { $gt: ['$avgTypePrice', '$allProducts.avgPrice'] } } }, { $project: { _id: 1 } } ])	department_store
db.Products.find({product_price: {$gte: 600, $lte: 700}}, {product_name: 1, product_id: 1})	department_store
db.Products.find( { product_price: { $gte: 600, $lte: 700 } }, { product_name: 1, product_id: 1 } )	department_store
db.Customer_Orders.aggregate([ { $match: { order_status_code: 'Cancelled' } }, { $group: { _id: null, minDate: { $min: "$order_date" } } }, { $lookup: { from: "Customer_Orders", let: { min_date: "$minDate" }, pipeline: [ { $match: { $expr: { $gt: ["$order_date", "$$min_date"] } } }, { $group: { _id: "$customer_id" } } ], as: "orders_after_cancelled" } }, { $unwind: "$orders_after_cancelled" }, { $replaceRoot: { newRoot: "$orders_after_cancelled" } }, { $project: { _id: 1 } } ])	department_store
db.Customer_Orders.aggregate([ { $match: { order_status_code: 'Cancelled' } }, { $group: { _id: null, minDate: { $min: "$order_date" } } }, { $addFields: { minCancelledDate: "$minDate" } }, { $lookup: { from: "Customer_Orders", let: { minCancelledDate: "$minCancelledDate" }, pipeline: [ { $match: { $expr: { $gt: [ "$order_date", "$$minCancelledDate" ] } } }, { $group: { _id: "$customer_id" } } ], as: "customersWithOrdersAfterCancelled" } }, { $unwind: "$customersWithOrdersAfterCancelled" }, { $replaceRoot: { newRoot: "$customersWithOrdersAfterCancelled" } }, { $project: { _id: 1 } } ])	department_store
db.Staff_Department_Assignments.aggregate([ { $lookup: { from: "Staff_Department_Assignments", let: { clericalDate: "$date_assigned_to", jobId: "$job_title_code" }, pipeline: [ { $match: { $expr: { $and: [{ $eq: ["$job_title_code", "Clerical Staff"] }] } } }, { $group: { _id: null, maxClericalDate: { $max: "$date_assigned_to" } } } ], as: "clericalInfo" } }, { $unwind: "$clericalInfo" }, { $match: { $expr: { $lt: ["$date_assigned_to", "$clericalInfo.maxClericalDate"] } } }, { $project: { staff_id: 1 } } ])	department_store
db.Customers.find( { customer_address: { $regex: /TN/ } }, { customer_name: 1, customer_id: 1 } )	department_store
db.Customers.find({customer_address: {$regex: /TN/}}, {customer_name: 1, customer_id: 1})	department_store
db.Staff.aggregate([ { $lookup: { from: "Staff_Department_Assignments", localField: "staff_id", foreignField: "staff_id", as: "staff_assignments" } }, { $unwind: "$staff_assignments" }, { $match: { "staff_assignments.date_assigned_from": { $regex: /^2016/ } } }, { $project: { staff_name: 1, staff_gender: 1 } } ])	department_store
db.Staff.aggregate([ { $lookup: { from: "Staff_Department_Assignments", localField: "staff_id", foreignField: "staff_id", as: "staff_assignments" } }, { $unwind: "$staff_assignments" }, { $match: { "staff_assignments.date_assigned_from": { $regex: /^2016/ } } }, { $project: { staff_name: 1, staff_gender: 1 } } ])	department_store
db.Staff.aggregate([ { $lookup: { from: "Staff_Department_Assignments", localField: "staff_id", foreignField: "staff_id", as: "assignments" } }, { $match: { "assignments.1": { $exists: true } } }, { $project: { staff_name: 1 } } ])	department_store
db.Staff.aggregate([ { $lookup: { from: "Staff_Department_Assignments", localField: "staff_id", foreignField: "staff_id", as: "assignments" } }, { $match: { "assignments.1": { $exists: true } } }, { $project: { staff_name: 1 } } ])	department_store
db.Suppliers.aggregate([ { $lookup: { from: "Supplier_Addresses", localField: "supplier_id", foreignField: "supplier_id", as: "supplier_addresses" } }, { $unwind: "$supplier_addresses" }, { $lookup: { from: "Addresses", localField: "supplier_addresses.address_id", foreignField: "address_id", as: "addresses" } }, { $unwind: "$addresses" }, { $project: { supplier_name: 1, supplier_phone: 1 } }, { $sort: { "address_details": 1 } } ])	department_store
db.Suppliers.aggregate([ { $lookup: { from: "Supplier_Addresses", localField: "supplier_id", foreignField: "supplier_id", as: "supplier_addresses" } }, { $unwind: "$supplier_addresses" }, { $lookup: { from: "Addresses", localField: "supplier_addresses.address_id", foreignField: "address_id", as: "addresses" } }, { $unwind: "$addresses" }, { $project: { supplier_name: 1, supplier_phone: 1 } }, { $sort: { address_details: 1 } } ])	department_store
db.Products.find( { $or: [ { product_price: { $lt: 600 } }, { product_price: { $gt: 900 } } ] }, { product_id: 1, product_name: 1 } )	department_store
db.Products.find( { $or: [ { product_price: { $lt: 600 } }, { product_price: { $gt: 900 } } ] }, { product_id: 1, product_name: 1 } )	department_store
db.Customers.aggregate([ { $group: { _id: null, max_customer_code: { $max: "$customer_code" }, min_customer_code: { $min: "$customer_code" } } }, { $project: { max_customer_code: 1, min_customer_code: 1 } } ])	department_store
db.Customers.aggregate([ { $group: { _id: null, max_customer_code: { $max: "$customer_code" }, min_customer_code: { $min: "$customer_code" } } }, { $project: { max_customer_code: 1, min_customer_code: 1 } } ])	department_store
db.Customers.aggregate([ { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $unwind: "$orders" }, { $lookup: { from: "Order_Items", localField: "orders.order_id", foreignField: "order_id", as: "orderItems" } }, { $unwind: "$orderItems" }, { $lookup: { from: "Products", localField: "orderItems.product_id", foreignField: "product_id", as: "productDetails" } }, { $unwind: "$productDetails" }, { $match: { "productDetails.product_name": "keyboard" } }, { $group: { _id: "$customer_name" } }, { $project: { "_id": 0, "customer_name": "$_id" } } ])	department_store
db.Customers.aggregate([ { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $unwind: "$orders" }, { $lookup: { from: "Order_Items", localField: "orders.order_id", foreignField: "order_id", as: "orderItems" } }, { $unwind: "$orderItems" }, { $lookup: { from: "Products", localField: "orderItems.product_id", foreignField: "product_id", as: "productDetails" } }, { $unwind: "$productDetails" }, { $match: { "productDetails.product_name": "keyboard" } }, { $group: { _id: "$customer_name" } }, { $project: { customer_name: "$_id" } } ])	department_store
db.Suppliers.aggregate([ { $lookup: { from: "Product_Suppliers", localField: "supplier_id", foreignField: "supplier_id", as: "supplier_products" } }, { $unwind: "$supplier_products" }, { $lookup: { from: "Products", localField: "supplier_products.product_id", foreignField: "product_id", as: "product_info" } }, { $unwind: "$product_info" }, { $match: { "product_info.product_name": "red jeans" } }, { $project: { supplier_name: 1, supplier_phone: 1 } } ])	department_store
db.Suppliers.aggregate([ { $lookup: { from: "Product_Suppliers", localField: "supplier_id", foreignField: "supplier_id", as: "supplier_products" } }, { $unwind: "$supplier_products" }, { $lookup: { from: "Products", localField: "supplier_products.product_id", foreignField: "product_id", as: "product_info" } }, { $unwind: "$product_info" }, { $match: { "product_info.product_name": "red jeans" } }, { $project: { supplier_name: 1, supplier_phone: 1 } } ])	department_store
db.Products.aggregate([ { $group: { _id: "$product_type_code", maxPrice: { $max: "$product_price" }, minPrice: { $min: "$product_price" } } }, { $sort: { _id: 1 } } ])	department_store
db.Products.aggregate([ { $group: { _id: "$product_type_code", max_price: { $max: "$product_price" }, min_price: { $min: "$product_price" } } }, { $sort: { _id: 1 } } ])	department_store
db.Customer_Orders.find( { order_status_code: 'Cancelled' }, { order_id: 1, customer_id: 1 } ).sort({ order_date: 1 })	department_store
db.Customer_Orders.find( { order_status_code: 'Cancelled' }, { order_id: 1, customer_id: 1 } ).sort({ order_date: 1 })	department_store
db.Customers.aggregate([ { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $unwind: "$orders" }, { $lookup: { from: "Order_Items", localField: "orders.order_id", foreignField: "order_id", as: "order_items" } }, { $unwind: "$order_items" }, { $group: { _id: { customer_id: "$customer_id", customer_name: "$customer_name" }, distinct_products: { $addToSet: "$order_items.product_id" } } }, { $match: { $expr: { $gte: [{ $size: "$distinct_products" }, 3] } } }, { $project: { customer_name: "$_id.customer_name" } } ])	department_store
db.Customers.aggregate([ { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $unwind: "$orders" }, { $lookup: { from: "Order_Items", localField: "orders.order_id", foreignField: "order_id", as: "orderItems" } }, { $unwind: "$orderItems" }, { $group: { _id: { customer_id: "$customer_id", customer_name: "$customer_name" }, distinctProductCount: { $addToSet: "$orderItems.product_id" } } }, { $match: { $expr: { $gte: [{ $size: "$distinctProductCount" }, 3] } } }, { $project: { customer_name: "$_id.customer_name" } } ])	department_store
db.Staff.aggregate([ { $lookup: { from: "Staff_Department_Assignments", localField: "staff_id", foreignField: "staff_id", as: "assignments" } }, { $match: { "assignments.job_title_code": "Sales Person" } }, { $addFields: { hasClerical: { $in: ["Clerical Staff", "$assignments.job_title_code"] } } }, { $match: { hasClerical: false } }, { $project: { staff_name: 1, staff_gender: 1 } } ])	department_store
db.Staff.aggregate([ { $lookup: { from: "Staff_Department_Assignments", localField: "staff_id", foreignField: "staff_id", as: "assignments" } }, { $match: { "assignments.job_title_code": "Sales Person" } }, { $addFields: { hasClerical: { $in: ["Clerical Staff", "$assignments.job_title_code"] } } }, { $match: { hasClerical: false } }, { $project: { staff_name: 1, staff_gender: 1 } } ])	department_store
db.Customers.find( { customer_address: { $regex: /WY/ }, payment_method_code: { $ne: 'Credit Card' } }, { customer_id: 1, customer_name: 1 } )	department_store
db.Customers.find( { customer_address: { $regex: /WY/ }, payment_method_code: { $ne: 'Credit Card' } }, { customer_id: 1, customer_name: 1 } )	department_store
db.Products.aggregate([ { $match: { product_type_code: "Clothes" } }, { $group: { _id: null, averagePrice: { $avg: "$product_price" } } } , { $project: { averagePrice: 1 } }])	department_store
db.Products.aggregate([ { $match: { product_type_code: "Clothes" } }, { $group: { _id: null, averagePrice: { $avg: "$product_price" } } } , { $project: { averagePrice: 1 } }])	department_store
db.Products.find( { product_type_code: 'Hardware' }, { product_name: 1 } ).sort({ product_price: -1 }).limit(1)	department_store
db.Products.find({product_type_code: 'Hardware'}, {product_name: 1}).sort({product_price: -1}).limit(1)	department_store
db.aircraft.find({}, {Description: 1})	aircraft
db.aircraft.find({}, {Description: 1})	aircraft
db.airport.aggregate([ { $group: { _id: null, avgInternationalPassengers: { $avg: "$International_Passengers" } } }, { $project: { avgInternationalPassengers: 1 } } ])	aircraft
db.airport.aggregate([ { $group: { _id: null, avgInternationalPassengers: { $avg: "$International_Passengers" } } }, { $project: { avgInternationalPassengers: 1 } } ])	aircraft
db.airport.find( { Airport_Name: 'London Heathrow' }, { International_Passengers: 1, Domestic_Passengers: 1 } )	aircraft
db.airport.find( { Airport_Name: 'London Heathrow' }, { International_Passengers: 1, Domestic_Passengers: 1 } )	aircraft
db.airport.aggregate([ { $match: { Airport_Name: { $regex: /London/, $options: 'i' } } }, { $group: { _id: null, totalDomesticPassengers: { $sum: "$Domestic_Passengers" } } }, { $project: { totalDomesticPassengers: 1 } } ])	aircraft
db.airport.aggregate([ { $match: { Airport_Name: { $regex: /London/, $options: 'i' } } }, { $group: { _id: null, totalDomesticPassengers: { $sum: "$Domestic_Passengers" } } }, { $project: { totalDomesticPassengers: 1 } } ])	aircraft
db.airport.aggregate([ { $group: { _id: null, maxTransitPassengers: { $max: "$Transit_Passengers" }, minTransitPassengers: { $min: "$Transit_Passengers" } } }, { $project: { maxTransitPassengers:1,minTransitPassengers:1 } } ])	aircraft
db.airport.aggregate([ { $group: { _id: null, maxTransitPassengers: { $max: "$Transit_Passengers" }, minTransitPassengers: { $min: "$Transit_Passengers" } } }, { $project: { maxTransitPassengers:1,minTransitPassengers:1 } } ])	aircraft
db.pilot.find({Age: {$gte: 25}}, {Name: 1})	aircraft
db.pilot.find({Age: {$gte: 25}}, {Name: 1})	aircraft
db.pilot.find({}, {Name: 1}).sort({Name: 1})	aircraft
db.pilot.find({}, {Name: 1}).sort({Name: 1})	aircraft
db.pilot.find({Age: {$lte: 30}}, {Name: 1}).sort({Name: -1})	aircraft
db.pilot.find({Age: {$lte: 30}}, {Name: 1}).sort({Name: -1})	aircraft
db.aircraft.aggregate([ { $lookup: { from: "airport_aircraft", localField: "Aircraft_ID", foreignField: "Aircraft_ID", as: "airport_aircraft" } }, { $unwind: "$airport_aircraft" }, { $lookup: { from: "airport", localField: "airport_aircraft.Airport_ID", foreignField: "Airport_ID", as: "airport" } }, { $unwind: "$airport" }, { $match: { "airport.Airport_Name": "London Gatwick" } }, { $project: { "_id": 0, "Aircraft": "$Aircraft" } } ])	aircraft
db.aircraft.aggregate([ { $lookup: { from: "airport_aircraft", localField: "Aircraft_ID", foreignField: "Aircraft_ID", as: "airport_aircraft" } }, { $unwind: "$airport_aircraft" }, { $lookup: { from: "airport", localField: "airport_aircraft.Airport_ID", foreignField: "Airport_ID", as: "airport" } }, { $unwind: "$airport" }, { $match: { "airport.Airport_Name": "London Gatwick" } }, { $project: { Aircraft: 1 } } ])	aircraft
db.aircraft.aggregate([ { $lookup: { from: "airport_aircraft", localField: "Aircraft_ID", foreignField: "Aircraft_ID", as: "airport_aircraft" } }, { $unwind: "$airport_aircraft" }, { $lookup: { from: "airport", localField: "airport_aircraft.Airport_ID", foreignField: "Airport_ID", as: "airport" } }, { $unwind: "$airport" }, { $match: { "airport.Total_Passengers": { $gt: 10000000 } } }, { $project: { Aircraft: "$Aircraft", Description: "$Description" } } ])	aircraft
db.aircraft.aggregate([ { $lookup: { from: "airport_aircraft", localField: "Aircraft_ID", foreignField: "Aircraft_ID", as: "airport_aircraft" } }, { $unwind: "$airport_aircraft" }, { $lookup: { from: "airport", localField: "airport_aircraft.Airport_ID", foreignField: "Airport_ID", as: "airport" } }, { $unwind: "$airport" }, { $match: { "airport.Total_Passengers": { $gt: 10000000 } } }, { $project: { Aircraft: 1, Description: 1 } } ])	aircraft
db.aircraft.aggregate([ { $match: { Aircraft: "Robinson R-22" } }, { $lookup: { from: "airport_aircraft", localField: "Aircraft_ID", foreignField: "Aircraft_ID", as: "airport_aircraft" } }, { $unwind: "$airport_aircraft" }, { $lookup: { from: "airport", localField: "airport_aircraft.Airport_ID", foreignField: "Airport_ID", as: "airport" } }, { $unwind: "$airport" }, { $group: { _id: null, avgTotalPassengers: { $avg: "$airport.Total_Passengers" } } } , { $project: { avgTotalPassengers: 1 } }])	aircraft
db.aircraft.aggregate([ { $match: { Aircraft: "Robinson R-22" } }, { $lookup: { from: "airport_aircraft", localField: "Aircraft_ID", foreignField: "Aircraft_ID", as: "airport_aircraft" } }, { $unwind: "$airport_aircraft" }, { $lookup: { from: "airport", localField: "airport_aircraft.Airport_ID", foreignField: "Airport_ID", as: "airport" } }, { $unwind: "$airport" }, { $group: { _id: null, avgTotalPassengers: { $avg: "$airport.Total_Passengers" } } } , { $project: { avgTotalPassengers: 1 } }])	aircraft
db.pilot.find({}, {Name: 1}).sort({Age: -1})	aircraft
db.pilot.find({}, {Name: 1}).sort({Age: -1})	aircraft
db.airport.find().sort({International_Passengers: -1}).limit(1)	aircraft
db.airport.find().sort({"International_Passengers": -1}).limit(1)	aircraft
db.Residents.aggregate([ { $group: { _id: "$property_id", residentCount: { $sum: 1 } }}, { $project: { property_id: "$_id", residentCount: 1 }} ])	local_govt_and_lot
db.Services.aggregate([ { $lookup: { from: "Organizations", localField: "organization_id", foreignField: "organization_id", as: "organization" } }, { $match: { "organization.organization_details": "Denesik and Sons Party" } }, { $group: { _id: "$service_type_code" } }, { $project: { service_type_code: "$_id" } } ])	local_govt_and_lot
db.Customers.aggregate([ { $lookup: { from: "Customer_Events", localField: "customer_id", foreignField: "customer_id", as: "customer_events" } }, { $match: { "customer_events": { $exists: true } } }, { $addFields: { event_count: { $size: "$customer_events" } } }, { $match: { event_count: { $gte: 3 } } }, { $project: { customer_id: 1, customer_details: 1 } } ])	local_govt_and_lot
db.Customer_Events.aggregate([ { $lookup: { from: "Customer_Event_Notes", localField: "Customer_Event_ID", foreignField: "Customer_Event_ID", as: "notes" } }, { $project: { Customer_Event_ID: 1, property_id: 1 } }, { $match: { noteCount: { $gte: 1, $lte: 3 } } } ])	local_govt_and_lot
db.Things.aggregate([ { $match: { service_details: "Unsatisfied" } }, { $lookup: { from: "Timed_Locations_of_Things", localField: "thing_id", foreignField: "thing_id", as: "locations" } }, { $unwind: "$locations" }, { $group: { _id: null, distinctLocations: { $addToSet: "$locations.Location_Code" } } }, { $project: { count: { $size: "$distinctLocations" } } } ])	local_govt_and_lot
db.Residents.find({other_details: {$regex: /Miss/}}, {other_details: 1})	local_govt_and_lot
db.Customers.aggregate([ { $lookup: { from: "Customer_Events", localField: "customer_id", foreignField: "customer_id", as: "events" } }, { $match: { events: { $size: 0 } } }, { $count: "customers_without_events" } ])	local_govt_and_lot
db.school.find({}, {Location: 1}).sort({Enrollment: 1})	school_player
db.school.aggregate([ { $sort: { Enrollment: 1 } }, { $project: { Location: 1 } } ])	school_player
db.school.aggregate([ { $project: { Location: 1 } }, { $sort: { Founded: -1 } } ])	school_player
db.school.aggregate([ { $sort: { Founded: -1 } }, { $project: { Location: 1 } } ])	school_player
db.school.find({ Denomination: { $ne: 'Catholic' } }, { Enrollment: 1 })	school_player
db.school.aggregate([ { $match: { Denomination: { $ne: 'Catholic' } } }, { $project: { Enrollment: 1 } } ])	school_player
db.school.aggregate([ { $group: { _id: null, averageEnrollment: { $avg: "$Enrollment" } } }, { $project: { averageEnrollment: 1 } } ])	school_player
db.school.aggregate([ { $group: { _id: null, averageEnrollment: { $avg: "$Enrollment" } } }, { $project: { averageEnrollment: 1 } } ])	school_player
db.player.find({}, {Team: 1}).sort({Age: -1}).limit(1)	school_player
db.player.find({}, {Team: 1}).sort({Age: -1}).limit(1)	school_player
db.player.find({}, {Team: 1}).sort({Age: -1}).limit(5)	school_player
db.player.aggregate([ { $sort: { Age: -1 } }, { $limit: 5 }, { $project: { Team: 1 } } ])	school_player
db.school.aggregate([ { $lookup: { from: "player", localField: "School_ID", foreignField: "School_ID", as: "players" } }, { $project: { Denomination: 1 } }, { $sort: { playerCount: -1 } }, { $limit: 1 } ])	school_player
db.school.aggregate([ { $lookup: { from: "school_details", localField: "School_ID", foreignField: "School_ID", as: "details" } }, { $unwind: "$details" }, { $project: { Location: 1, Nickname: "$details.Nickname" } } ])	school_player
db.school.aggregate([ { $group: { _id: "$Denomination", count: { $sum: 1 } } }, { $project: { Denomination: "$_id", count: 1 } } ])	school_player
db.school.aggregate([ { $group: { _id: "$Denomination", count: { $sum: 1 } } }, { $project: { Denomination: "$_id", count: 1 } } ])	school_player
db.school.aggregate([ { $group: { _id: "$Denomination", count: { $sum: 1 } } }, { $project: { Denomination: "$_id", count: 1 } }, { $sort: { count: -1 } } ])	school_player
db.school.aggregate([ { $group: { _id: "$Denomination", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $project: { Denomination: "$_id", count: 1 } } ])	school_player
db.school.aggregate([ { $sort: { Enrollment: -1 } }, { $limit: 1 }, { $project: { School_Colors: 1 } } ])	school_player
db.school.find({}, {School_Colors: 1}).sort({Enrollment: -1}).limit(1)	school_player
db.school_details.find( { Division: { $ne: 'Division 1' } }, { Nickname: 1 } )	school_player
db.school.aggregate([ { $group: { _id: "$Denomination", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Denomination: "$_id" } } ])	school_player
db.school.aggregate([ { $group: { _id: "$Denomination", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Denomination: "$_id" } } ])	school_player
db.district.aggregate([ { $group: { _id: "$District_name" }}, { $sort: { "City_Area": -1 }} ])	store_product
db.product.aggregate([ { $group: { _id: "$max_page_size", count: { $sum: 1 } } }, { $match: { count: { $gt: 3 } } }, { $project: { max_page_size: "$_id" } } ])	store_product
db.product.aggregate([ { $group: { _id: "$max_page_size", count: { $sum: 1 } } }, { $match: { count: { $gt: 3 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { max_page_size: "$_id" } } ])	store_product
db.district.find( { City_Population: { $gte: 200000, $lte: 2000000 } }, { District_name: 1, City_Population: 1 } )	store_product
db.district.find( { City_Population: { $gte: 200000, $lte: 2000000 } }, { District_name: 1, City_Population: 1 } )	store_product
db.district.find( { $or: [ {"City_Area": {$gt: 10}}, {"City_Population": {$gt: 100000}} ] }, {"District_name": 1, "_id": 0} )	store_product
db.district.find({ $or: [ { City_Area: { $gt: 10 } }, { City_Population: { $gt: 100000 } } ] }, { District_name: 1 })	store_product
db.district.find({}, { District_name: 1 }).sort({ City_Population: -1 }).limit(1)	store_product
db.district.find({}, { District_name: 1 }).sort({ City_Area: 1 }).limit(1)	store_product
db.district.find({}, { District_name: 1 }).sort({ City_Area: 1 }).limit(1)	store_product
db.store.aggregate([ { $group: { _id: "$Type", count: { $sum: 1 } } }, { $project: { Type: "$_id", count: 1 } } ])	store_product
db.store.aggregate([ { $group: { _id: "$Type", count: { $sum: 1 } } } ])	store_product
db.store.aggregate([ { $lookup: { from: "store_district", localField: "Store_ID", foreignField: "Store_ID", as: "store_district" } }, { $unwind: "$store_district" }, { $lookup: { from: "district", localField: "store_district.District_ID", foreignField: "District_ID", as: "district" } }, { $unwind: "$district" }, { $match: { "district.District_name": "Khanewal District" } }, { $project: { Store_Name: 1 } } ])	store_product
db.store.aggregate([ { $lookup: { from: "store_district", localField: "Store_ID", foreignField: "Store_ID", as: "store_district" } }, { $unwind: "$store_district" }, { $lookup: { from: "district", localField: "store_district.District_ID", foreignField: "District_ID", as: "district" } }, { $unwind: "$district" }, { $match: { "district.District_name": "Khanewal District" } }, { $project: { Store_Name: 1 } } ])	store_product
db.store.aggregate([ { $match: { Store_Name: "Blackville" } }, { $lookup: { from: "store_district", localField: "Store_ID", foreignField: "Store_ID", as: "store_district_info" } }, { $unwind: "$store_district_info" }, { $lookup: { from: "district", localField: "store_district_info.District_ID", foreignField: "District_ID", as: "district_info" } }, { $unwind: "$district_info" }, { $project: { headquartered_city: "$district_info.Headquartered_City" } } ])	store_product
db.store.aggregate([ { $match: { Store_Name: "Blackville" } }, { $lookup: { from: "store_district", localField: "Store_ID", foreignField: "Store_ID", as: "store_district_info" } }, { $unwind: "$store_district_info" }, { $lookup: { from: "district", localField: "store_district_info.District_ID", foreignField: "District_ID", as: "district_info" } }, { $unwind: "$district_info" }, { $project: { headquartered_city: "$district_info.Headquartered_City" } } ])	store_product
db.store.aggregate([ { $lookup: { from: "store_district", localField: "Store_ID", foreignField: "Store_ID", as: "store_district" } }, { $unwind: "$store_district" }, { $lookup: { from: "district", localField: "store_district.District_ID", foreignField: "District_ID", as: "district" } }, { $unwind: "$district" }, { $group: { _id: "$district.Headquartered_City", count: { $sum: 1 } } }, { $project: { Headquartered_City: "$_id", count: 1 } } ])	store_product
db.store.aggregate([ { $lookup: { from: "store_district", localField: "Store_ID", foreignField: "Store_ID", as: "store_district" } }, { $unwind: "$store_district" }, { $lookup: { from: "district", localField: "store_district.District_ID", foreignField: "District_ID", as: "district" } }, { $unwind: "$district" }, { $group: { _id: "$district.Headquartered_City", count: { $sum: 1 } } }, { $project: { Headquartered_City: "$_id", count: 1 } } ])	store_product
db.store.aggregate([ { $lookup: { from: "store_district", localField: "Store_ID", foreignField: "Store_ID", as: "store_district" } }, { $unwind: "$store_district" }, { $lookup: { from: "district", localField: "store_district.District_ID", foreignField: "District_ID", as: "district" } }, { $unwind: "$district" }, { $group: { _id: "$district.Headquartered_City", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Headquartered_City: "$_id" } } ])	store_product
db.store.aggregate([ { $lookup: { from: "store_district", localField: "Store_ID", foreignField: "Store_ID", as: "store_district" } }, { $unwind: "$store_district" }, { $lookup: { from: "district", localField: "store_district.District_ID", foreignField: "District_ID", as: "district" } }, { $unwind: "$district" }, { $group: { _id: "$district.Headquartered_City", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Headquartered_City: "$_id" } } ])	store_product
db.product.aggregate([ { $group: { _id: null, averagePagesPerMinuteColor: { $avg: "$pages_per_minute_color" } } }, { $project: { averagePagesPerMinuteColor: 1} } ])	store_product
db.product.aggregate([ { $group: { _id: null, averagePagesPerMinuteColor: { $avg: "$pages_per_minute_color" } } }, { $project: { averagePagesPerMinuteColor: 1} } ])	store_product
db.store.aggregate([ { $match: { Store_Name: "Miramichi" }}, { $lookup: { from: "store_product", localField: "Store_ID", foreignField: "Store_ID", as: "store_products" }}, { $unwind: "$store_products" }, { $lookup: { from: "product", localField: "store_products.Product_ID", foreignField: "product_id", as: "product_details" }}, { $unwind: "$product_details" }, { $project: { product: "$product_details.product" }} ])	store_product
db.product.find( { max_page_size: 'A4', pages_per_minute_color: { $lt: 5 } }, { product: 1 } )	store_product
db.product.find( { max_page_size: "A4", pages_per_minute_color: { $lt: 5 } }, { product: 1 } )	store_product
db.product.find( { $or: [ {max_page_size: 'A4'}, {pages_per_minute_color: {$lt: 5}} ] }, {product: 1} )	store_product
db.product.find( { $or: [ { max_page_size: "A4" }, { pages_per_minute_color: { $lt: 5 } } ] }, { product: 1 } )	store_product
db.product.find({product: {$regex: /Scanner/}}, { product: 1})	store_product
db.product.find({ product: { $regex: /Scanner/ } }, { product: 1 })	store_product
db.product.aggregate([ { $group: { _id: "$max_page_size", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { max_page_size: "$_id" } } ])	store_product
db.product.aggregate([ { $group: { _id: "$max_page_size", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { max_page_size: "$_id" } } ])	store_product
db.district.aggregate([ { $group: { _id: null, averageCityArea: { $avg: "$City_Area" } } }, { $lookup: { from: "district", let: { averageCityArea: "$averageCityArea" }, pipeline: [ { $match: { $expr: { $gt: [ "$City_Area", "$$averageCityArea" ] } } }, { $group: { _id: null, totalPopulation: { $sum: "$City_Population" } } } ], as: "districtsWithLargeArea" } }, { $unwind: "$districtsWithLargeArea" }, { $project: { totalPopulation: "$districtsWithLargeArea.totalPopulation" } } ])	store_product
db.store.aggregate([ { $lookup: { from: "store_district", localField: "Store_ID", foreignField: "Store_ID", as: "store_district" } }, { $unwind: "$store_district" }, { $lookup: { from: "district", localField: "store_district.District_ID", foreignField: "District_ID", as: "district" } }, { $unwind: "$district" }, { $match: { Type: { $in: ["City Mall", "Village Store"] } } }, { $group: { _id: "$district.District_name", count: { $sum: 1 } } }, { $match: { count: 2 } }, { $project: { District_name: "$_id" } } ])	store_product
db.store.aggregate([ { $lookup: { from: "store_district", localField: "Store_ID", foreignField: "Store_ID", as: "store_district" } }, { $unwind: "$store_district" }, { $lookup: { from: "district", localField: "store_district.District_ID", foreignField: "District_ID", as: "district" } }, { $unwind: "$district" }, { $match: { $or: [ { Type: "City Mall" }, { Type: "Village Store" } ] } }, { $group: { _id: "$district.District_name", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { District_name: "$_id" } } ])	store_product
db.College.aggregate([ { $group: { _id: null, totalEnrollment: { $sum: "$enr" } } }, { $project: { totalEnrollment: 1 } } ])	soccer_2
db.College.aggregate([ { $group: { _id: null, totalEnrollment: { $sum: "$enr" } } }, { $project: { totalEnrollment: 1 } } ])	soccer_2
db.College.aggregate([ { $group: { _id: null, averageEnrollment: { $avg: "$enr" } } }, { $project: { averageEnrollment: 1 } } ])	soccer_2
db.College.aggregate([ { $group: { _id: null, averageEnrollment: { $avg: "$enr" } } }, { $project: { averageEnrollment: 1 } } ])	soccer_2
db.Player.aggregate([ { $group: { _id: null, averageTrainingHours: { $avg: "$HS" } } }, { $project: { averageTrainingHours: 1 } } ])	soccer_2
db.Player.aggregate([ { $group: { _id: null, averageHours: { $avg: "$HS" } } }, { $project: { averageHours: 1} } ])	soccer_2
db.Player.find({ HS: { $lt: 1500 } }, { pName: 1, HS: 1 })	soccer_2
db.Player.find({ HS: { $lt: 1500 } }, { pName: 1, HS: 1 })	soccer_2
db.Player.aggregate([ { $group: { _id: null, avgHS: { $avg: "$HS" }, maxHS: { $max: "$HS" }, minHS: { $min: "$HS" } } }, { $project: { avgHS: 1, maxHS: 1, minHS: 1 } } ])	soccer_2
db.Player.aggregate([ { $group: { _id: null, avgHS: { $avg: "$HS" }, maxHS: { $max: "$HS" }, minHS: { $min: "$HS" } } }, { $project: { avgHS: 1, maxHS: 1, minHS: 1 } } ])	soccer_2
db.College.aggregate([ { $match: { state: "FL" } }, { $group: { _id: null, avgEnrollment: { $avg: "$enr" } } }, { $project: { avgEnrollment: 1} } ])	soccer_2
db.College.aggregate([ { $match: { state: "FL" } }, { $group: { _id: null, avgEnrollment: { $avg: "$enr" } } }, { $project: { avgEnrollment: 1} } ])	soccer_2
db.Player.find({ HS: { $gte: 500, $lte: 1500 } }, { pName: 1 })	soccer_2
db.Player.find( { HS: { $gte: 500, $lte: 1500 } }, { pName: 1 } )	soccer_2
db.College.find({ enr: { $gt: 10000 }, state: 'LA' }, { cName: 1, enr: 1 })	soccer_2
db.College.find({ enr: { $gt: 10000 }, state: 'LA' }, { cName: 1, enr: 1 })	soccer_2
db.College.find({}).sort({enr: 1})	soccer_2
db.College.find({}).sort({enr: 1})	soccer_2
db.College.find({ enr: { $gt: 18000 } }, { cName: 1 }).sort({ cName: 1 })	soccer_2
db.College.find({ enr: { $gt: 18000 } }, { cName: 1 }).sort({ cName: 1 })	soccer_2
db.Player.aggregate([ { $match: { yCard: 'yes' } }, { $sort: { HS: -1 } }, { $project: { pName: 1 } } ])	soccer_2
db.Player.find( { yCard: 'yes' }, { pName: 1 } ).sort({ HS: -1 })	soccer_2
db.Tryout.aggregate([ { $group: { _id: "$pPos", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { pPos: "$_id" } } ])	soccer_2
db.Tryout.aggregate([ { $group: { _id: "$pPos", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { pPos: "$_id" } } ])	soccer_2
db.Tryout.aggregate([ { $group: { _id: "$cName", count: { $sum: 1 } } }, { $sort: { count: -1 } } ])	soccer_2
db.Tryout.aggregate([ { $group: { _id: "$cName", count: { $sum: 1 } } }, { $sort: { count: -1 } } ])	soccer_2
db.Tryout.aggregate([ { $lookup: { from: "Player", localField: "pID", foreignField: "pID", as: "player_info" } }, { $unwind: "$player_info" }, { $group: { _id: "$pPos", min_hours: { $min: "$player_info.HS" } } }, { $project: { pPos: "$_id", min_hours: 1 } } ])	soccer_2
db.College.find({}, { cName: 1 }).sort({ enr: -1 }).limit(3)	soccer_2
db.College.find({}, { cName: 1 }).sort({ enr: -1 }).limit(3)	soccer_2
db.College.aggregate([ { $group: { _id: "$state", minEnrollment: { $min: "$enr" }, cName: { $first: "$cName" } } }, { $project: { cName: 1, state: "$_id", enr: "$minEnrollment" } } ])	soccer_2
db.College.aggregate([ { $group: { _id: "$state", smallestEnrollment: { $min: "$enr" } } }, { $lookup: { from: "College", localField: "smallestEnrollment", foreignField: "enr", as: "college_info" } }, { $unwind: "$college_info" }, { $project: { cName: "$college_info.cName", state: "$_id", smallestEnrollment: "$smallestEnrollment" } } ])	soccer_2
db.College.aggregate([ { $lookup: { from: "Tryout", localField: "cName", foreignField: "cName", as: "tryouts" } }, { $match: { "tryouts": { $ne: [] } } }, { $group: { _id: "$state" } }, { $project: { state: "$_id" } } ])	soccer_2
db.College.aggregate([ { $lookup: { from: "Tryout", localField: "cName", foreignField: "cName", as: "tryouts" } }, { $unwind: "$tryouts" }, { $match: { "tryouts.decision": "yes" } }, { $group: { _id: "$state" } } ])	soccer_2
db.College.aggregate([ { $lookup: { from: "Tryout", localField: "cName", foreignField: "cName", as: "tryouts" } }, { $unwind: "$tryouts" }, { $match: { "tryouts.decision": "yes" } }, { $group: { _id: "$state" } }, { $project: { state: "$_id" } } ])	soccer_2
db.Player.aggregate([ { $lookup: { from: "Tryout", localField: "pID", foreignField: "pID", as: "tryout_info" } }, { $unwind: "$tryout_info" }, { $match: { "tryout_info.decision": "yes" } }, { $project: { pName: 1, cName: "$tryout_info.cName" } } ])	soccer_2
db.Player.aggregate([ { $lookup: { from: "Tryout", localField: "pID", foreignField: "pID", as: "tryout_info" } }, { $unwind: "$tryout_info" }, { $lookup: { from: "College", localField: "tryout_info.cName", foreignField: "cName", as: "college_info" } }, { $unwind: "$college_info" }, { $match: { "tryout_info.decision": "yes" } }, { $project: { pName: 1, cName: "$college_info.cName" } } ])	soccer_2
db.Player.aggregate([ { $lookup: { from: "Tryout", localField: "pID", foreignField: "pID", as: "tryout_info" } }, { $unwind: "$tryout_info" }, { $sort: { "pName": 1 } }, { $project: { "_id": 0, "pName": 1 } } ])	soccer_2
db.Player.aggregate([ { $lookup: { from: "Tryout", localField: "pID", foreignField: "pID", as: "tryout_info" } }, { $unwind: "$tryout_info" }, { $sort: { "pName": 1 } }, { $project: { "_id": 0, "pName": 1 } } ])	soccer_2
db.Player.aggregate([ { $lookup: { from: "Tryout", localField: "pID", foreignField: "pID", as: "tryout_info" } }, { $unwind: "$tryout_info" }, { $match: { "tryout_info.decision": "yes" } }, { $project: { pName: 1, HS: 1 } } ])	soccer_2
db.Player.aggregate([ { $lookup: { from: "Tryout", localField: "pID", foreignField: "pID", as: "tryout_info" } }, { $unwind: "$tryout_info" }, { $match: { "tryout_info.decision": "yes" } }, { $project: { pName: 1, HS: 1 } } ])	soccer_2
db.College.aggregate([ { $lookup: { from: "Tryout", localField: "cName", foreignField: "cName", as: "tryouts" } }, { $unwind: "$tryouts" }, { $match: { "tryouts.pPos": "striker" } }, { $project: { state: 1 } } ])	soccer_2
db.Player.aggregate([ { $lookup: { from: "Tryout", localField: "pID", foreignField: "pID", as: "tryout_info" } }, { $unwind: "$tryout_info" }, { $match: { "tryout_info.decision": "yes", "tryout_info.pPos": "striker" } }, { $project: { pName: 1 } } ])	soccer_2
db.Player.aggregate([ { $lookup: { from: "Tryout", localField: "pID", foreignField: "pID", as: "tryout_info" } }, { $match: { "tryout_info.decision": "yes", "tryout_info.pPos": "striker" } }, { $project: { pName: 1 } } ])	soccer_2
db.College.aggregate([ { $lookup: { from: "Tryout", localField: "cName", foreignField: "cName", as: "tryout_info" } }, { $unwind: "$tryout_info" }, { $lookup: { from: "Player", localField: "tryout_info.pID", foreignField: "pID", as: "player_info" } }, { $unwind: "$player_info" }, { $match: { "player_info.pName": "Charles" } }, { $project: { state: 1 } } ])	soccer_2
db.Player.aggregate([ { $lookup: { from: "Tryout", localField: "pID", foreignField: "pID", as: "tryout_info" } }, { $unwind: "$tryout_info" }, { $match: { "tryout_info.decision": "yes" } }, { $group: { _id: null, avg_HS: { $avg: "$HS" }, max_HS: { $max: "$HS" } } }, { $project: { avg_HS: 1, max_HS: 1 } } ])	soccer_2
db.Player.aggregate([ { $lookup: { from: "Tryout", localField: "pID", foreignField: "pID", as: "tryout_info" } }, { $match: { "tryout_info.decision": "yes" } }, { $group: { _id: null, avgHS: { $avg: "$HS" }, maxHS: { $max: "$HS" } } }, { $project: { avgHS: 1, maxHS: 1 } } ])	soccer_2
db.Player.aggregate([ { $lookup: { from: "Tryout", localField: "pID", foreignField: "pID", as: "tryout_info" } }, { $unwind: "$tryout_info" }, { $match: { "tryout_info.decision": "no" } }, { $group: { _id: null, avgHours: { $avg: "$HS" } } } , { $project: { avgHours: 1 } }])	soccer_2
db.Player.aggregate([ { $lookup: { from: "Tryout", localField: "pID", foreignField: "pID", as: "tryout_info" } }, { $match: { "tryout_info.decision": "no" } }, { $group: { _id: null, avgHours: { $avg: "$HS" } } }, { $project: { avgHours: 1 } } ])	soccer_2
db.Player.aggregate([ { $lookup: { from: "Tryout", localField: "pID", foreignField: "pID", as: "tryout_info" } }, { $unwind: "$tryout_info" }, { $match: { "HS": { $gt: 1000 } } }, { $group: { _id: "$tryout_info.pPos", max_HS: { $max: "$HS" } } }, { $project: { max_HS: 1, pPos: "$_id" } } ])	soccer_2
db.Player.aggregate([ { $lookup: { from: "Tryout", localField: "pID", foreignField: "pID", as: "player_tryout" } }, { $unwind: "$player_tryout" }, { $match: { "HS": { $gt: 1000 } } }, { $group: { _id: "$player_tryout.pPos", maxHS: { $max: "$HS" } } }, { $project: { maxHS: 1, pPos: "$_id" } } ])	soccer_2
db.Tryout.aggregate([ { $lookup: { from: "Player", localField: "pID", foreignField: "pID", as: "player_info" } }, { $unwind: "$player_info" }, { $match: { "player_info.pName": /^D/ } }, { $project: { cName: 1 } } ])	soccer_2
db.Tryout.aggregate([ { $lookup: { from: "Player", localField: "pID", foreignField: "pID", as: "player_info" } }, { $unwind: "$player_info" }, { $match: { "player_info.pName": /^D/ } }, { $project: { cName: 1 } } ])	soccer_2
db.Tryout.find( { decision: 'yes', pPos: 'goalie' }, { cName: 1 } )	soccer_2
db.Tryout.find( { decision: 'yes', pPos: 'goalie' }, { cName: 1 } )	soccer_2
db.College.aggregate([ { $lookup: { from: "Tryout", localField: "cName", foreignField: "cName", as: "tryouts" } }, { $match: { "tryouts.decision": "yes" } }, { $project: { state: 1, enr: 1 } }, { $group: { _id: { state: "$state", enr: "$enr" } } }, { $project: { state: "$_id.state", enr: "$_id.enr" } } ])	soccer_2
db.College.find( { $or: [ { enr: { $lt: 13000 }, state: 'AZ' }, { enr: { $gt: 15000 }, state: 'LA' } ] }, { cName: 1 } )	soccer_2
db.College.aggregate([ { $match: { $or: [ { enr: { $lt: 13000 }, state: 'AZ' }, { enr: { $gt: 15000 }, state: 'LA' } ] } }, { $project: { cName: 1 } } ])	soccer_2
db.Tryout.aggregate([ { $match: { pPos: { $eq: "mid" } } }, { $group: { _id: "$cName" } }, { $lookup: { from: "Tryout", let: { cName: "$_id" }, pipeline: [ { $match: { $expr: { $eq: ["$cName", "$$cName"] }, pPos: { $eq: "goalie" } } } ], as: "goalie" } }, { $match: { goalie: { $size: 0 } } }, { $project: { _id: 1 } } ])	soccer_2
db.Tryout.aggregate([ { $match: { pPos: { $eq: "mid" } } }, { $lookup: { from: "Tryout", let: { cName: "$cName" }, pipeline: [ { $match: { $expr: { $eq: ["$cName", "$$cName"] }, pPos: { $eq: "goalie" } } }, { $project: { cName: 1 } } ], as: "goalie" } }, { $match: { goalie: { $size: 0 } } }, { $project: { cName: 1 } } ])	soccer_2
db.College.aggregate([ { $lookup: { from: "Tryout", localField: "cName", foreignField: "cName", as: "Tryouts" } }, { $unwind: "$Tryouts" }, { $group: { _id: "$state", midPositionPlayerCount: { $sum: { $cond: [{ $eq: ["$Tryouts.pPos", "mid"] }, 1, 0] } }, goaliePlayerCount: { $sum: { $cond: [{ $eq: ["$Tryouts.pPos", "goalie"] }, 1, 0] } } } }, { $match: { midPositionPlayerCount: { $gt: 0 }, goaliePlayerCount: { $eq: 0 } } }, { $count: "stateCount" } ])	soccer_2
db.College.aggregate([ { $match: { state: 'FL' } }, { $group: { _id: null, minEnrollment: { $min: '$enr' } } }, { $lookup: { from: 'College', let: { minEnr: '$minEnrollment' }, pipeline: [ { $match: { $expr: { $gt: ['$enr', '$$minEnr'] } } }, { $project: { cName: 1 } } ], as: 'largerColleges' } }, { $unwind: '$largerColleges' }, { $replaceRoot: { newRoot: '$largerColleges' } }, { $group: { _id: '$cName' } } ])	soccer_2
db.College.aggregate([ { $group: { _id: "$state", maxEnrollment: { $max: "$enr" } } }, { $match: { _id: "FL" } }, { $lookup: { from: "College", let: { maxEnr: "$maxEnrollment" }, pipeline: [ { $match: { $expr: { $gt: ["$enr", "$$maxEnr"] } } }, { $project: { cName: 1 } } ], as: "collegesGT" } }, { $unwind: "$collegesGT" }, { $replaceRoot: { newRoot: "$collegesGT" } } ])	soccer_2
db.College.aggregate([ { $lookup: { from: "Tryout", localField: "cName", foreignField: "cName", as: "tryout_info" } }, { $match: { "tryout_info": { $not: { $elemMatch: { "pPos": "goalie" } } } } }, { $group: { _id: null, total_enrollment: { $sum: "$enr" } } }, { $project: { total_enrollment: 1 } } ])	soccer_2
db.device.find({}, {Carrier: 1}).sort({Carrier: 1})	device
db.device.aggregate([ { $match: { Software_Platform: { $ne: 'Android' } } }, { $project: { Carrier: 1 } } ])	device
db.device.find({ Software_Platform: { $ne: 'Android' } }, { Carrier: 1 })	device
db.shop.aggregate([ { $sort: { Open_Year: 1 } }, { $project: { Shop_Name: 1 } } ])	device
db.shop.find({}, {Shop_Name: 1}).sort({Open_Year: 1})	device
db.stock.aggregate([ { $group: { _id: null, averageQuantity: { $avg: "$Quantity" } } } , { $project: { averageQuantity: 1 } }])	device
db.stock.aggregate([ { $group: { _id: null, averageQuantity: { $avg: "$Quantity" } } }, { $project: { averageQuantity: 1 } } ])	device
db.shop.find({}, {Shop_Name: 1, Location: 1}).sort({Shop_Name: 1})	device
db.shop.find({}, {Shop_Name: 1, Location: 1}).sort({Shop_Name: 1})	device
db.shop.find({Shop_Name: 'Apple'}, {Open_Date: 1, Open_Year: 1})	device
db.shop.find({Shop_Name: 'Apple'}, {Open_Date: 1, Open_Year: 1})	device
db.shop.find({}, {Shop_Name: 1}).sort({Open_Year: -1}).limit(1)	device
db.shop.find({}, {Shop_Name: 1}).sort({Open_Year: -1}).limit(1)	device
db.stock.aggregate([ { $lookup: { from: "device", localField: "Device_ID", foreignField: "Device_ID", as: "device_info" } }, { $lookup: { from: "shop", localField: "Shop_ID", foreignField: "Shop_ID", as: "shop_info" } }, { $unwind: "$device_info" }, { $unwind: "$shop_info" }, { $project: { Shop_Name: "$shop_info.Shop_Name", Carrier: "$device_info.Carrier" } } ])	device
db.stock.aggregate([ { $lookup: { from: "device", localField: "Device_ID", foreignField: "Device_ID", as: "device_info" } }, { $lookup: { from: "shop", localField: "Shop_ID", foreignField: "Shop_ID", as: "shop_info" } }, { $unwind: "$device_info" }, { $unwind: "$shop_info" }, { $project: { Shop_Name: "$shop_info.Shop_Name", Carrier: "$device_info.Carrier" } } ])	device
db.stock.aggregate([ { $lookup: { from: "shop", localField: "Shop_ID", foreignField: "Shop_ID", as: "shop_info" } }, { $unwind: "$shop_info" }, { $group: { _id: "$Shop_ID", shop_name: { $first: "$shop_info.Shop_Name" }, count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Shop_Name: "$shop_name" } } ])	device
db.stock.aggregate([ { $lookup: { from: "shop", localField: "Shop_ID", foreignField: "Shop_ID", as: "shop_info" } }, { $unwind: "$shop_info" }, { $group: { _id: "$Shop_ID", shop_name: { $first: "$shop_info.Shop_Name" }, count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Shop_Name: "$shop_name" } } ])	device
db.stock.aggregate([ { $lookup: { from: "shop", localField: "Shop_ID", foreignField: "Shop_ID", as: "shop_info" } }, { $unwind: "$shop_info" }, { $group: { _id: "$shop_info.Shop_Name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } { $project: { Shop_Name: "$_id" } } ])	device
db.stock.aggregate([ { $lookup: { from: "shop", localField: "Shop_ID", foreignField: "Shop_ID", as: "shop_info" } }, { $unwind: "$shop_info" }, { $group: { _id: "$Shop_ID", totalQuantity: { $sum: "$Quantity" }, shopName: { $first: "$shop_info.Shop_Name" } } }, { $sort: { totalQuantity: -1 } }, { $limit: 1 }, { $project: { shopName: 1 } } ])	device
db.stock.aggregate([ { $lookup: { from: "shop", localField: "Shop_ID", foreignField: "Shop_ID", as: "shop_info" } }, { $unwind: "$shop_info" }, { $group: { _id: "$Shop_ID", totalQuantity: { $sum: "$Quantity" }, shopName: { $first: "$shop_info.Shop_Name" } } }, { $sort: { totalQuantity: -1 } }, { $limit: 1 }, { $project: { shopName: 1 } } ])	device
db.device.aggregate([ { $group: { _id: "$Software_Platform", count: { $sum: 1 } } } ])	device
db.device.aggregate([ { $group: { _id: "$Software_Platform", count: { $sum: 1 } } }, { $project: { Software_Platform: "$_id", count: 1 } } ])	device
db.device.aggregate([ { $group: { _id: "$Software_Platform", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $project: { Software_Platform: "$_id"} } ])	device
db.device.aggregate([ { $group: { _id: "$Software_Platform", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $project: { Software_Platform: "$_id" } } ])	device
db.device.aggregate([ { $group: { _id: "$Software_Platform", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Software_Platform: "$_id" } } ])	device
db.device.aggregate([ { $group: { _id: "$Software_Platform", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Software_Platform: "$_id" } } ])	device
db.shop.aggregate([ { $lookup: { from: "stock", localField: "Shop_ID", foreignField: "Shop_ID", as: "device_stock" } }, { $match: { "device_stock": { $size: 0 } } }, { $project: { Shop_Name: 1 } } ])	device
db.shop.aggregate([ { $lookup: { from: "stock", localField: "Shop_ID", foreignField: "Shop_ID", as: "stock_info" } }, { $match: { "stock_info": { $size: 0 } } }, { $project: { Shop_Name: 1 } } ])	device
db.device.aggregate([ { $lookup: { from: "stock", localField: "Device_ID", foreignField: "Device_ID", as: "stock_data" } }, { $match: { "stock_data": { $size: 0 } } }, { $project: { Carrier: 1 } } ])	device
db.device.aggregate([ { $lookup: { from: "stock", localField: "Device_ID", foreignField: "Device_ID", as: "stock_info" } }, { $match: { "stock_info": { $size: 0 } } }, { $project: { Carrier: 1 } } ])	device
db.stock.aggregate([ { $group: { _id: "$Device_ID", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $lookup: { from: "device", localField: "_id", foreignField: "Device_ID", as: "device_info" } }, { $unwind: "$device_info" }, { $group: { _id: "$device_info.Carrier" } }, { $project: { Carrier: "$_id" } } ])	device
db.Customers.find( { Customer_Name: 'Harold' }, { Customer_Phone: 1, Customer_Email_Address: 1 } )	cre_Drama_Workshop_Groups
db.Customers.find( { Customer_Name: 'Harold' }, { Customer_Phone: 1, Customer_Email_Address: 1 } )	cre_Drama_Workshop_Groups
db.Drama_Workshop_Groups.find({}, {Store_Name: 1})	cre_Drama_Workshop_Groups
db.Drama_Workshop_Groups.find({}, {Store_Name: 1})	cre_Drama_Workshop_Groups
db.Marketing_Regions.find({ Marketing_Region_Name: 'China' }, { Marketing_Region_Descriptrion: 1 })	cre_Drama_Workshop_Groups
db.Marketing_Regions.find({Marketing_Region_Name: 'China'}, {Marketing_Region_Descriptrion: 1})	cre_Drama_Workshop_Groups
db.Products.aggregate([ { $group: { _id: null, averagePrice: { $avg: "$Product_Price" } } }, { $lookup: { from: "Products", let: { averagePrice: "$averagePrice" }, pipeline: [ { $match: { $expr: { $gt: ["$Product_Price", "$$averagePrice"] } } }, { $project: { Product_Name: 1 } } ], as: "products_above_average" } }, { $unwind: "$products_above_average" }, { $group: { _id: "$products_above_average.Product_Name" } }, { $project: { Product_Name: "$_id" } } ])	cre_Drama_Workshop_Groups
db.Products.find({}, {Product_Name: 1}).sort({Product_Price: -1}).limit(1)	cre_Drama_Workshop_Groups
db.Products.find({}, {Product_Name: 1}).sort({Product_Price: -1}).limit(1)	cre_Drama_Workshop_Groups
db.Products.find({}, {Product_Name: 1}).sort({Product_Price: 1})	cre_Drama_Workshop_Groups
db.Products.find({}, {Product_Name: 1}).sort({Product_Price: 1})	cre_Drama_Workshop_Groups
db.Performers.find({Customer_Name: 'Ashley'}, {Customer_Phone: 1})	cre_Drama_Workshop_Groups
db.Performers.find({Customer_Name: 'Ashley'}, {Customer_Phone: 1})	cre_Drama_Workshop_Groups
db.Invoices.aggregate([ { $group: { _id: "$payment_method_code", count: { $sum: 1 } } }, { $project: { payment_method_code: "$_id", count: 1 } } ])	cre_Drama_Workshop_Groups
db.Invoices.aggregate([ { $group: { _id: "$payment_method_code", count: { $sum: 1 } } } ])	cre_Drama_Workshop_Groups
db.Invoices.aggregate([ { $group: { _id: "$payment_method_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { payment_method_code: "$_id" } } ])	cre_Drama_Workshop_Groups
db.Invoices.aggregate([ { $group: { _id: "$payment_method_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { payment_method_code: "$_id" } } ])	cre_Drama_Workshop_Groups
db.Marketing_Regions.aggregate([ { $lookup: { from: "Stores", localField: "Marketing_Region_Code", foreignField: "Marketing_Region_Code", as: "stores" } }, { $match: { "stores.Store_Name": "Rob Dinning" } }, { $project: { Marketing_Region_Name: 1 } } ])	cre_Drama_Workshop_Groups
db.Marketing_Regions.aggregate([ { $lookup: { from: "Stores", localField: "Marketing_Region_Code", foreignField: "Marketing_Region_Code", as: "store_data" } }, { $unwind: "$store_data" }, { $match: { "store_data.Store_Name": "Rob Dinning" } }, { $project: { Marketing_Region_Name: 1 } } ])	cre_Drama_Workshop_Groups
db.Ref_Service_Types.aggregate([ { $lookup: { from: "Services", localField: "Service_Type_Code", foreignField: "Service_Type_Code", as: "services" } }, { $unwind: "$services" }, { $match: { "services.Product_Price": { $gt: 100 } } }, { $project: { Service_Type_Description: 1 } } ])	cre_Drama_Workshop_Groups
db.Ref_Service_Types.aggregate([ { $lookup: { from: "Services", localField: "Service_Type_Code", foreignField: "Service_Type_Code", as: "services" } }, { $unwind: "$services" }, { $match: { "services.Product_Price": { $gt: 100 } } }, { $project: { Service_Type_Description: 1 } } ])	cre_Drama_Workshop_Groups
db.Ref_Service_Types.aggregate([ { $lookup: { from: "Services", localField: "Service_Type_Code", foreignField: "Service_Type_Code", as: "services" } }, { $project: { Service_Type_Description: 1, Service_Type_Code: 1, count: { $size: "$services" } } } ])	cre_Drama_Workshop_Groups
db.Ref_Service_Types.aggregate([ { $lookup: { from: "Services", localField: "Service_Type_Code", foreignField: "Service_Type_Code", as: "services" } }, { $project: { Service_Type_Description: 1, Service_Type_Code: 1, serviceCount: { $size: "$services" } } } ])	cre_Drama_Workshop_Groups
db.Drama_Workshop_Groups.aggregate([ { $lookup: { from: "Services", localField: "Workshop_Group_ID", foreignField: "Workshop_Group_ID", as: "services" } }, { $match: { "services.Product_Name": "film" } }, { $project: { Store_Phone: 1, Store_Email_Address: 1 } } ])	cre_Drama_Workshop_Groups
db.Drama_Workshop_Groups.aggregate([ { $lookup: { from: "Services", localField: "Workshop_Group_ID", foreignField: "Workshop_Group_ID", as: "services" } }, { $match: { "services.Product_Name": "film" } }, { $project: { Store_Phone: 1, Store_Email_Address: 1 } } ])	cre_Drama_Workshop_Groups
db.Products.aggregate([ { $group: { _id: "$Product_Name", averagePrice: { $avg: "$Product_Price" } } } ])	cre_Drama_Workshop_Groups
db.Products.aggregate([ { $group: { _id: "$Product_Name", averagePrice: { $avg: "$Product_Price" } } } ])	cre_Drama_Workshop_Groups
db.Products.aggregate([ { $group: { _id: "$Product_Name", averagePrice: { $avg: "$Product_Price" } } }, { $match: { averagePrice: { $lt: 1000000 } } }, { $project: { Product_Name: "$_id" } } ])	cre_Drama_Workshop_Groups
db.Products.aggregate([ { $group: { _id: "$Product_Name", averagePrice: { $avg: "$Product_Price" } } }, { $match: { averagePrice: { $lt: 1000000 } } }, { $project: { Product_Name: "$_id" } } ])	cre_Drama_Workshop_Groups
db.Drama_Workshop_Groups.aggregate([ { $group: { _id: "$Currency_Code" } }, { $count: "distinct_currency_codes" } ])	cre_Drama_Workshop_Groups
db.Drama_Workshop_Groups.aggregate([ { $group: { _id: "$Marketing_Region_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { Marketing_Region_Code: "$_id" } }])	cre_Drama_Workshop_Groups
db.Drama_Workshop_Groups.aggregate([ { $group: { _id: "$Marketing_Region_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	cre_Drama_Workshop_Groups
db.Bookings.aggregate([ { $group: { _id: "$Status_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Status_Code: "$_id" } } ])	cre_Drama_Workshop_Groups
db.Bookings.aggregate([ { $group: { _id: "$Status_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { status_code: "$_id" } }])	cre_Drama_Workshop_Groups
db.Clients.aggregate([ { $lookup: { from: "Bookings", localField: "Client_ID", foreignField: "Customer_ID", as: "bookings" } }, { $match: { "bookings": { $size: 0 } } }, { $project: { Customer_Name: 1 } } ])	cre_Drama_Workshop_Groups
db.Clients.aggregate([ { $lookup: { from: "Bookings", localField: "Client_ID", foreignField: "Customer_ID", as: "bookings" } }, { $match: { "bookings": { $size: 0 } } }, { $project: { Customer_Name: 1 } } ])	cre_Drama_Workshop_Groups
db.Invoices.aggregate([ { $group: { _id: "$Product_ID", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	cre_Drama_Workshop_Groups
db.Invoices.aggregate([ { $group: { _id: "$Product_ID", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Product_ID: "$_id" } } ])	cre_Drama_Workshop_Groups
db.Ref_Service_Types.aggregate([ { $lookup: { from: "Services", localField: "Service_Type_Code", foreignField: "Service_Type_Code", as: "services" } }, { $match: { "services.Product_Name": { $all: ["photo", "film"] } } }, { $project: { Service_Type_Description: 1 } } ])	cre_Drama_Workshop_Groups
db.Ref_Service_Types.aggregate([ { $lookup: { from: "Services", localField: "Service_Type_Code", foreignField: "Service_Type_Code", as: "services" } }, { $match: { "services.Product_Name": { $all: ["photo", "film"] } } }, { $project: { Service_Type_Description: 1 } } ])	cre_Drama_Workshop_Groups
db.Manufacturers.aggregate([ { $group: { _id: null, averageRevenue: { $avg: "$Revenue" }, maximumRevenue: { $max: "$Revenue" }, totalRevenue: { $sum: "$Revenue" } } }, { $project: { averageRevenue: 1, maximumRevenue: 1, totalRevenue: 1 } } ])	manufactory_1
db.Manufacturers.find({}, { Name: 1, Headquarter: 1, Revenue: 1 }).sort({ Revenue: -1 })	manufactory_1
db.Manufacturers.aggregate([ { $group: { _id: "$Founder", TotalRevenue: { $sum: "$Revenue" } } }, { $project: { Founder: "$_id", TotalRevenue: 1 } } ])	manufactory_1
db.Manufacturers.aggregate([ { $group: { _id: "$Founder", totalRevenue: { $sum: "$Revenue" } } }, { $project: { founder: "$_id", totalRevenue: 1 } } ])	manufactory_1
db.Manufacturers.aggregate([ { $group: { _id: "$Headquarter", maxRevenue: { $max: "$Revenue" }, name: { $first: "$Name" } } }, { $project: { name: 1, revenue: "$maxRevenue", Headquarter: "$_id" } } ])	manufactory_1
db.Manufacturers.aggregate([ { $lookup: { from: "Products", localField: "Code", foreignField: "Manufacturer", as: "products" } }, { $project: { Name: 1, TotalRevenue: { $sum: "$Revenue" } } } ])	manufactory_1
db.Manufacturers.aggregate([ { $group: { _id: "$Name", TotalRevenue: { $sum: "$Revenue" } } } ])	manufactory_1
db.Products.aggregate([ { $lookup: { from: "Manufacturers", localField: "Manufacturer", foreignField: "Code", as: "ManufacturerInfo" } }, { $unwind: "$ManufacturerInfo" }, { $group: { _id: "$ManufacturerInfo.Name", AveragePrice: { $avg: "$Price" } } }, { $project: { ManufacturerName: "$_id", AveragePrice: 1 } } ])	manufactory_1
db.Products.aggregate([ { $lookup: { from: "Manufacturers", localField: "Manufacturer", foreignField: "Code", as: "manufacturer_info" } }, { $unwind: "$manufacturer_info" }, { $group: { _id: "$manufacturer_info.Name", AveragePrice: { $avg: "$Price" } } }, { $project: { ManufacturerName: "$_id", AveragePrice: 1 } } ])	manufactory_1
db.Manufacturers.aggregate([ { $lookup: { from: "Products", localField: "Code", foreignField: "Manufacturer", as: "products" } }, { $project: { Headquarter: 1, productCount: { $size: { $setUnion: ["$products.Name", []] } } } }, { $group: { _id: "$Headquarter", totalProducts: { $sum: "$productCount" } } } ])	manufactory_1
db.Products.aggregate([ { $lookup: { from: "Manufacturers", localField: "Manufacturer", foreignField: "Code", as: "Manufacturer_info" } }, { $match: { "Manufacturer_info.Name": {$ne: "Sony"} } }, { $group: { _id: "$Name", count: { $sum: 1 } } }, { $group: { _id: null, total: { $sum: 1 } } }, { $project: { total: 1 } } ])	manufactory_1
db.Products.find({}, { Name: 1})	manufactory_1
db.Products.find({}, { Name: 1})	manufactory_1
db.Products.find({}, {Name: 1, Price: 1})	manufactory_1
db.Products.find({ Price: { $lte: 200 } }, { Name: 1 })	manufactory_1
db.Products.aggregate([ { $group: { _id: null, averagePrice: { $avg: "$Price" } } }, { $project: { averagePrice: 1 } } ])	manufactory_1
db.Products.aggregate([ { $match: { Manufacturer: 2 } }, { $group: { _id: null, averagePrice: { $avg: "$Price" } } }, { $project: { averagePrice: 1 } } ])	manufactory_1
db.Products.aggregate([ { $match: { Manufacturer: 2 } }, { $group: { _id: null, averagePrice: { $avg: "$Price" } } }, { $project: { averagePrice: 1 } } ])	manufactory_1
db.Products.find( { Price: { $gte: 180 } }, { Name: 1, Price: 1 } ).sort( { Price: -1, Name: 1 } )	manufactory_1
db.Products.find({ Price: { $gte: 180 } }, { Name: 1, Price: 1 }).sort({ Price: -1, Name: 1 })	manufactory_1
db.Products.aggregate([ { $group: { _id: "$Manufacturer", averagePrice: { $avg: "$Price" } } }, { $project: { _id: 1, averagePrice: 1 } } ])	manufactory_1
db.Products.aggregate([ { $group: { _id: "$Manufacturer", averagePrice: { $avg: "$Price" } } } ])	manufactory_1
db.Products.aggregate([ { $lookup: { from: "Manufacturers", localField: "Manufacturer", foreignField: "Code", as: "manufacturer_info" } }, { $unwind: "$manufacturer_info" }, { $group: { _id: "$manufacturer_info.Name", averagePrice: { $avg: "$Price" } } }, { $project: { manufacturerName: "$_id", averagePrice: 1 } } ])	manufactory_1
db.Products.aggregate([ { $lookup: { from: "Manufacturers", localField: "Manufacturer", foreignField: "Code", as: "manufacturer_info" } }, { $unwind: "$manufacturer_info" }, { $group: { _id: "$manufacturer_info.Name", averagePrice: { $avg: "$Price" } } } ])	manufactory_1
db.Products.aggregate([ { $lookup: { from: "Manufacturers", localField: "Manufacturer", foreignField: "Code", as: "manufacturer_info" } }, { $unwind: "$manufacturer_info" }, { $group: { _id: "$manufacturer_info.Name", avgPrice: { $avg: "$Price" } } }, { $match: { avgPrice: { $gte: 150 } } }, { $project: { name: "$_id", avgPrice: 1 } } ])	manufactory_1
db.Products.find({}, { Name: 1, Price: 1 }).sort({ Price: 1 }).limit(1)	manufactory_1
db.Products.find({}, { Name: 1, Price: 1 }).sort({ Price: 1 }).limit(1)	manufactory_1
db.Problem_Log.find({}, {problem_log_id: 1}).sort({log_entry_date: -1}).limit(1)	tracking_software_problems
db.Problem_Log.find({}, { problem_log_id: 1 }).sort({ log_entry_date: -1 }).limit(1)	tracking_software_problems
db.Problem_Log.find({}, {problem_log_id: 1, problem_id: 1}).sort({log_entry_date: 1}).limit(1)	tracking_software_problems
db.Problem_Log.find({}, {problem_log_id: 1, problem_id: 1}).sort({log_entry_date: 1}).limit(1)	tracking_software_problems
db.Problem_Log.find({}, { problem_log_id: 1, log_entry_description: 1 })	tracking_software_problems
db.Problem_Log.find({}, {problem_log_id: 1, log_entry_description: 1})	tracking_software_problems
db.Staff.aggregate([ { $lookup: { from: "Problem_Log", localField: "staff_id", foreignField: "assigned_to_staff_id", as: "problem_logs" } }, { $unwind: "$problem_logs" }, { $match: { "problem_logs.problem_id": 1 } }, { $group: { _id: { staff_first_name: "$staff_first_name", staff_last_name: "$staff_last_name" } } }, { $project: { staff_first_name: "$_id.staff_first_name", staff_last_name: "$_id.staff_last_name" } } ])	tracking_software_problems
db.Staff.aggregate([ { $lookup: { from: "Problem_Log", localField: "staff_id", foreignField: "assigned_to_staff_id", as: "assigned_problems" } }, { $match: { "assigned_problems.problem_id": 1 } }, { $project: { staff_first_name: 1, staff_last_name: 1 } } ])	tracking_software_problems
db.Problem_Log.aggregate([ { $lookup: { from: "Staff", localField: "assigned_to_staff_id", foreignField: "staff_id", as: "assigned_staff" } }, { $unwind: "$assigned_staff" }, { $match: { "assigned_staff.staff_first_name": "Rylan", "assigned_staff.staff_last_name": "Homenick" } }, { $project: { problem_id: "$problem_id", problem_log_id: "$problem_log_id" } } ])	tracking_software_problems
db.Problems.aggregate([ { $lookup: { from: "Product", localField: "product_id", foreignField: "product_id", as: "product_info" } }, { $unwind: "$product_info" }, { $group: { _id: "$product_info.product_name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	tracking_software_problems
db.Problems.aggregate([ { $lookup: { from: "Product", localField: "product_id", foreignField: "product_id", as: "product_info" } }, { $unwind: "$product_info" }, { $group: { _id: "$product_info.product_name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	tracking_software_problems
db.Problems.aggregate([ { $lookup: { from: "Staff", localField: "reported_by_staff_id", foreignField: "staff_id", as: "staff_info" } }, { $unwind: "$staff_info" }, { $match: { "staff_info.staff_first_name": "Christop" } }, { $project: { problem_description: 1 } } ])	tracking_software_problems
db.Problems.aggregate([ { $lookup: { from: "Staff", localField: "reported_by_staff_id", foreignField: "staff_id", as: "staff_info" } }, { $match: { "staff_info.staff_first_name": "Christop" } }, { $project: { problem_description: 1 } } ])	tracking_software_problems
db.Problems.aggregate([ { $lookup: { from: "Staff", localField: "reported_by_staff_id", foreignField: "staff_id", as: "staff_info" } }, { $match: { "staff_info.staff_last_name": "Bosco" } }, { $project: { problem_id: 1 } } ])	tracking_software_problems
db.Problems.aggregate([ { $lookup: { from: "Staff", localField: "reported_by_staff_id", foreignField: "staff_id", as: "staff_info" } }, { $match: { "staff_info.staff_last_name": "Bosco" } }, { $project: { problem_id: 1 } } ])	tracking_software_problems
db.Problems.aggregate([ { $lookup: { from: "Product", localField: "product_id", foreignField: "product_id", as: "product_info" } }, { $unwind: "$product_info" }, { $group: { _id: "$product_info.product_id", count: { $sum: 1 } } }, { $project: { product_id: "$_id", count: 1 } } ])	tracking_software_problems
db.Problems.aggregate([ { $lookup: { from: "Product", localField: "product_id", foreignField: "product_id", as: "product_info" } }, { $unwind: "$product_info" }, { $group: { _id: "$product_info.product_id", count: { $sum: 1 } } }, { $project: { product_id: "$_id", count: 1 } } ])	tracking_software_problems
db.Problems.aggregate([ { $lookup: { from: "Staff", localField: "reported_by_staff_id", foreignField: "staff_id", as: "reporting_staff" } }, { $unwind: "$reporting_staff" }, { $match: { "reporting_staff.staff_first_name": "Christop", "reporting_staff.staff_last_name": "Berge" } }, { $lookup: { from: "Staff", localField: "closure_authorised_by_staff_id", foreignField: "staff_id", as: "authorising_staff" } }, { $unwind: "$authorising_staff" }, { $match: { "authorising_staff.staff_first_name": "Ashley", "authorising_staff.staff_last_name": "Medhurst" } }, { $project: { product_id: 1 } } ])	tracking_software_problems
db.Problems.aggregate([ { $lookup: { from: "Staff", localField: "reported_by_staff_id", foreignField: "staff_id", as: "staff_info" } }, { $match: { "staff_info.staff_first_name": "Lysanne", "staff_info.staff_last_name": "Turcotte" } }, { $sort: { "date_problem_reported": 1 } }, { $limit: 1 }, { $addFields: { "earliest_date": "$date_problem_reported" } }, { $lookup: { from: "Problems", let: { "earliest_date": "$earliest_date" }, pipeline: [ { $match: { $expr: { $lt: [ "$date_problem_reported", "$$earliest_date" ] } } }, { $project: { "_id": 0, "problem_id": 1 } } ], as: "earlier_problems" } }, { $unwind: "$earlier_problems" }, { $replaceRoot: { newRoot: "$earlier_problems" } } ])	tracking_software_problems
db.Problems.aggregate([ { $lookup: { from: "Staff", localField: "reported_by_staff_id", foreignField: "staff_id", as: "reported_by_staff" } }, { $match: { "reported_by_staff.staff_first_name": "Lysanne", "reported_by_staff.staff_last_name": "Turcotte" } }, { $group: { _id: null, minDate: { $min: "$date_problem_reported" } } }, { $lookup: { from: "Problems", let: { minDate: "$minDate" }, pipeline: [ { $match: { $expr: { $lt: ["$date_problem_reported", "$$minDate"] } } }, { $project: { problem_id: 1 } } ], as: "problems_reported_before" } }, { $unwind: "$problems_reported_before" }, { $replaceRoot: { newRoot: "$problems_reported_before" } } ])	tracking_software_problems
db.Problems.aggregate([ { $lookup: { from: "Staff", localField: "reported_by_staff_id", foreignField: "staff_id", as: "reporter" } }, { $match: { "reporter.staff_first_name": "Rylan", "reporter.staff_last_name": "Homenick" } }, { $group: { _id: null, maxDate: { $max: "$date_problem_reported" } } }, { $lookup: { from: "Problems", let: { latestReportedDate: "$maxDate" }, pipeline: [ { $match: { $expr: { $gt: ["$date_problem_reported", "$$latestReportedDate"] } } }, { $project: { problem_id: 1 } } ], as: "problemsAfter" } }, { $unwind: "$problemsAfter" }, { $replaceRoot: { newRoot: "$problemsAfter" } } ])	tracking_software_problems
db.Problems.aggregate([ { $lookup: { from: "Product", localField: "product_id", foreignField: "product_id", as: "product_info" } }, { $unwind: "$product_info" }, { $group: { _id: "$product_info.product_name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 3 }, { $project: { product_name: "$_id" } } ])	tracking_software_problems
db.Problems.aggregate([ { $lookup: { from: "Product", localField: "product_id", foreignField: "product_id", as: "product_info" } }, { $unwind: "$product_info" }, { $group: { _id: "$product_info.product_name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 3 }, { $project: { product_name: "$_id" } } ])	tracking_software_problems
db.Problems.aggregate([ { $lookup: { from: "Product", localField: "product_id", foreignField: "product_id", as: "product" } }, { $lookup: { from: "Staff", localField: "reported_by_staff_id", foreignField: "staff_id", as: "staff" } }, { $unwind: "$product" }, { $unwind: "$staff" }, { $match: { $or: [ { "staff.staff_first_name": "Lacey", "staff.staff_last_name": "Bosco" }, { "staff.staff_first_name": "Kenton", "staff.staff_last_name": "Champlin" } ] } }, { $group: { _id: "$product.product_name", count: { $sum: 1 } } }, { $match: { count: 2 } }, { $project: { product_name: "$_id" } } ])	tracking_software_problems
db.branch.find({}, { Name: 1, Address_road: 1, City: 1 }).sort({ Open_year: 1 })	shop_membership
db.branch.find({}, { Name: 1, Address_road: 1, City: 1 }).sort({ Open_year: 1 })	shop_membership
db.branch.find({}, { Name: 1 }).sort({ membership_amount: -1 }).limit(3)	shop_membership
db.branch.find({}, { Name: 1 }).sort({ membership_amount: -1 }).limit(3)	shop_membership
db.branch.aggregate([ { $group: { _id: "$Open_year", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { open_year: "$_id" } } ])	shop_membership
db.branch.aggregate([ { $group: { _id: "$Open_year", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Open_year: "$_id" } } ])	shop_membership
db.branch.aggregate([ { $match: { $or: [{ Open_year: 2011 }, { City: "London" }] } }, { $group: { _id: null, minMembershipAmount: { $min: "$membership_amount" }, maxMembershipAmount: { $max: "$membership_amount" } } }, { $project: { minMembershipAmount: 1, maxMembershipAmount: 1 } } ])	shop_membership
db.branch.aggregate([ { $match: { $or: [ { Open_year: 2011 }, { City: "London" } ] } }, { $group: { _id: null, minimum_membership_amount: { $min: "$membership_amount" }, maximum_membership_amount: { $max: "$membership_amount" } } }, { $project: { minimum_membership_amount: 1, maximum_membership_amount: 1 } } ])	shop_membership
db.member.find({}, { Card_Number: 1, Name: 1, Hometown: 1 }).sort({ Level: -1 })	shop_membership
db.member.find({}, { Card_Number: 1, Name: 1, Hometown: 1}).sort({Level: -1})	shop_membership
db.member.aggregate([ { $group: { _id: "$Level", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Level: "$_id" } } ])	shop_membership
db.member.aggregate([ { $group: { _id: "$Level", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Level: "$_id" } } ])	shop_membership
db.member.aggregate([ { $lookup: { from: "membership_register_branch", localField: "Member_ID", foreignField: "Member_ID", as: "registered_branches" } }, { $match: { registered_branches: { $size: 0 } } }, { $project: { Name: 1 } } ])	shop_membership
db.member.aggregate([ { $lookup: { from: "membership_register_branch", localField: "Member_ID", foreignField: "Member_ID", as: "registration" } }, { $match: { registration: { $size: 0 } } }, { $project: { Name: 1 } } ])	shop_membership
db.purchase.aggregate([ { $lookup: { from: "member", localField: "Member_ID", foreignField: "Member_ID", as: "member_info" } }, { $match: { "member_info.Level": 6 } }, { $count: "total" } ])	shop_membership
db.member.find({ Hometown: { $regex: /Kentucky/ } }, { Card_Number: 1 })	shop_membership
db.member.find({ Hometown: { $regex: /Kentucky/ } }, { Card_Number: 1 })	shop_membership
db.Student.aggregate([ { $group: { _id: null, maxAge: { $max: "$Age" } } }, { $project: { maxAge: 1 } } ])	voter_2
db.Student.aggregate([ { $group: { _id: null, oldestAge: { $max: "$Age" } } }, { $project: { oldestAge: 1 } } ])	voter_2
db.Student.find({Major: 50}, {LName: 1})	voter_2
db.Student.find({Major: 50}, {LName: 1})	voter_2
db.Student.find({Age: {$gt: 22}}, {Fname: 1})	voter_2
db.Student.find({Age: {$gt: 22}}, {Fname: 1})	voter_2
db.Student.aggregate([ { $match: { Sex: 'F' } }, { $group: { _id: null, averageAge: { $avg: "$Age" } } }, { $project: { averageAge: 1 } } ])	voter_2
db.Student.aggregate([ { $match: { Sex: 'F' } }, { $group: { _id: null, averageAge: { $avg: "$Age" } } }, { $project: { averageAge: 1 } } ])	voter_2
db.Student.aggregate([ { $match: { Major: 600 } }, { $group: { _id: null, maxAge: { $max: "$Age" }, minAge: { $min: "$Age" } } }, { $project: { maxAge:1, minAge:1 } } ])	voter_2
db.Student.aggregate([ { $match: { Major: 600 } }, { $group: { _id: null, maxAge: { $max: "$Age" }, minAge: { $min: "$Age" } } }, { $project: { maxAge:1, minAge:1 } } ])	voter_2
db.Student.find({city_code: 'BAL'}, {Advisor: 1})	voter_2
db.Student.find({city_code: 'BAL'}, {Advisor: 1})	voter_2
db.Voting_record.aggregate([ { $group: { _id: { Registration_Date: "$Registration_Date", Election_Cycle: "$Election_Cycle" } } }, { $project: { Registration_Date: "$_id.Registration_Date", Election_Cycle: "$_id.Election_Cycle" } } ])	voter_2
db.Voting_record.aggregate([ { $group: { _id: { President_Vote: "$President_Vote", Vice_President_Vote: "$Vice_President_Vote" } } }, { $project: { President_Vote: "$_id.President_Vote", Vice_President_Vote: "$_id.Vice_President_Vote" } } ])	voter_2
db.Student.aggregate([ { $lookup: { from: "Voting_record", localField: "StuID", foreignField: "Class_President_Vote", as: "president_votes" } }, { $match: { "president_votes": { $ne: [] } } }, { $group: { _id: "$LName" } }, { $project: { "LName": "$_id", "_id": 0 } } ])	voter_2
db.Voting_record.aggregate([ { $lookup: { from: "Student", localField: "Class_President_Vote", foreignField: "StuID", as: "student_info" } }, { $unwind: "$student_info" }, { $group: { _id: "$student_info.LName" } }, { $project: { LName: "$_id" } } ])	voter_2
db.Student.aggregate([ { $lookup: { from: "Voting_record", localField: "StuID", foreignField: "Class_Senator_Vote", as: "senator_votes" } }, { $match: { "senator_votes": { $ne: [] } } }, { $group: { _id: "$Fname" } }, { $project: { _id: 1 } } ])	voter_2
db.Student.aggregate([ { $lookup: { from: "Voting_record", localField: "StuID", foreignField: "Secretary_Vote", as: "secretary_votes" } }, { $match: { "secretary_votes.Election_Cycle": "Fall" } }, { $group: { _id: "$Age" } } ])	voter_2
db.Student.aggregate([ { $lookup: { from: "Voting_record", localField: "StuID", foreignField: "Secretary_Vote", as: "secretary_votes" } }, { $unwind: "$secretary_votes" }, { $match: { "secretary_votes.Election_Cycle": "Fall" } }, { $group: { _id: "$Age" } } ])	voter_2
db.Student.aggregate([ { $lookup: { from: "Voting_record", localField: "StuID", foreignField: "Treasurer_Vote", as: "treasurer_votes" } }, { $match: { "treasurer_votes.Election_Cycle": "Spring" } }, { $group: { _id: "$Advisor" } } ])	voter_2
db.Student.aggregate([ { $lookup: { from: "Voting_record", localField: "StuID", foreignField: "Treasurer_Vote", as: "treasurer_votes" } }, { $match: { "treasurer_votes.Election_Cycle": "Spring" } }, { $group: { _id: "$Advisor" } }, { $project: { Advisor: "$_id" } } ])	voter_2
db.Student.aggregate([ { $lookup: { from: "Voting_record", localField: "StuID", foreignField: "Treasurer_Vote", as: "treasurer_votes" } }, { $match: { "treasurer_votes": { $ne: [] } } }, { $group: { _id: "$Major" } } ])	voter_2
db.Student.aggregate([ { $lookup: { from: "Voting_record", localField: "StuID", foreignField: "Treasurer_Vote", as: "treasurer_votes" } }, { $match: { treasurer_votes: { $ne: [] } } }, { $group: { _id: "$Major" } }, { $project: { Major: "$_id" } } ])	voter_2
db.Student.aggregate([ { $match: { Sex: "F", StuID: { $in: db.Voting_record.distinct("President_Vote") } } }, { $project: { Fname: 1, LName: 1 } } ])	voter_2
db.Student.aggregate([ { $match: { Age: 18 } }, { $lookup: { from: "Voting_record", localField: "StuID", foreignField: "Vice_President_Vote", as: "vice_president_votes" } }, { $match: { "vice_president_votes": { $ne: [] } } }, { $project: { Fname: 1, LName: 1 } } ])	voter_2
db.Student.aggregate([ { $match: { Age: 18 } }, { $lookup: { from: "Voting_record", localField: "StuID", foreignField: "Vice_President_Vote", as: "votingRecord" }}, { $match: { "votingRecord": { $ne: [] } } }, { $project: { Fname: 1, LName: 1 } }, { $group: { _id: { Fname: "$Fname", LName: "$LName" } } }, { $project: { Fname: "$_id.Fname", LName: "$_id.LName" } } ])	voter_2
db.Student.aggregate([ { $match: { city_code: "NYC", StuID: { $in: db.Voting_record.distinct("Secretary_Vote", { Election_Cycle: "Spring" }) } } }, { $group: { _id: null, averageAge: { $avg: "$Age" } } } , { $project: { averageAge: 1} }])	voter_2
db.Student.aggregate([ { $match: { city_code: "NYC", StuID: { $in: db.Voting_record.distinct("Secretary_Vote", { Election_Cycle: "Spring" }) } } }, { $group: { _id: null, averageAge: { $avg: "$Age" } } }, { $project: { averageAge: 1 } } ])	voter_2
db.Student.aggregate([ { $lookup: { from: "Voting_record", localField: "StuID", foreignField: "Secretary_Vote", as: "secretary_votes" } }, { $unwind: "$secretary_votes" }, { $match: { "Sex": "F", "secretary_votes.Election_Cycle": "Spring" } }, { $group: { _id: null, avgAge: { $avg: "$Age" } } }, { $project: { avgAge: 1 } } ])	voter_2
db.Student.aggregate([ { $lookup: { from: "Voting_record", localField: "StuID", foreignField: "Secretary_Vote", as: "SecretaryVotes" } }, { $match: { "Sex": "F", "SecretaryVotes.Election_Cycle": "Spring" } }, { $group: { _id: null, averageAge: { $avg: "$Age" } } }, { $project: { averageAge: 1 } } ])	voter_2
db.Student.aggregate([ { $lookup: { from: "Voting_record", localField: "StuID", foreignField: "Vice_President_Vote", as: "VicePresidentVotes" } }, { $match: { "VicePresidentVotes": { $ne: [] }, "city_code": { $ne: "PIT" } } }, { $group: { _id: "$Fname" } }, { $project: { Fname: "$_id" } } ])	voter_2
db.Student.aggregate([ { $lookup: { from: "Voting_record", localField: "StuID", foreignField: "Vice_President_Vote", as: "VicePresidentVotes" } }, { $match: { "VicePresidentVotes": { $ne: [] }, "city_code": { $ne: "PIT" } } }, { $group: { _id: "$Fname" } } ])	voter_2
db.Student.aggregate([ { $lookup: { from: "Voting_record", localField: "StuID", foreignField: "President_Vote", as: "votes" } }, { $match: { "votes": { $ne: [] }, "Advisor": { $ne: "2192" } } }, { $group: { _id: "$LName" } }, { $project: { LName: "$_id" } } ])	voter_2
db.Student.aggregate([ { $lookup: { from: "Voting_record", localField: "StuID", foreignField: "President_Vote", as: "PresidentVotes" } }, { $match: { "PresidentVotes": {$ne: []}, "Advisor": {$ne: '2192'} } }, { $group: { _id: "$LName" } }, { $project: { LName: "$_id" } } ])	voter_2
db.Student.aggregate([ { $group: { _id: "$Advisor", totalStudents: { $sum: 1 } } } ])	voter_2
db.Student.aggregate([ { $group: { _id: "$Advisor", count: { $sum: 1 } } } ])	voter_2
db.Student.aggregate([ { $group: { _id: "$Advisor", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Advisor: "$_id" } } ])	voter_2
db.Student.aggregate([ { $group: { _id: "$Advisor", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Advisor: "$_id" } } ])	voter_2
db.Student.aggregate([ { $group: { _id: "$Major", count: { $sum: 1 } } }, { $match: { count: { $lt: 3 } } }, { $project: { Major: "$_id" } } ])	voter_2
db.Student.aggregate([ { $group: { _id: "$Major", count: { $sum: 1 } } }, { $match: { count: { $lt: 3 } } }, { $project: { Major: "$_id" } } ])	voter_2
db.Voting_record.aggregate([ { $group: { _id: "$Election_Cycle", count: { $sum: 1 } } } ])	voter_2
db.Voting_record.aggregate([ { $group: { _id: "$Election_Cycle", count: { $sum: 1 } } } ])	voter_2
db.Student.aggregate([ { $group: { _id: "$Major", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Major: "$_id" } } ])	voter_2
db.Student.aggregate([ { $group: { _id: "$Major", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { Major: "$_id" } }])	voter_2
db.Student.aggregate([ { $match: { Sex: "F" } }, { $group: { _id: "$Major", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { Majpr: "$_id" } }])	voter_2
db.Student.aggregate([ { $match: { Sex: 'F' } }, { $group: { _id: '$Major', count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { Major: "$_id" } }])	voter_2
db.Student.aggregate([ { $group: { _id: "$city_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	voter_2
db.Student.aggregate([ { $group: { _id: "$city_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { city_code: "$_id" } } ])	voter_2
db.Student.aggregate([ { $group: { _id: "$Advisor", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Advisor: "$_id" } } ])	voter_2
db.Student.aggregate([ { $group: { _id: "$Advisor", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Advisor: "$_id" } } ])	voter_2
db.Products.find({}, {product_name: 1, typical_buying_price: 1})	products_gen_characteristics
db.Products.aggregate([ { $project: { product_name: 1, typical_buying_price: 1 } } ])	products_gen_characteristics
db.Ref_Colors.find({}, { color_description: 1 })	products_gen_characteristics
db.Ref_Colors.find({}, { color_description: 1 })	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Ref_Product_Categories", localField: "product_category_code", foreignField: "product_category_code", as: "product_category" } }, { $match: { "product_category.product_category_description": "Spices" } }, { $project: { product_name: 1 } } ])	products_gen_characteristics
db.Products.find( { product_category_code: 'Spices' }, { product_name: 1 } )	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Ref_Product_Categories", localField: "product_category_code", foreignField: "product_category_code", as: "category" } }, { $match: { "category.product_category_description": "Seeds" } }, { $count: "numberOfProducts" } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Ref_Product_Categories", localField: "product_category_code", foreignField: "product_category_code", as: "category" } }, { $match: { "category.product_category_description": "Seeds" } }, { $count: "number_of_products" } ])	products_gen_characteristics
db.Products.find( { product_name: 'cumin' }, { product_category_code: 1, typical_buying_price: 1 } )	products_gen_characteristics
db.Products.find( { product_name: 'cumin' }, { product_category_code: 1, typical_buying_price: 1 } )	products_gen_characteristics
db.Products.findOne( { product_name: 'flax' }, { product_category_code: 1 } )	products_gen_characteristics
db.Products.findOne({product_name: 'flax'}, {product_category_code: 1})	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Ref_Colors", localField: "color_code", foreignField: "color_code", as: "color_info" } }, { $match: { "color_info.color_description": "yellow" } }, { $project: { product_name: 1 } } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Ref_Colors", localField: "color_code", foreignField: "color_code", as: "color_info" } }, { $match: { "color_info.color_description": "yellow" } }, { $project: { product_name: 1 } } ])	products_gen_characteristics
db.Ref_Product_Categories.aggregate([ { $lookup: { from: "Products", localField: "product_category_code", foreignField: "product_category_code", as: "products" } }, { $unwind: "$products" }, { $match: { "products.product_description": { $regex: /t/, $options: "i" } } }, { $project: { product_category_description: 1 } } ])	products_gen_characteristics
db.Ref_Product_Categories.aggregate([ { $lookup: { from: "Products", localField: "product_category_code", foreignField: "product_category_code", as: "products" } }, { $unwind: "$products" }, { $match: { "products.product_description": { $regex: /t/, $options: "i" } } }, { $project: { product_category_description: 1 } } ])	products_gen_characteristics
db.Products.aggregate([ { $match: { product_name: 'catnip' } }, { $lookup: { from: "Ref_Colors", localField: "color_code", foreignField: "color_code", as: "color_info" } }, { $unwind: "$color_info" }, { $project: { color_description: "$color_info.color_description" } } ])	products_gen_characteristics
db.Products.aggregate([ { $match: { product_name: 'catnip' } }, { $lookup: { from: 'Ref_Colors', localField: 'color_code', foreignField: 'color_code', as: 'color_info' } }, { $unwind: '$color_info' }, { $project: { color_description: '$color_info.color_description' } } ])	products_gen_characteristics
db.Products.aggregate([ { $match: { product_name: 'chervil' } }, { $lookup: { from: 'Ref_Colors', localField: 'color_code', foreignField: 'color_code', as: 'colorDetails' } }, { $unwind: '$colorDetails' }, { $project: { color_code: 1, color_description: '$colorDetails.color_description' } } ])	products_gen_characteristics
db.Products.aggregate([ { $match: { product_name: 'chervil' } }, { $lookup: { from: 'Ref_Colors', localField: 'color_code', foreignField: 'color_code', as: 'color_info' } }, { $unwind: '$color_info' }, { $project: { color_code: 1, color_description: '$color_info.color_description' } } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Product_Characteristics", localField: "product_id", foreignField: "product_id", as: "characteristic_info" } }, { $match: { "characteristic_info.1": { $exists: true } } }, { $lookup: { from: "Ref_Colors", localField: "color_code", foreignField: "color_code", as: "color_info" } }, { $project: { product_id: 1, color_description: { $arrayElemAt: ["$color_info.color_description", 0] } } } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Ref_Colors", localField: "color_code", foreignField: "color_code", as: "color_info" } }, { $match: { "color_info.color_description": "white" } }, { $project: { product_name: 1 } } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Ref_Colors", localField: "color_code", foreignField: "color_code", as: "color_info" } }, { $match: { "color_info.color_description": "white" } }, { $project: { product_name: 1 } } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Ref_Colors", localField: "color_code", foreignField: "color_code", as: "color_info" } }, { $match: { "color_info.color_description": "yellow" } }, { $project: { product_name: 1, typical_buying_price: 1, typical_selling_price: 1 } } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Ref_Colors", localField: "color_code", foreignField: "color_code", as: "color_info" } }, { $match: { "color_info.color_description": "yellow" } }, { $project: { product_name: 1, typical_buying_price: 1, typical_selling_price: 1 } } ])	products_gen_characteristics
db.Products.aggregate([ { $match: { product_name: "sesame" } }, { $lookup: { from: "Product_Characteristics", localField: "product_id", foreignField: "product_id", as: "product_characteristics" } }, { $project: { count: { $size: "$product_characteristics" } } } ])	products_gen_characteristics
db.Products.aggregate([ { $match: { product_name: "sesame" } }, { $lookup: { from: "Product_Characteristics", localField: "product_id", foreignField: "product_id", as: "product_characteristics" } }, { $project: { count: { $size: "$product_characteristics" } } } ])	products_gen_characteristics
db.Products.aggregate([ { $match: { product_name: "sesame" } }, { $lookup: { from: "Product_Characteristics", localField: "product_id", foreignField: "product_id", as: "product_characteristics" } }, { $unwind: "$product_characteristics" }, { $lookup: { from: "Characteristics", localField: "product_characteristics.characteristic_id", foreignField: "characteristic_id", as: "characteristics" } }, { $unwind: "$characteristics" }, { $project: { characteristic_name: "$characteristics.characteristic_name" } } ])	products_gen_characteristics
db.Products.aggregate([ { $match: { product_name: "sesame" } }, { $lookup: { from: "Product_Characteristics", localField: "product_id", foreignField: "product_id", as: "product_characteristics" } }, { $unwind: "$product_characteristics" }, { $lookup: { from: "Characteristics", localField: "product_characteristics.characteristic_id", foreignField: "characteristic_id", as: "characteristics" } }, { $unwind: "$characteristics" }, { $project: { characteristic_name: "$characteristics.characteristic_name" } } ])	products_gen_characteristics
db.Products.aggregate([ { $match: { product_name: "cumin" } }, { $lookup: { from: "Product_Characteristics", localField: "product_id", foreignField: "product_id", as: "product_characteristics" } }, { $unwind: "$product_characteristics" }, { $lookup: { from: "Characteristics", localField: "product_characteristics.characteristic_id", foreignField: "characteristic_id", as: "characteristics" } }, { $unwind: "$characteristics" }, { $project: { characteristic_name: "$characteristics.characteristic_name", characteristic_data_type: "$characteristics.characteristic_data_type" } } ])	products_gen_characteristics
db.Products.aggregate([ { $match: { product_name: "cumin" } }, { $lookup: { from: "Product_Characteristics", localField: "product_id", foreignField: "product_id", as: "product_characteristics" } }, { $unwind: "$product_characteristics" }, { $lookup: { from: "Characteristics", localField: "product_characteristics.characteristic_id", foreignField: "characteristic_id", as: "characteristics" } }, { $unwind: "$characteristics" }, { $project: { characteristic_name: "$characteristics.characteristic_name", characteristic_data_type: "$characteristics.characteristic_data_type" } } ])	products_gen_characteristics
db.Products.aggregate([ { $match: { product_name: "sesame" } }, { $lookup: { from: "Product_Characteristics", localField: "product_id", foreignField: "product_id", as: "product_characteristics" } }, { $unwind: "$product_characteristics" }, { $lookup: { from: "Characteristics", localField: "product_characteristics.characteristic_id", foreignField: "characteristic_id", as: "characteristics" } }, { $unwind: "$characteristics" }, { $match: { "characteristics.characteristic_type_code": "Grade" } }, { $project: { characteristic_name: "$characteristics.characteristic_name" } } ])	products_gen_characteristics
db.Products.aggregate([ { $match: { product_name: "sesame" } }, { $lookup: { from: "Product_Characteristics", localField: "product_id", foreignField: "product_id", as: "product_characteristics" } }, { $unwind: "$product_characteristics" }, { $lookup: { from: "Characteristics", localField: "product_characteristics.characteristic_id", foreignField: "characteristic_id", as: "characteristics" } }, { $unwind: "$characteristics" }, { $match: { "characteristics.characteristic_type_code": "Grade" } }, { $project: { characteristic_name: "$characteristics.characteristic_name" } } ])	products_gen_characteristics
db.Products.aggregate([ { $match: { product_name: 'laurel' } }, { $lookup: { from: 'Product_Characteristics', localField: 'product_id', foreignField: 'product_id', as: 'characteristics' }}, { $project: { numberOfCharacteristics: { $size: "$characteristics" } } } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Product_Characteristics", localField: "product_id", foreignField: "product_id", as: "product_characteristics" } }, { $lookup: { from: "Characteristics", localField: "product_characteristics.characteristic_id", foreignField: "characteristic_id", as: "characteristics" } }, { $lookup: { from: "Ref_Colors", localField: "color_code", foreignField: "color_code", as: "ref_colors" } }, { $match: { "ref_colors.color_description": "red", "characteristics.characteristic_name": "fast" } }, { $project: { product_name: 1 } } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Product_Characteristics", localField: "product_id", foreignField: "product_id", as: "product_characteristics" } }, { $lookup: { from: "Characteristics", localField: "product_characteristics.characteristic_id", foreignField: "characteristic_id", as: "characteristics" } }, { $lookup: { from: "Ref_Colors", localField: "color_code", foreignField: "color_code", as: "ref_colors" } }, { $match: { "ref_colors.color_description": "red", "characteristics.characteristic_name": "fast" } }, { $project: { product_name: 1 } } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Product_Characteristics", localField: "product_id", foreignField: "product_id", as: "product_characteristics" } }, { $unwind: "$product_characteristics" }, { $lookup: { from: "Characteristics", localField: "product_characteristics.characteristic_id", foreignField: "characteristic_id", as: "characteristics" } }, { $unwind: "$characteristics" }, { $match: { "characteristics.characteristic_name": "hot" } }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1 } } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Product_Characteristics", localField: "product_id", foreignField: "product_id", as: "product_characteristics" } }, { $unwind: "$product_characteristics" }, { $lookup: { from: "Characteristics", localField: "product_characteristics.characteristic_id", foreignField: "characteristic_id", as: "characteristics" } }, { $unwind: "$characteristics" }, { $match: { "characteristics.characteristic_name": "hot" } }, { $group: { _id: null, count: { $sum: 1 } } } , { $project: { count: 1} }])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Product_Characteristics", localField: "product_id", foreignField: "product_id", as: "product_characteristics" } }, { $unwind: "$product_characteristics" }, { $lookup: { from: "Characteristics", localField: "product_characteristics.characteristic_id", foreignField: "characteristic_id", as: "characteristics" } }, { $unwind: "$characteristics" }, { $match: { "characteristics.characteristic_name": "warm" } }, { $group: { _id: "$product_name" } }, { $project: { product_name: "$_id" } } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Product_Characteristics", localField: "product_id", foreignField: "product_id", as: "product_characteristics" } }, { $unwind: "$product_characteristics" }, { $lookup: { from: "Characteristics", localField: "product_characteristics.characteristic_id", foreignField: "characteristic_id", as: "product_characteristics_details" } }, { $unwind: "$product_characteristics_details" }, { $match: { "product_characteristics_details.characteristic_name": "warm" } }, { $group: { _id: "$product_name" } }, { $project: { product_name: "$_id" } } ])	products_gen_characteristics
db.Ref_Product_Categories.findOne({product_category_code: 'Herbs'}, {unit_of_measure: 1})	products_gen_characteristics
db.Ref_Product_Categories.findOne({product_category_code: 'Herbs'}, {unit_of_measure: 1})	products_gen_characteristics
db.Ref_Product_Categories.find({ product_category_code: 'Spices' }, { product_category_description: 1 })	products_gen_characteristics
db.Ref_Product_Categories.findOne({ product_category_code: 'Spices' }, { product_category_description: 1 })	products_gen_characteristics
db.Ref_Product_Categories.find( { product_category_code: 'Herbs' }, { product_category_description: 1, unit_of_measure: 1 } )	products_gen_characteristics
db.Ref_Product_Categories.find( { product_category_code: 'Herbs' }, { product_category_description: 1, unit_of_measure: 1 } )	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Ref_Product_Categories", localField: "product_category_code", foreignField: "product_category_code", as: "category" } }, { $match: { product_name: "cumin" } }, { $unwind: "$category" }, { $project: { unit_of_measure: "$category.unit_of_measure" } } ])	products_gen_characteristics
db.Products.aggregate([ { $match: { product_name: 'cumin' } }, { $lookup: { from: 'Ref_Product_Categories', localField: 'product_category_code', foreignField: 'product_category_code', as: 'category' } }, { $unwind: '$category' }, { $project: { unit_of_measure: '$category.unit_of_measure' } } ])	products_gen_characteristics
db.Products.aggregate([ { $match: { product_name: "chervil" } }, { $lookup: { from: "Ref_Product_Categories", localField: "product_category_code", foreignField: "product_category_code", as: "product_category" } }, { $unwind: "$product_category" }, { $project: { unit_of_measure: "$product_category.unit_of_measure", product_category_code: "$product_category.product_category_code" } } ])	products_gen_characteristics
db.Products.aggregate([ { $match: { product_name: "chervil" } }, { $lookup: { from: "Ref_Product_Categories", localField: "product_category_code", foreignField: "product_category_code", as: "product_category" } }, { $unwind: "$product_category" }, { $project: { unit_of_measure: "$product_category.unit_of_measure", product_category_code: "$product_category.product_category_code" } } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Ref_Colors", localField: "color_code", foreignField: "color_code", as: "color_info" } }, { $lookup: { from: "Ref_Product_Categories", localField: "product_category_code", foreignField: "product_category_code", as: "category_info" } }, { $match: { "color_info.color_description": "white", "category_info.unit_of_measure": { $ne: "Handful" } } }, { $project: { product_name: 1 } } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Ref_Colors", localField: "color_code", foreignField: "color_code", as: "color_info" } }, { $unwind: "$color_info" }, { $group: { _id: "$color_info.color_description", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { color_description: "$_id" } } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Ref_Colors", localField: "color_code", foreignField: "color_code", as: "color_info" } }, { $unwind: "$color_info" }, { $group: { _id: "$color_info.color_description", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { color_description: "$_id" } } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Ref_Colors", localField: "color_code", foreignField: "color_code", as: "color_info" } }, { $unwind: "$color_info" }, { $group: { _id: "$color_info.color_description", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { color_description: "$_id" } } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Product_Characteristics", localField: "product_id", foreignField: "product_id", as: "product_characteristics" } }, { $unwind: "$product_characteristics" }, { $lookup: { from: "Characteristics", localField: "product_characteristics.characteristic_id", foreignField: "characteristic_id", as: "characteristics" } }, { $unwind: "$characteristics" }, { $group: { _id: "$characteristics.characteristic_name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { characteristic_name: "$_id" } } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Product_Characteristics", localField: "product_id", foreignField: "product_id", as: "product_characteristics" } }, { $unwind: "$product_characteristics" }, { $lookup: { from: "Characteristics", localField: "product_characteristics.characteristic_id", foreignField: "characteristic_id", as: "characteristics" } }, { $unwind: "$characteristics" }, { $group: { _id: "$characteristics.characteristic_name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { characteristic_name: "$_id" } } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Product_Characteristics", localField: "product_id", foreignField: "product_id", as: "product_characteristics" } }, { $unwind: "$product_characteristics" }, { $lookup: { from: "Characteristics", localField: "product_characteristics.characteristic_id", foreignField: "characteristic_id", as: "characteristics" } }, { $unwind: "$characteristics" }, { $group: { _id: "$characteristics.characteristic_name", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { characteristic_name: "$_id" } } ])	products_gen_characteristics
db.Products.aggregate([ { $lookup: { from: "Product_Characteristics", localField: "product_id", foreignField: "product_id", as: "product_characteristics" } }, { $unwind: "$product_characteristics" }, { $lookup: { from: "Characteristics", localField: "product_characteristics.characteristic_id", foreignField: "characteristic_id", as: "characteristics" } }, { $unwind: "$characteristics" }, { $group: { _id: "$characteristics.characteristic_name", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { characteristic_name: "$_id" } } ])	products_gen_characteristics
db.Ref_Colors.aggregate([ { $lookup: { from: "Products", localField: "color_code", foreignField: "color_code", as: "product_info" }}, { $match: { "product_info": { $size: 0 } } }, { $count: "unused_colors_count" } ])	products_gen_characteristics
db.Ref_Colors.aggregate([ { $lookup: { from: "Products", localField: "color_code", foreignField: "color_code", as: "Products" } }, { $match: { "Products": { $size: 0 } } }, { $count: "colors_not_used" } ])	products_gen_characteristics
db.event.find({}, { Name: 1 }).sort({ Year: -1 })	swimming
db.event.find({}, { Name: 1 }).sort({ Year: -1 }).limit(1)	swimming
db.stadium.find({}, {name: 1}).sort({capacity: -1}).limit(1)	swimming
db.stadium.aggregate([ { $group: { _id: null, averageCapacity: { $avg: "$Capacity" } } }, { $lookup: { from: "stadium", let: { averageCapacity: "$averageCapacity" }, pipeline: [ { $match: { $expr: { $lt: ["$Capacity", "$$averageCapacity"] } } }, { $project: { name: 1 } } ], as: "stadiumsBelowAverage" } }, { $unwind: "$stadiumsBelowAverage" }, { $replaceRoot: { newRoot: "$stadiumsBelowAverage" } } ])	swimming
db.stadium.aggregate([ { $group: { _id: "$Country", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { country: "$_id" } } ])	swimming
db.stadium.aggregate([ { $group: { _id: "$Country", count: { $sum: 1 } } }, { $match: { count: { $lte: 3 } } }, { $project: { country: "$_id" } } ])	swimming
db.stadium.aggregate([ { $match: { $or: [ { Capacity: { $gt: 60000 } }, { Capacity: { $lt: 50000 } } ] } }, { $group: { _id: "$Country", maxCapacity: { $max: "$Capacity" }, minCapacity: { $min: "$Capacity" } } }, { $match: { maxCapacity: { $gt: 60000 }, minCapacity: { $lt: 50000 } } }, { $project: { Country: "$_id" } } ])	swimming
db.stadium.aggregate([ { $match: { Opening_year: { $lt: 2006 } } }, { $group: { _id: "$City" } }, { $count: "unique_cities" } ])	swimming
db.stadium.aggregate([ { $group: { _id: "$Country", count: { $sum: 1 } } } ])	swimming
db.stadium.aggregate([ { $group: { _id: null, allCountries: { $addToSet: "$Country" }, after2006Countries: { $addToSet: { $cond: [{ $gt: ["$Opening_year", 2006] }, "$Country", null] } } } }, { $project: { countries: { $setDifference: ["$allCountries", "$after2006Countries"] } } }, { $unwind: "$countries" }, { $project: { country: "$countries" } } ])	swimming
db.swimmer.find({}, {name: 1}).sort({meter_100: 1})	swimming
db.swimmer.aggregate([ { $group: { _id: "$Nationality", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Nationality: "$_id", count: 1 } } ])	swimming
db.swimmer.find({ Nationality: 'Australia' }, { meter_200: 1, meter_300: 1 })	swimming
db.swimmer.aggregate([ { $lookup: { from: "record", localField: "ID", foreignField: "Swimmer_ID", as: "record_info" } }, { $unwind: "$record_info" }, { $match: { "record_info.Result": "Win" } }, { $project: { name: 1 } } ])	swimming
db.stadium.aggregate([ { $lookup: { from: "event", localField: "ID", foreignField: "Stadium_ID", as: "eventDetails" } }, { $unwind: "$eventDetails" }, { $match: { "eventDetails.Name": "World Junior" } }, { $project: { name: 1, Capacity: 1 } } ])	swimming
db.stadium.aggregate([ { $lookup: { from: "event", localField: "ID", foreignField: "Stadium_ID", as: "events" } }, { $match: { "events": { $size: 0 } } }, { $project: { name: 1 } } ])	swimming
db.swimmer.aggregate([ { $lookup: { from: "record", localField: "ID", foreignField: "Swimmer_ID", as: "records" } }, { $project: { name: 1 } }, { $sort: { recordCount: -1 } }, { $limit: 1 } ])	swimming
db.swimmer.aggregate([ { $lookup: { from: "record", localField: "ID", foreignField: "Swimmer_ID", as: "record" } }, { $project: { "name": 1, "recordCount": { $size: "$record" } } }, { $match: { "recordCount": { $gte: 2 } } }, { $project: { name: 1 } } ])	swimming
db.swimmer.find({"ID": {"$nin": db.record.distinct("Swimmer_ID")}}, {"name": 1, "_id": 0})	swimming
db.swimmer.aggregate([ { $lookup: { from: "record", localField: "ID", foreignField: "Swimmer_ID", as: "records" } }, { $unwind: "$records" }, { $group: { _id: "$name", results: { $addToSet: "$records.Result" } } }, { $match: { results: { $all: ["Win", "Loss"] } } }, { $project: { name: "$_id" } } ])	swimming
db.swimmer.aggregate([ { $match: { Nationality: "Australia" } }, { $lookup: { from: "record", localField: "ID", foreignField: "Swimmer_ID", as: "swimmer_records" } }, { $unwind: "$swimmer_records" }, { $lookup: { from: "event", localField: "swimmer_records.Event_ID", foreignField: "ID", as: "event_info" } }, { $unwind: "$event_info" }, { $lookup: { from: "stadium", localField: "event_info.Stadium_ID", foreignField: "ID", as: "stadium_info" } }, { $unwind: "$stadium_info" }, { $project: { name: "$stadium_info.name" } } ])	swimming
db.record.aggregate([ { $lookup: { from: "event", localField: "Event_ID", foreignField: "ID", as: "event_info" } }, { $unwind: "$event_info" }, { $lookup: { from: "stadium", localField: "event_info.Stadium_ID", foreignField: "ID", as: "stadium_info" } }, { $unwind: "$stadium_info" }, { $group: { _id: "$stadium_info.ID", name: { $first: "$stadium_info.name" }, swimmerCount: { $sum: 1 } } }, { $sort: { swimmerCount: -1 } }, { $limit: 1 }, { $project: { name: 1 } } ])	swimming
db.swimmer.find({})	swimming
db.stadium.aggregate([ { $match: { Opening_year: 2005 } }, { $group: { _id: null, averageCapacity: { $avg: "$Capacity" } } }, { $project: { averageCapacity: 1 } } ])	swimming
db.railway.find({}, {Builder: 1}).sort({Builder: 1})	railway
db.railway.find({}, {Wheels: 1, Location: 1})	railway
db.manager.aggregate([ { $match: { Country: { $ne: 'Australia' } } }, { $group: { _id: null, maxLevel: { $max: "$Level" } } } , { $project: { maxLevel: 1 } }])	railway
db.manager.aggregate([ { $group: { _id: null, averageAge: { $avg: "$Age" } } }, { $project: { averageAge: 1} } ])	railway
db.manager.find({}, {Name: 1}).sort({Level: 1})	railway
db.train.find({}, {Name: 1, Arrival: 1})	railway
db.manager.find({}, {Name: 1}).sort({Age: -1}).limit(1)	railway
db.railway.aggregate([ { $lookup: { from: "train", localField: "Railway_ID", foreignField: "Railway_ID", as: "train_info" } }, { $unwind: "$train_info" }, { $project: { Name: "$train_info.Name", Location: 1 } } ])	railway
db.railway.aggregate([ { $lookup: { from: "train", localField: "Railway_ID", foreignField: "Railway_ID", as: "train_data" } }, { $unwind: "$train_data" }, { $match: { "train_data.Name": "Andaman Exp" } }, { $project: { Builder: 1 } } ])	railway
db.railway.aggregate([ { $lookup: { from: "train", localField: "Railway_ID", foreignField: "Railway_ID", as: "trains" } }, { $match: { "trains.1": { $exists: true } } }, { $project: { Railway_ID: 1, Location: 1 } } ])	railway
db.railway.aggregate([ { $group: { _id: "$Builder", count: { $sum: 1 } } }, { $project: { Builder: "$_id", count: 1 } } ])	railway
db.railway.aggregate([ { $group: { _id: "$Builder", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Builder: "$_id" } } ])	railway
db.railway.aggregate([ { $group: { _id: "$Location", count: { $sum: 1 } } }, { $project: { Location: "$_id", count: 1 } } ])	railway
db.railway.aggregate([ { $group: { _id: "$Location", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Location: "$_id" } } ])	railway
db.railway.find( { Railway_ID: { $nin: db.train.distinct("Railway_ID") } }, { ObjectNumber: 1 } )	railway
db.manager.aggregate([ { $match: { $or: [ { Age: { $gt: 50 } }, { Age: { $lt: 46 } } ] } }, { $group: { _id: "$Country", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Country: "$_id" } } ])	railway
db.manager.aggregate([ { $group: { _id: "$Country" }} ])	railway
db.manager.aggregate([ { $project: { Working_year_starts: 1} }, { $sort: { Level: -1 } }])	railway
db.manager.find( {$or: [{Age: {$gt: 50}}, {Age: {$lt: 46}}]}, { Country: 1} )	railway
db.Addresses.aggregate([ { $group: { _id: "$state_province_county", count: { $sum: 1 } } }, { $project: { state_province_county: "$_id", count: 1 } } ])	customers_and_products_contacts
db.Customers.find( { customer_id: { $nin: db.Customer_Address_History.distinct("customer_id") } }, { customer_name: 1, customer_phone: 1 } )	customers_and_products_contacts
db.Products.aggregate([ { $group: { _id: "$product_type_code", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { product_type_code: "$_id" } } ])	customers_and_products_contacts
db.Customers.aggregate([ { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $match: { "orders.order_status_code": { $all: ["Completed", "Part"] } } }, { $project: { customer_name: 1 } } ])	customers_and_products_contacts
db.Customers.find({}, {customer_name: 1, customer_phone: 1, payment_method_code: 1}).sort({customer_number: -1})	customers_and_products_contacts
db.Products.aggregate([ { $group: { _id: null, minPrice: { $min: "$product_price" }, maxPrice: { $max: "$product_price" }, avgPrice: { $avg: "$product_price" } } } , { $project: { minPrice: 1, maxPrice:1, avgPrice:1 } }])	customers_and_products_contacts
db.Customers.aggregate([ { $match: { payment_method_code: "Credit Card" } }, { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $match: { "orders.2": { $exists: true } } }, { $project: { customer_name: 1 } } ])	customers_and_products_contacts
db.Products.find( { $or: [ { product_price: { $gt: 1000 } }, { product_price: { $lt: 500 } } ] }, { product_type_code: 1, product_name: 1 } )	customers_and_products_contacts
db.Dorm.find({ gender: 'F' }, { dorm_name: 1 })	dorm_1
db.Dorm.find({ gender: 'F' }, { dorm_name: 1 })	dorm_1
db.Dorm.find({student_capacity: {$gt: 300}}, {dorm_name: 1})	dorm_1
db.Student.find({Age: {$gt: 20}}, {Fname: 1})	dorm_1
db.Student.find({Age: {$gt: 20}}, {Fname: 1})	dorm_1
db.Student.aggregate([ { $group: { _id: "$city_code", averageAge: { $avg: "$Age" } } } ])	dorm_1
db.Student.aggregate([ { $group: { _id: "$city_code", averageAge: { $avg: "$Age" } }}, { $project: { city: "$_id", averageAge: 1 }} ])	dorm_1
db.Dorm.aggregate([ { $match: { gender: 'X' } }, { $group: { _id: null, averageCapacity: { $avg: "$student_capacity" }, totalCapacity: { $sum: "$student_capacity" } } } , { $project: { averageCapacity:1, totalCapacity:1 } }])	dorm_1
db.Dorm.aggregate([ { $match: { gender: 'X' } }, { $group: { _id: null, averageCapacity: { $avg: "$student_capacity" }, totalCapacity: { $sum: "$student_capacity" } } }, { $project: { averageCapacity:1, totalCapacity:1 } } ])	dorm_1
db.Dorm.find( { dorm_name: { $regex: /Donor/ } }, { student_capacity: 1, gender: 1 } )	dorm_1
db.Dorm.find( {dorm_name: {$regex: /Donor/}}, {student_capacity: 1, gender: 1} )	dorm_1
db.Dorm.find({ $or: [ { student_capacity: { $gt: 300 } }, { student_capacity: { $lt: 100 } } ] }, { dorm_name: 1, gender: 1 })	dorm_1
db.Dorm.find({ $or: [ { student_capacity: { $gt: 300 } }, { student_capacity: { $lt: 100 } } ] }, { dorm_name: 1, gender: 1 })	dorm_1
db.Student.aggregate([ { $group: { _id: null, uniqueMajors: { $addToSet: "$Major" }, uniqueCities: { $addToSet: "$city_code" } } }, { $project: { numberOfDifferentMajors: { $size: "$uniqueMajors" }, numberOfDifferentCities: { $size: "$uniqueCities" } } } ])	dorm_1
db.Student.aggregate([ { $group: { _id: null, distinctMajors: { $addToSet: "$Major" }, distinctCityCodes: { $addToSet: "$city_code" } } }, { $project: { distinctMajorsCount: { $size: "$distinctMajors" }, distinctCityCodesCount: { $size: "$distinctCityCodes" } } } ])	dorm_1
db.Dorm.aggregate([ { $lookup: { from: "Has_amenity", localField: "dormid", foreignField: "dormid", as: "amenities" } }, { $lookup: { from: "Dorm_amenity", localField: "amenities.amenid", foreignField: "amenid", as: "amenities.details" } }, { $match: { "amenities.details.amenity_name": { $all: ["TV Lounge", "Study Room"] } } }, { $project: { dorm_name: 1 } } ])	dorm_1
db.Dorm.aggregate([ { $lookup: { from: "Has_amenity", localField: "dormid", foreignField: "dormid", as: "amenities" } }, { $lookup: { from: "Dorm_amenity", localField: "amenities.amenid", foreignField: "amenid", as: "amenities.details" } }, { $match: { "amenities.details.amenity_name": "TV Lounge" } }, { $addFields: { hasStudyRoom: { $in: ["Study Room", "$amenities.details.amenity_name"] } } }, { $match: { hasStudyRoom: false } }, { $project: { dorm_name: 1 } } ])	dorm_1
db.Dorm.find({}, {dorm_name: 1}).sort({student_capacity: -1}).limit(1)	dorm_1
db.Dorm.find({}, {dorm_name: 1}).sort({student_capacity: -1}).limit(1)	dorm_1
db.Dorm_amenity.find({}, {amenity_name: 1}).sort({amenity_name: 1})	dorm_1
db.Dorm_amenity.find({}, { amenity_name: 1 }).sort({ amenity_name: 1 })	dorm_1
db.Student.aggregate([ { $group: { _id: "$city_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { city_code: "$_id" } } ])	dorm_1
db.Student.aggregate([ { $group: { _id: null, averageAge: { $avg: "$Age" } } }, { $lookup: { from: "Student", let: { averageAge: "$averageAge" }, pipeline: [ { $match: { $expr: { $lt: ["$Age", "$$averageAge"] } } }, { $project: { Fname: 1, LName: 1 } } ], as: "studentsBelowAverageAge" } }, { $unwind: "$studentsBelowAverageAge" }, { $replaceRoot: { newRoot: "$studentsBelowAverageAge" } } ])	dorm_1
db.Dorm.aggregate([ { $group: { _id: "$gender", count: { $sum: 1 }, total_capacity: { $sum: "$student_capacity" } } } ])	dorm_1
db.Dorm.aggregate([ { $group: { _id: "$gender", count: { $sum: 1 }, total_capacity: { $sum: "$student_capacity" } } } ])	dorm_1
db.Student.aggregate([ { $group: { _id: "$Sex", averageAge: { $avg: "$Age" }, oldestAge: { $max: "$Age" } } } ])	dorm_1
db.Student.aggregate([ { $group: { _id: "$Sex", averageAge: { $avg: "$Age" }, oldestAge: { $max: "$Age" } } } ])	dorm_1
db.Student.aggregate([ { $group: { _id: "$Major", count: { $sum: 1 } } } ])	dorm_1
db.Student.aggregate([ { $group: { _id: "$Major", count: { $sum: 1 } }} ])	dorm_1
db.Student.aggregate([ { $group: { _id: "$city_code", NumberOfStudents: { $sum: 1 }, AverageAge: { $avg: "$Age" } } } ])	dorm_1
db.Student.aggregate([ { $group: { _id: "$city_code", numberOfStudents: { $sum: 1 }, averageAge: { $avg: "$Age" } } }, { $project: { city_code: "$_id", numberOfStudents: 1, averageAge: 1 } } ])	dorm_1
db.Student.aggregate([ { $match: { Sex: 'M' } }, { $group: { _id: "$city_code", averageAge: { $avg: "$Age" }, numberOfMales: { $count: {} } } } ])	dorm_1
db.Student.aggregate([ { $match: { Sex: "M" } }, { $group: { _id: "$city_code", AverageAge: { $avg: "$Age" }, MaleStudentsCount: { $sum: 1 } } } ])	dorm_1
db.Student.aggregate([ { $group: { _id: "$city_code", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { city_code: "$_id", count: 1 } } ])	dorm_1
db.Student.aggregate([ { $group: { _id: "$Sex", averageAge: { $avg: "$Age" } } }, { $lookup: { from: "Student", localField: "_id", foreignField: "Sex", as: "students" } }, { $unwind: "$students" }, { $match: { $expr: { $gt: ["$students.Age", "$averageAge"] } } }, { $group: { _id: "$students.Sex", numberOfStudents: { $sum: 1 } } }, { $project: { Sex: "$_id", count: "$numberOfStudents" } } ])	dorm_1
db.Student.aggregate([ { $group: { _id: "$Sex", avgAge: { $avg: "$Age" } } }, { $lookup: { from: "Student", localField: "_id", foreignField: "Sex", as: "students" } }, { $unwind: "$students" }, { $group: { _id: "$_id", avgAge: { $first: "$avgAge" }, count: { $sum: { $cond: [{ $gt: ["$students.Age", "$avgAge"] }, 1, 0] } } } }, { $project: { Sex: "$_id", Count: "$count" } } ])	dorm_1
db.Student.aggregate([ { $lookup: { from: "Lives_in", localField: "StuID", foreignField: "stuid", as: "lives_in" } }, { $unwind: "$lives_in" }, { $lookup: { from: "Dorm", localField: "lives_in.dormid", foreignField: "dormid", as: "dorm" } }, { $unwind: "$dorm" }, { $group: { _id: "$dorm.dorm_name", averageAge: { $avg: "$Age" } } }, { $project: { averageAge: 1, dorm_name: "$_id" } } ])	dorm_1
db.Student.aggregate([ { $lookup: { from: "Lives_in", localField: "StuID", foreignField: "stuid", as: "lives_in" } }, { $unwind: "$lives_in" }, { $lookup: { from: "Dorm", localField: "lives_in.dormid", foreignField: "dormid", as: "dorm" } }, { $unwind: "$dorm" }, { $group: { _id: "$dorm.dorm_name", averageAge: { $avg: "$Age" } } }, { $project: { dorm_name: "$_id", averageAge: 1 } } ])	dorm_1
db.Dorm.aggregate([ { $match: { student_capacity: { $gt: 100 } } }, { $lookup: { from: "Has_amenity", localField: "dormid", foreignField: "dormid", as: "amenities" } }, { $project: { dormid: 1, amenityCount: { $size: "$amenities" } } } ])	dorm_1
db.Dorm.aggregate([ { $lookup: { from: "Has_amenity", localField: "dormid", foreignField: "dormid", as: "amenities" } }, { $match: { "student_capacity": { $gt: 100 } } }, { $project: { "_id": 0, "dormid": 1, "amenity_count": { $size: "$amenities" } } } ])	dorm_1
db.Student.aggregate([ { $match: { Age: { $gt: 20 } } }, { $lookup: { from: "Lives_in", localField: "StuID", foreignField: "stuid", as: "lives_in" } }, { $unwind: "$lives_in" }, { $lookup: { from: "Dorm", localField: "lives_in.dormid", foreignField: "dormid", as: "dorm" } }, { $unwind: "$dorm" }, { $group: { _id: "$dorm.dorm_name", count: { $sum: 1 } } } ])	dorm_1
db.Student.aggregate([ { $lookup: { from: "Lives_in", localField: "StuID", foreignField: "stuid", as: "lives_in" } }, { $unwind: "$lives_in" }, { $lookup: { from: "Dorm", localField: "lives_in.dormid", foreignField: "dormid", as: "dorm" } }, { $unwind: "$dorm" }, { $match: { "dorm.dorm_name": "Smith Hall" } }, { $project: { Fname: 1 } } ])	dorm_1
db.Student.aggregate([ { $lookup: { from: "Lives_in", localField: "StuID", foreignField: "stuid", as: "lives_in" } }, { $unwind: "$lives_in" }, { $lookup: { from: "Dorm", localField: "lives_in.dormid", foreignField: "dormid", as: "dorm" } }, { $unwind: "$dorm" }, { $match: { "dorm.dorm_name": "Smith Hall" } }, { $project: { Fname: 1 } } ])	dorm_1
db.Student.aggregate([ { $lookup: { from: "Lives_in", localField: "StuID", foreignField: "stuid", as: "lives_info" } }, { $unwind: "$lives_info" }, { $lookup: { from: "Dorm", localField: "lives_info.dormid", foreignField: "dormid", as: "dorm_info" } }, { $unwind: "$dorm_info" }, { $group: { _id: null, maxCapacity: { $max: "$dorm_info.student_capacity" } } }, { $lookup: { from: "Dorm", let: { maxCapacity: "$maxCapacity" }, pipeline: [ { $match: { $expr: { $eq: ["$student_capacity", "$$maxCapacity"] } } }, { $project: { dormid: 1 } } ], as: "largestDorms" } }, { $unwind: "$largestDorms" }, { $lookup: { from: "Lives_in", localField: "largestDorms.dormid", foreignField: "dormid", as: "studentsInMaxDorm" } }, { $unwind: "$studentsInMaxDorm" }, { $lookup: { from: "Student", localField: "studentsInMaxDorm.stuid", foreignField: "StuID", as: "studentDetails" } }, { $unwind: "$studentDetails" }, { $group: { _id: null, avgAge: { $avg: "$studentDetails.Age" } } }, { $project: { avgAge: 1 } } ])	dorm_1
db.Student.aggregate([ { $lookup: { from: "Lives_in", localField: "StuID", foreignField: "stuid", as: "lives_info" } }, { $unwind: "$lives_info" }, { $lookup: { from: "Dorm", localField: "lives_info.dormid", foreignField: "dormid", as: "dorm_info" } }, { $unwind: "$dorm_info" }, { $match: { "dorm_info.gender": "M" } }, { $count: "total_students" } ])	dorm_1
db.Dorm.aggregate([ { $match: { dorm_name: "Smith Hall" } }, { $lookup: { from: "Has_amenity", localField: "dormid", foreignField: "dormid", as: "amenities" } }, { $unwind: "$amenities" }, { $lookup: { from: "Dorm_amenity", localField: "amenities.amenid", foreignField: "amenid", as: "amenities.amenity_info" } }, { $unwind: "$amenities.amenity_info" }, { $project: { amenity_name: "$amenities.amenity_info.amenity_name" } } ])	dorm_1
db.Dorm.aggregate([ { $match: { dorm_name: "Smith Hall" } }, { $lookup: { from: "Has_amenity", localField: "dormid", foreignField: "dormid", as: "amenities" } }, { $unwind: "$amenities" }, { $lookup: { from: "Dorm_amenity", localField: "amenities.amenid", foreignField: "amenid", as: "amenities.amenity_info" } }, { $unwind: "$amenities.amenity_info" }, { $replaceRoot: { newRoot: "$amenities.amenity_info" } }, { $sort: { amenity_name: 1 } }, { $project: { amenity_name: 1 } } ])	dorm_1
db.Dorm.aggregate([ { $match: { dorm_name: "Smith Hall" } }, { $lookup: { from: "Has_amenity", localField: "dormid", foreignField: "dormid", as: "amenities" } }, { $unwind: "$amenities" }, { $lookup: { from: "Dorm_amenity", localField: "amenities.amenid", foreignField: "amenid", as: "amenities.amenity_info" } }, { $unwind: "$amenities.amenity_info" }, { $project: { amenity_name: "$amenities.amenity_info.amenity_name" } }, { $sort: { amenity_name: 1 } } ])	dorm_1
db.Dorm.aggregate([ { $lookup: { from: "Has_amenity", localField: "dormid", foreignField: "dormid", as: "amenities" } }, { $project: { dorm_name: 1, student_capacity: 1} }, { $sort: { amenityCount: 1 } }, { $limit: 1 } ])	dorm_1
db.Dorm.aggregate([ { $lookup: { from: "Has_amenity", localField: "dormid", foreignField: "dormid", as: "amenities" } }, { $project: { dorm_name: 1, student_capacity: 1 } }, { $sort: { amenityCount: 1 } }, { $limit: 1 } ])	dorm_1
db.Dorm.aggregate([ { $lookup: { from: "Has_amenity", localField: "dormid", foreignField: "dormid", as: "dorm_amenities" } }, { $lookup: { from: "Dorm_amenity", localField: "dorm_amenities.amenid", foreignField: "amenid", as: "amenities" } }, { $match: { "amenities.amenity_name": { $ne: "TV Lounge" } } }, { $project: { dorm_name: 1 } } ])	dorm_1
db.Dorm.aggregate([ { $lookup: { from: "Has_amenity", localField: "dormid", foreignField: "dormid", as: "has_amenity" } }, { $lookup: { from: "Dorm_amenity", localField: "has_amenity.amenid", foreignField: "amenid", as: "dorm_amenity" } }, { $match: { "dorm_amenity.amenity_name": { $ne: "TV Lounge" } } }, { $project: { dorm_name: 1 } } ])	dorm_1
db.Student.aggregate([ { $lookup: { from: "Lives_in", localField: "StuID", foreignField: "stuid", as: "living_info" } }, { $unwind: "$living_info" }, { $lookup: { from: "Has_amenity", localField: "living_info.dormid", foreignField: "dormid", as: "amenity_info" } }, { $lookup: { from: "Dorm_amenity", localField: "amenity_info.amenid", foreignField: "amenid", as: "dorm_amenity_info" } }, { $match: { "dorm_amenity_info.amenity_name": { $ne: "TV Lounge" } } }, { $group: { _id: "$StuID", fname: { $first: "$Fname" }, age: { $first: "$Age" }, dorm_amenity: { $addToSet: "$dorm_amenity_info.amenity_name" } } }, { $project: { fname: 1, age: 1 } } ])	dorm_1
db.Student.aggregate([ { $match: { LName: "Smith" } }, { $lookup: { from: "Lives_in", localField: "StuID", foreignField: "stuid", as: "lives_in" } }, { $unwind: "$lives_in" }, { $lookup: { from: "Dorm", localField: "lives_in.dormid", foreignField: "dormid", as: "dorm" } }, { $unwind: "$dorm" }, { $lookup: { from: "Has_amenity", localField: "dorm.dormid", foreignField: "dormid", as: "has_amenity" } }, { $unwind: "$has_amenity" }, { $lookup: { from: "Dorm_amenity", localField: "has_amenity.amenid", foreignField: "amenid", as: "amenity" } }, { $unwind: "$amenity" }, { $project: { amenity_name: "$amenity.amenity_name" } } ])	dorm_1
db.Student.aggregate([ { $match: { LName: "Smith" } }, { $lookup: { from: "Lives_in", localField: "StuID", foreignField: "stuid", as: "livesInDetails" } }, { $unwind: "$livesInDetails" }, { $lookup: { from: "Has_amenity", localField: "livesInDetails.dormid", foreignField: "dormid", as: "amenitiesDetails" } }, { $unwind: "$amenitiesDetails" }, { $lookup: { from: "Dorm_amenity", localField: "amenitiesDetails.amenid", foreignField: "amenid", as: "amenityNames" } }, { $unwind: "$amenityNames" }, { $project: { amenity_name: "$amenityNames.amenity_name" } } ])	dorm_1
db.Customers.find({}, {email_address: 1, phone_number: 1}).sort({email_address: 1, phone_number: 1})	customer_complaints
db.Customers.find({}, {email_address: 1, phone_number: 1}).sort({email_address: 1, phone_number: 1})	customer_complaints
db.Customers.aggregate([ { $match: { customer_type_code: 'Good Credit Rating' } }, { $group: { _id: '$town_city', count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	customer_complaints
db.Products.aggregate([ { $lookup: { from: "Complaints", localField: "product_id", foreignField: "product_id", as: "complaints" } }, { $project: { product_name: 1, complaintCount: { $size: "$complaints" } } } ])	customer_complaints
db.Products.aggregate([ { $lookup: { from: "Complaints", localField: "product_id", foreignField: "product_id", as: "complaints" } }, { $project: { product_name: 1, complaint_count: { $size: "$complaints" } } } ])	customer_complaints
db.Complaints.aggregate([ { $group: { _id: "$customer_id", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $lookup: { from: "Complaints", localField: "_id", foreignField: "customer_id", as: "complaints" } }, { $unwind: "$complaints" }, { $lookup: { from: "Products", localField: "complaints.product_id", foreignField: "product_id", as: "products" } }, { $unwind: "$products" }, { $project: { "products.product_name": 1 } }, { $group: { _id: "$products.product_name" } } ])	customer_complaints
db.Customers.find( { customer_id: { $nin: db.Complaints.distinct("customer_id") } }, { email_address: 1, phone_number: 1 } )	customer_complaints
db.Customers.find( { customer_id: { $nin: db.Complaints.distinct("customer_id") } }, { email_address: 1, phone_number: 1 } )	customer_complaints
db.Products.findOne({product_name: 'Chocolate'}, {product_description: 1})	customer_complaints
db.Products.findOne({product_name: 'Chocolate'}, {product_description: 1})	customer_complaints
db.Products.find({}, {product_name: 1, product_category_code: 1}).sort({product_price: -1}).limit(1)	customer_complaints
db.Products.find({}, {product_name: 1, product_category_code: 1}).sort({product_price: -1}).limit(1)	customer_complaints
db.Products.aggregate([ { $group: { _id: "$product_category_code", averagePrice: { $avg: "$product_price" } } } ])	customer_complaints
db.Products.aggregate([ { $group: { _id: "$product_category_code", averagePrice: { $avg: "$product_price" } } } ])	customer_complaints
db.Complaints.aggregate([ { $group: { _id: "$complaint_status_code", count: { $sum: 1 } } }, { $match: { count: { $gt: 3 } } } , { $project: { complaint_status_code: "$_id" } }])	customer_complaints
db.Staff.find({email_address: {$regex: /wrau/}}, {last_name: 1})	customer_complaints
db.Staff.find({email_address: {$regex: /wrau/}}, {last_name: 1})	customer_complaints
db.Customers.aggregate([ { $group: { _id: "$customer_type_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { count: 1 } }])	customer_complaints
db.Customers.aggregate([ { $group: { _id: "$customer_type_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { count: 1} } ])	customer_complaints
db.Customers.find( { "email_address": "vbogisich@example.org" }, { "address_line_1": 1, "address_line_2": 1, "_id": 0 } )	customer_complaints
db.Customers.find( { "email_address": "vbogisich@example.org" }, { "address_line_1": 1, "address_line_2": 1, "_id": 0 } )	customer_complaints
db.Complaints.aggregate([ { $match: { complaint_type_code: "Product Failure" } }, { $group: { _id: "$complaint_status_code", count: { $sum: 1 } } } ])	customer_complaints
db.Complaints.aggregate([ { $match: { complaint_type_code: "Product Failure" } }, { $group: { _id: "$complaint_status_code", count: { $sum: 1 } } } ])	customer_complaints
db.submission.find({}, {Author: 1}).sort({Scores: 1})	workshop_paper
db.submission.find({}, {Author: 1}).sort({Scores: 1})	workshop_paper
db.submission.find({}, {Author: 1, College: 1})	workshop_paper
db.submission.aggregate([ { $project: { Author: 1, College: 1 } } ])	workshop_paper
db.submission.find({College: {$in: ['Florida', 'Temple']}}, {Author: 1})	workshop_paper
db.submission.find({College: {$in: ['Florida', 'Temple']}}, {Author: 1})	workshop_paper
db.submission.aggregate([ { $group: { _id: null, averageScore: { $avg: "$Scores" } } }, { $project: { averageScore: 1 } } ])	workshop_paper
db.submission.aggregate([ { $group: { _id: null, averageScore: { $avg: "$Scores" } } }, { $project: { averageScore: 1 } } ])	workshop_paper
db.submission.find({}, {Author: 1}).sort({Scores: -1}).limit(1)	workshop_paper
db.submission.find({}, {Author: 1}).sort({Scores: -1}).limit(1)	workshop_paper
db.submission.aggregate([ { $group: { _id: "$College", count: { $sum: 1 } } }, { $project: { College: "$_id", count: 1 } } ])	workshop_paper
db.submission.aggregate([ { $group: { _id: "$College", count: { $sum: 1 } } }, { $project: { College: "$_id", count: 1 } } ])	workshop_paper
db.submission.aggregate([ { $group: { _id: "$College", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { College: "$_id" } } ])	workshop_paper
db.submission.aggregate([ { $group: { _id: "$College", numOfAuthors: { $sum: 1 } }}, { $sort: { numOfAuthors: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	workshop_paper
db.workshop.find({}, {Date: 1, Venue: 1}).sort({Venue: 1})	workshop_paper
db.workshop.find({}, {Date: 1, Venue: 1}).sort({Venue: 1})	workshop_paper
db.Investors.find({}, {Investor_details: 1})	tracking_share_transactions
db.Transactions.aggregate([ { $group: { _id: null, maxAmount: { $max: "$amount_of_transaction" } } } , { $project: { maxAmount: 1 } }])	tracking_share_transactions
db.Transactions.find({transaction_type_code: 'PUR'}, {transaction_id: 1})	tracking_share_transactions
db.Transactions.aggregate([ { $match: { transaction_type_code: 'SALE' } }, { $group: { _id: null, averageAmount: { $avg: "$amount_of_transaction" } } } , { $project: { averageAmount: 1 } }])	tracking_share_transactions
db.Ref_Transaction_Types.find({transaction_type_code: 'PUR'}, {transaction_type_description: 1})	tracking_share_transactions
db.Transactions.aggregate([ { $match: { amount_of_transaction: { $lt: 10000 } } }, { $group: { _id: null, maxShareCount: { $max: "$share_count" } } }, { $project: { maxShareCount: 1 } } ])	tracking_share_transactions
db.Lots.aggregate([ { $project: { lot_details: 1, investor_id: 1 } } ])	tracking_share_transactions
db.Investors.aggregate([ { $match: { Investor_details: 'l' } }, { $lookup: { from: "Lots", localField: "investor_id", foreignField: "investor_id", as: "lots" } }, { $unwind: "$lots" }, { $project: { lot_details: "$lots.lot_details" } } ])	tracking_share_transactions
db.Purchases.aggregate([ { $lookup: { from: "Transactions", localField: "purchase_transaction_id", foreignField: "transaction_id", as: "transaction_data" } }, { $match: { "transaction_data.amount_of_transaction": { $gt: 10000 } } }, { $project: { purchase_details: 1 } } ])	tracking_share_transactions
db.Transactions.aggregate([ { $group: { _id: "$transaction_type_code", averageTransactionAmount: { $avg: "$amount_of_transaction" } } } ])	tracking_share_transactions
db.Transactions.aggregate([ { $group: { _id: "$transaction_type_code", maxShareCount: { $max: "$share_count" }, minShareCount: { $min: "$share_count" } } }, { $project: { transaction_type_code: "$_id", maxShareCount: 1, minShareCount: 1 } } ])	tracking_share_transactions
db.Transactions.aggregate([ { $group: { _id: "$investor_id", averageAmount: { $avg: "$amount_of_transaction" } } } ])	tracking_share_transactions
db.Transactions.aggregate([ { $lookup: { from: "Transactions_Lots", localField: "transaction_id", foreignField: "transaction_id", as: "transaction_lots" } }, { $unwind: "$transaction_lots" }, { $group: { _id: "$transaction_lots.lot_id", averageAmount: { $avg: "$amount_of_transaction" } } } ])	tracking_share_transactions
db.Transactions.aggregate([ { $lookup: { from: "Transactions_Lots", localField: "transaction_id", foreignField: "transaction_id", as: "transaction_lots" } }, { $unwind: "$transaction_lots" }, { $group: { _id: "$transaction_lots.lot_id", averageAmount: { $avg: "$amount_of_transaction" } } }, { $sort: { averageAmount: 1 } } ])	tracking_share_transactions
db.Transactions.aggregate([ { $match: { transaction_type_code: "SALE" } }, { $group: { _id: "$investor_id", count: { $sum: 1 } } }, { $match: { count: { $gt: 0 } } } ])	tracking_share_transactions
db.Transactions.aggregate([ { $group: { _id: "$investor_id", count: { $sum: 1 } } } ])	tracking_share_transactions
db.Transactions.aggregate([ { $group: { _id: "$transaction_type_code", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { transaction_type_code: "$_id" } } ])	tracking_share_transactions
db.Transactions.aggregate([ { $group: { _id: "$transaction_type_code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { transaction_type_code: "$_id" } } ])	tracking_share_transactions
db.Transactions.aggregate([ { $lookup: { from: "Ref_Transaction_Types", localField: "transaction_type_code", foreignField: "transaction_type_code", as: "transaction_type" } }, { $unwind: "$transaction_type" }, { $group: { _id: "$transaction_type.transaction_type_description", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { transaction_type_description: "$_id" } } ])	tracking_share_transactions
db.Investors.aggregate([ { $lookup: { from: "Transactions", localField: "investor_id", foreignField: "investor_id", as: "transactions" } }, { $project: { investor_id: 1, Investor_details: 1, transactionCount: { $size: "$transactions" } } }, { $sort: { transactionCount: -1 } }, { $limit: 1 } ])	tracking_share_transactions
db.Transactions.aggregate([ { $group: { _id: "$investor_id", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { investor_id: "$_id" } } ])	tracking_share_transactions
db.Transactions.aggregate([ { $match: { transaction_type_code: 'SALE' } }, { $group: { _id: "$investor_id", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $lookup: { from: "Investors", localField: "_id", foreignField: "investor_id", as: "investorDetails" } }, { $unwind: "$investorDetails" }, { $project: { investor_id: "$_id", Investor_details: "$investorDetails.Investor_details" } } ])	tracking_share_transactions
db.Hotels.find({}, {price_range: 1})	cre_Theme_park
db.Hotels.find({}, {price_range: 1})	cre_Theme_park
db.Visitors.find({}, {Tourist_Details: 1})	cre_Theme_park
db.Visitors.find({}, {Tourist_Details: 1})	cre_Theme_park
db.Hotels.find({star_rating_code: '5'}, {price_range: 1})	cre_Theme_park
db.Hotels.find({ star_rating_code: '5' }, { price_range: 1 })	cre_Theme_park
db.Locations.findOne({Location_Name: 'UK Gallery'}, {Address: 1})	cre_Theme_park
db.Locations.find({Location_Name: 'UK Gallery'}, {Address: 1})	cre_Theme_park
db.Locations.find({Location_Name: {$regex: /film/i}}, {Location_Name: 1})	cre_Theme_park
db.Locations.find({Location_Name: {$regex: /film/i}}, {Location_Name: 1})	cre_Theme_park
db.Tourist_Attractions.find({How_to_Get_There: 'bus'}, {Name: 1})	cre_Theme_park
db.Tourist_Attractions.find({How_to_Get_There: 'bus'}, {Name: 1})	cre_Theme_park
db.Shops.aggregate([ { $lookup: { from: "Tourist_Attractions", localField: "Shop_ID", foreignField: "Tourist_Attraction_ID", as: "attraction_details" } }, { $unwind: "$attraction_details" }, { $match: { "attraction_details.How_to_Get_There": "walk" } }, { $project: { Shop_Details: 1 } } ])	cre_Theme_park
db.Shops.aggregate([ { $lookup: { from: "Tourist_Attractions", localField: "Shop_ID", foreignField: "Tourist_Attraction_ID", as: "attraction" } }, { $match: { "attraction.How_to_Get_There": "walk" } }, { $project: { Shop_Details: 1 } } ])	cre_Theme_park
db.Staff.aggregate([ { $lookup: { from: "Tourist_Attractions", localField: "Tourist_Attraction_ID", foreignField: "Tourist_Attraction_ID", as: "attraction" } }, { $match: { "attraction.Name": "US museum" } }, { $project: { Name: 1 } } ])	cre_Theme_park
db.Staff.aggregate([ { $lookup: { from: "Tourist_Attractions", localField: "Tourist_Attraction_ID", foreignField: "Tourist_Attraction_ID", as: "attraction" } }, { $match: { "attraction.Name": "US museum" } }, { $project: { Name: 1 } } ])	cre_Theme_park
db.Street_Markets.aggregate([ { $lookup: { from: "Tourist_Attractions", localField: "Market_ID", foreignField: "Tourist_Attraction_ID", as: "attraction" } }, { $match: { "attraction.How_to_Get_There": { $in: ["walk", "bus"] } } }, { $project: { Market_Details: 1 } } ])	cre_Theme_park
db.Street_Markets.aggregate([ { $lookup: { from: "Tourist_Attractions", localField: "Market_ID", foreignField: "Tourist_Attraction_ID", as: "attraction" } }, { $match: { "attraction.How_to_Get_There": { $in: ["walk", "bus"] } } }, { $project: { Market_Details: 1 } } ])	cre_Theme_park
db.Visitors.aggregate([ { $match: { Tourist_Details: "Vincent" } }, { $lookup: { from: "Visits", localField: "Tourist_ID", foreignField: "Tourist_ID", as: "visits" } }, { $unwind: "$visits" }, { $lookup: { from: "Tourist_Attractions", localField: "visits.Tourist_Attraction_ID", foreignField: "Tourist_Attraction_ID", as: "attractions" } }, { $unwind: "$attractions" }, { $project: { Name: "$attractions.Name" } } ])	cre_Theme_park
db.Visitors.aggregate([ { $match: { Tourist_Details: "Vincent" } }, { $lookup: { from: "Visits", localField: "Tourist_ID", foreignField: "Tourist_ID", as: "visits" } }, { $unwind: "$visits" }, { $lookup: { from: "Tourist_Attractions", localField: "visits.Tourist_Attraction_ID", foreignField: "Tourist_Attraction_ID", as: "attractions" } }, { $unwind: "$attractions" }, { $project: { Name: "$attractions.Name" } } ])	cre_Theme_park
db.Hotels.find({}, {hotel_id: 1, star_rating_code: 1}).sort({price_range: 1})	cre_Theme_park
db.Hotels.aggregate([ { $project: { hotel_id: 1, star_rating_code: 1 } }, { $sort: { price_range: 1 } } ])	cre_Theme_park
db.Tourist_Attractions.aggregate([ { $group: { _id: "$How_to_Get_There", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { How_to_Get_There: "$_id" } }])	cre_Theme_park
db.Tourist_Attractions.aggregate([ { $group: { _id: "$How_to_Get_There", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { How_to_Get_There: "$_id" } }])	cre_Theme_park
db.Tourist_Attractions.aggregate([ { $group: { _id: "$Attraction_Type_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Ref_Attraction_Types", localField: "_id", foreignField: "Attraction_Type_Code", as: "attraction_type_info" } }, { $unwind: "$attraction_type_info" }, { $project: { Attraction_Type_Description: "$attraction_type_info.Attraction_Type_Description", Attraction_Type_Code: "$_id" } } ])	cre_Theme_park
db.Tourist_Attractions.aggregate([ { $group: { _id: "$Attraction_Type_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $lookup: { from: "Ref_Attraction_Types", localField: "_id", foreignField: "Attraction_Type_Code", as: "type_info" } }, { $unwind: "$type_info" }, { $project: { "Attraction_Type_Description": "$type_info.Attraction_Type_Description", "Attraction_Type_Code": "$_id" } }, { $limit: 1 } ])	cre_Theme_park
db.Tourist_Attractions.aggregate([ { $group: { _id: "$How_to_Get_There", count: { $sum: 1 } } } ])	cre_Theme_park
db.Tourist_Attractions.aggregate([ { $group: { _id: "$How_to_Get_There", count: { $sum: 1 } } } ])	cre_Theme_park
db.Tourist_Attractions.aggregate([ { $lookup: { from: "Visits", localField: "Tourist_Attraction_ID", foreignField: "Tourist_Attraction_ID", as: "visits" } }, { $match: { "visits.1": { $exists: true } } }, { $project: { Name: 1, Tourist_Attraction_ID: 1 } } ])	cre_Theme_park
db.Visits.aggregate([ { $group: { _id: "$Tourist_Attraction_ID", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $lookup: { from: "Tourist_Attractions", localField: "_id", foreignField: "Tourist_Attraction_ID", as: "attraction" } }, { $project: { Name: { $arrayElemAt: ["$attraction.Name", 0] }, Tourist_Attraction_ID: "$_id" } } ])	cre_Theme_park
db.Visits.aggregate([ { $group: { _id: "$Tourist_Attraction_ID", count: { $sum: 1 } } }, { $match: { count: { $lte: 1 } } }, { $lookup: { from: "Tourist_Attractions", localField: "_id", foreignField: "Tourist_Attraction_ID", as: "attraction" } }, { $project: { Name: { $arrayElemAt: ["$attraction.Name", 0] }, Tourist_Attraction_ID: "$_id" } } ])	cre_Theme_park
db.Tourist_Attractions.aggregate([ { $lookup: { from: "Visits", localField: "Tourist_Attraction_ID", foreignField: "Tourist_Attraction_ID", as: "visits" } }, { $match: { "visits": { $size: 1 } } }, { $project: { Name: 1, Tourist_Attraction_ID: 1 } } ])	cre_Theme_park
db.Tourist_Attractions.aggregate([ { $lookup: { from: "Tourist_Attraction_Features", localField: "Tourist_Attraction_ID", foreignField: "Tourist_Attraction_ID", as: "Attraction_Features" } }, { $unwind: "$Attraction_Features" }, { $lookup: { from: "Features", localField: "Attraction_Features.Feature_ID", foreignField: "Feature_ID", as: "Feature_Details" } }, { $unwind: "$Feature_Details" }, { $match: { $or: [ { "Feature_Details.Feature_Details": "park" }, { "Feature_Details.Feature_Details": "shopping" } ] } }, { $group: { _id: "$Tourist_Attraction_ID", Name: { $first: "$Name" } } }, { $project: { Name: 1 } } ])	cre_Theme_park
db.Tourist_Attractions.aggregate([ { $lookup: { from: "Tourist_Attraction_Features", localField: "Tourist_Attraction_ID", foreignField: "Tourist_Attraction_ID", as: "attraction_features" } }, { $unwind: "$attraction_features" }, { $lookup: { from: "Features", localField: "attraction_features.Feature_ID", foreignField: "Feature_ID", as: "feature_details" } }, { $unwind: "$feature_details" }, { $match: { $or: [ { "feature_details.Feature_Details": "park" }, { "feature_details.Feature_Details": "shopping" } ] } }, { $group: { _id: "$Tourist_Attraction_ID", Name: { $first: "$Name" } } }, { $project: { Name: 1 } } ])	cre_Theme_park
db.Tourist_Attractions.aggregate([ { $lookup: { from: "Locations", localField: "Location_ID", foreignField: "Location_ID", as: "location_info" } }, { $match: { $or: [ {"location_info.Address": "254 Ottilie Junction"}, {"How_to_Get_There": "bus"} ] } }, { $project: { Name: 1 } } ])	cre_Theme_park
db.Tourist_Attractions.aggregate([ { $lookup: { from: "Visits", localField: "Tourist_Attraction_ID", foreignField: "Tourist_Attraction_ID", as: "VisitsInfo" } }, { $lookup: { from: "Visitors", localField: "VisitsInfo.Tourist_ID", foreignField: "Tourist_ID", as: "VisitorInfo" } }, { $match: { "VisitorInfo.Tourist_Details": "Alison" } }, { $project: { Name: 1, "VisitorInfo.Tourist_Details": 1 } }, { $lookup: { from: "Visits", localField: "Tourist_Attraction_ID", foreignField: "Tourist_Attraction_ID", as: "VisitsInfoRosalind" } }, { $lookup: { from: "Visitors", localField: "VisitsInfoRosalind.Tourist_ID", foreignField: "Tourist_ID", as: "VisitorInfoRosalind" } }, { $match: { "VisitorInfoRosalind.Tourist_Details": { $ne: "Rosalind" } } }, { $project: { Name: 1 } } ])	cre_Theme_park
db.Visitors.aggregate([ { $match: { Tourist_Details: "Alison" } }, { $lookup: { from: "Visits", localField: "Tourist_ID", foreignField: "Tourist_ID", as: "AlisonVisits" } }, { $unwind: "$AlisonVisits" }, { $lookup: { from: "Tourist_Attractions", localField: "AlisonVisits.Tourist_Attraction_ID", foreignField: "Tourist_Attraction_ID", as: "Attractions" } }, { $unwind: "$Attractions" }, { $group: { _id: "$Attractions.Name" } }, { $lookup: { from: "Visits", let: { attractionName: "$_id" }, pipeline: [ { $match: { $expr: { $and: [ { $eq: ["$Tourist_ID", "Rosalind"] } ] } } }, { $lookup: { from: "Tourist_Attractions", localField: "Tourist_Attraction_ID", foreignField: "Tourist_Attraction_ID", as: "RosalindAttractions" } }, { $match: { $expr: { $eq: ["$RosalindAttractions.Name", "$$attractionName"] } } } ], as: "RosalindVisits" } }, { $match: { RosalindVisits: [] } }, { $project: { _id: 1 } } ])	cre_Theme_park
db.Visitors.aggregate([ { $lookup: { from: "Visits", localField: "Tourist_ID", foreignField: "Tourist_ID", as: "Visits" } }, { $match: { Visits: { $size: 0 } } }, { $count: "NoVisits" } ])	cre_Theme_park
db.Visitors.aggregate([ { $lookup: { from: "Visits", localField: "Tourist_ID", foreignField: "Tourist_ID", as: "VisitData" } }, { $match: { "VisitData": { $size: 0 } } }, { $count: "NoVisitsCount" } ])	cre_Theme_park
db.Video_Games.aggregate([ { $group: { _id: "$GType" }}, { $count: "distinct_game_types" } ])	game_1
db.Video_Games.find({}, { GName: 1, GType: 1 }).sort({ GName: 1 })	game_1
db.Video_Games.find({}, {GName: 1, GType: 1}).sort({GName: 1})	game_1
db.Video_Games.find({ GType: "Collectible card game" }, { GName: 1 })	game_1
db.Video_Games.find({ GType: 'Collectible card game' }, { GName: 1 })	game_1
db.Video_Games.findOne({GName: "Call of Destiny"}, {GType: 1})	game_1
db.Video_Games.find( { GName: "Call of Destiny" }, { GType: 1 } )	game_1
db.Video_Games.aggregate([ { $group: { _id: "$GType", count: { $sum: 1 } } } ])	game_1
db.Video_Games.aggregate([ { $group: { _id: "$GType", count: { $sum: 1 } } }, { $project: { GType: "$_id", count: 1 } } ])	game_1
db.Student.find({city_code: 'CHI'}, {StuID: 1})	game_1
db.Student.find({city_code: 'CHI'}, {StuID: 1})	game_1
db.Student.find({Advisor: 1121}, {StuID: 1})	game_1
db.Student.find({Advisor: 1121}, {StuID: 1})	game_1
db.Student.find({Major: 600}, {Fname: 1})	game_1
db.Student.find({Major: 600}, {Fname: 1})	game_1
db.Student.aggregate([ { $group: { _id: "$Major", avgAge: { $avg: "$Age" }, minAge: { $min: "$Age" }, maxAge: { $max: "$Age" } } } ])	game_1
db.Student.aggregate([ { $group: { _id: "$Major", avgAge: { $avg: "$Age" }, minAge: { $min: "$Age" }, maxAge: { $max: "$Age" } } } ])	game_1
db.Student.aggregate([ { $group: { _id: "$Advisor", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Advisor: "$_id" } } ])	game_1
db.Student.aggregate([ { $group: { _id: "$Advisor", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Advisor: "$_id" } } ])	game_1
db.SportsInfo.find({ OnScholarship: 'Y' }, { StuID: 1 })	game_1
db.SportsInfo.find({ OnScholarship: 'Y' }, { StuID: 1 })	game_1
db.SportsInfo.aggregate([ { $group: { _id: null, totalGamesPlayed: { $sum: "$GamesPlayed" } } }, { $project: { totalGamesPlayed: 1 } } ])	game_1
db.SportsInfo.aggregate([ { $group: { _id: null, totalGamesPlayed: { $sum: "$GamesPlayed" } } }, { $project: { totalGamesPlayed: 1 } } ])	game_1
db.SportsInfo.aggregate([ { $match: { SportName: "Football", OnScholarship: "Y" } }, { $group: { _id: null, totalGamesPlayed: { $sum: "$GamesPlayed" } } }, { $project: { totalGamesPlayed: 1 } } ])	game_1
db.SportsInfo.aggregate([ { $match: { SportName: "Football", OnScholarship: "Y" } }, { $group: { _id: null, totalGamesPlayed: { $sum: "$GamesPlayed" } } }, { $project: { totalGamesPlayed: 1 } } ])	game_1
db.SportsInfo.aggregate([ { $group: { _id: "$SportName", count: { $sum: 1 } } }, { $project: { sportname: "$_id", count: 1 } } ])	game_1
db.SportsInfo.aggregate([ { $group: { _id: "$SportName", count: { $sum: 1 } } } ])	game_1
db.SportsInfo.aggregate([ { $group: { _id: "$StuID", count: { $sum: 1 }, totalGamesPlayed: { $sum: "$GamesPlayed" } } } ])	game_1
db.SportsInfo.aggregate([ { $group: { _id: "$StuID", count: { $sum: 1 }, gamesPlayed: { $sum: "$GamesPlayed" } } } ])	game_1
db.SportsInfo.aggregate([ { $group: { _id: "$StuID", totalHours: { $sum: "$HoursPerWeek" } } }, { $match: { totalHours: { $gt: 10 } } }, { $project: { StuID: "$_id" } } ])	game_1
db.SportsInfo.aggregate([ { $group: { _id: "$StuID", totalHours: { $sum: "$HoursPerWeek" } } }, { $match: { totalHours: { $gt: 10 } } }, { $project: { StuID: "$_id" } } ])	game_1
db.SportsInfo.aggregate([ { $match: { OnScholarship: 'Y' }}, { $group: { _id: "$SportName", numberOfStudents: { $sum: 1 } }}, { $sort: { numberOfStudents: -1 }}, { $limit: 1 }, { $project: { _id: 1 } } ])	game_1
db.SportsInfo.aggregate([ { $match: { OnScholarship: 'Y' } }, { $group: { _id: "$SportName", scholarshipCount: { $sum: 1 } } }, { $sort: { scholarshipCount: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	game_1
db.Student.aggregate([ { $lookup: { from: "SportsInfo", localField: "StuID", foreignField: "StuID", as: "SportsData" } }, { $match: { Major: 600, "SportsData.OnScholarship": "Y" } }, { $project: { StuID: 1 } } ])	game_1
db.Student.aggregate([ { $lookup: { from: "SportsInfo", localField: "StuID", foreignField: "StuID", as: "SportsInfo" } }, { $unwind: "$SportsInfo" }, { $match: { "Major": 600, "SportsInfo.OnScholarship": "Y" } }, { $project: { "StuID": 1, "_id": 0 } } ])	game_1
db.Student.aggregate([ { $lookup: { from: "SportsInfo", localField: "StuID", foreignField: "StuID", as: "Sports" } }, { $match: { "Sex": "F", "Sports.SportName": "Football" } }, { $project: { StuID: 1 } } ])	game_1
db.Student.aggregate([ { $match: { Fname: 'David', LName: 'Shieber' } }, { $lookup: { from: 'SportsInfo', localField: 'StuID', foreignField: 'StuID', as: 'SportsDetails' } }, { $unwind: '$SportsDetails' }, { $group: { _id: '$StuID', TotalHoursPerWeek: { $sum: '$SportsDetails.HoursPerWeek' }, TotalGamesPlayed: { $sum: '$SportsDetails.GamesPlayed' } } }, { $project: { TotalHoursPerWeek: 1, TotalGamesPlayed: 1 } } ])	game_1
db.Student.aggregate([ { $match: { Age: { $lt: 20 } } }, { $lookup: { from: "SportsInfo", localField: "StuID", foreignField: "StuID", as: "SportsData" } }, { $unwind: "$SportsData" }, { $group: { _id: null, totalHoursPerWeek: { $sum: "$SportsData.HoursPerWeek" }, totalGamesPlayed: { $sum: "$SportsData.GamesPlayed" } } }, { $project: { totalHoursPerWeek: 1, totalGamesPlayed: 1 } } ])	game_1
db.Student.aggregate([ { $match: { Age: { $lt: 20 } } }, { $lookup: { from: "SportsInfo", localField: "StuID", foreignField: "StuID", as: "sports_info" } }, { $unwind: "$sports_info" }, { $group: { _id: null, totalHoursPerWeek: { $sum: "$sports_info.HoursPerWeek" }, totalGamesPlayed: { $sum: "$sports_info.GamesPlayed" } } }, { $project: { totalHoursPerWeek: 1 , totalGamesPlayed:1} } ])	game_1
db.Student.aggregate([ { $lookup: { from: "Plays_Games", localField: "StuID", foreignField: "StuID", as: "plays_games" } }, { $lookup: { from: "SportsInfo", localField: "StuID", foreignField: "StuID", as: "sports_info" } }, { $match: { "plays_games": { $ne: [] }, "sports_info": { $ne: [] } } }, { $project: { StuID: 1 } } ])	game_1
db.SportsInfo.aggregate([ { $lookup: { from: "Plays_Games", localField: "StuID", foreignField: "StuID", as: "games_played" } }, { $match: { "games_played": { $ne: [] } } }, { $group: { _id: "$StuID" } }, { $project: { StuID: "$_id" } } ])	game_1
db.Plays_Games.aggregate([ { $group: { _id: "$GameID", totalHoursPlayed: { $sum: "$Hours_Played" } } } ])	game_1
db.Plays_Games.aggregate([ { $group: { _id: "$GameID", totalHoursPlayed: { $sum: "$Hours_Played" } } } ])	game_1
db.Plays_Games.aggregate([ { $group: { _id: "$StuID", totalHoursPlayed: { $sum: "$Hours_Played" } } }, { $project: { _id: 1, totalHoursPlayed: 1 } } ])	game_1
db.Plays_Games.aggregate([ { $group: { _id: "$StuID", totalHoursPlayed: { $sum: "$Hours_Played" } } } ])	game_1
db.Plays_Games.aggregate([ { $lookup: { from: "Video_Games", localField: "GameID", foreignField: "GameID", as: "game_info" } }, { $unwind: "$game_info" }, { $group: { _id: "$game_info.GName", totalHours: { $sum: "$Hours_Played" } } }, { $sort: { totalHours: -1 } }, { $limit: 1 }, { $project: { gname: "$_id" } } ])	game_1
db.Plays_Games.aggregate([ { $lookup: { from: "Video_Games", localField: "GameID", foreignField: "GameID", as: "game_info" } }, { $unwind: "$game_info" }, { $group: { _id: "$game_info.GName", totalHours: { $sum: "$Hours_Played" } } }, { $sort: { totalHours: -1 } }, { $limit: 1 } , { $project: { gname: "$_id" } }])	game_1
db.Plays_Games.aggregate([ { $lookup: { from: "Video_Games", localField: "GameID", foreignField: "GameID", as: "game_info" } }, { $unwind: "$game_info" }, { $group: { _id: "$game_info.GameID", totalHours: { $sum: "$Hours_Played" }, gameName: { $first: "$game_info.GName" } } }, { $match: { totalHours: { $gte: 1000 } } }, { $project: { gameName: 1 } } ])	game_1
db.Plays_Games.aggregate([ { $lookup: { from: "Video_Games", localField: "GameID", foreignField: "GameID", as: "game_info" } }, { $unwind: "$game_info" }, { $group: { _id: "$GameID", totalHours: { $sum: "$Hours_Played" }, gameName: { $first: "$game_info.GName" } } }, { $match: { totalHours: { $gte: 1000 } } }, { $project: { gameName: 1 } } ])	game_1
db.Student.aggregate([ { $match: { LName: "Smith", Fname: "Linda" } }, { $lookup: { from: "Plays_Games", localField: "StuID", foreignField: "StuID", as: "PlayedGames" } }, { $unwind: "$PlayedGames" }, { $lookup: { from: "Video_Games", localField: "PlayedGames.GameID", foreignField: "GameID", as: "GameNames" } }, { $unwind: "$GameNames" }, { $project: { GName: "$GameNames.GName" } } ])	game_1
db.Student.aggregate([ { $lookup: { from: "SportsInfo", localField: "StuID", foreignField: "StuID", as: "SportDetails" } }, { $match: { "SportDetails.SportName": { $in: ["Football", "Lacrosse"] } } }, { $project: { LName: 1, Fname: 1 } } ])	game_1
db.Student.aggregate([ { $lookup: { from: "SportsInfo", localField: "StuID", foreignField: "StuID", as: "sports_info" } }, { $match: { "sports_info.SportName": { $in: ["Football", "Lacrosse"] } } }, { $project: { LName: 1, Fname: 1 } } ])	game_1
db.Customers.find({}, {customer_name: 1})	customers_and_addresses
db.Customers.find({}, {customer_name: 1})	customers_and_addresses
db.Customers.find({payment_method: 'Cash'}, {customer_name: 1})	customers_and_addresses
db.Customers.find({payment_method: 'Cash'}, {customer_name: 1})	customers_and_addresses
db.Customers.aggregate([ { $group: { _id: "$payment_method", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { payment_method: "$_id" } } ])	customers_and_addresses
db.Customers.aggregate([ { $group: { _id: "$payment_method", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { payment_method: "$_id" } } ])	customers_and_addresses
db.Customers.aggregate([ { $group: { _id: "$payment_method", count: { $sum: 1 }, customer_names: { $push: "$customer_name" } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $unwind: "$customer_names" }, { $project: { customer_name: "$customer_names" } } ])	customers_and_addresses
db.Customers.aggregate([ { $group: { _id: "$payment_method", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Customers", localField: "_id", foreignField: "payment_method", as: "customers" } }, { $unwind: "$customers" }, { $project: { customer_name: "$customers.customer_name" } } ])	customers_and_addresses
db.Products.find({}, {product_details: 1})	customers_and_addresses
db.Products.find({}, {product_details: 1})	customers_and_addresses
db.Customers.find({customer_name: /Alex/}, {customer_name: 1})	customers_and_addresses
db.Customers.find({customer_name: /Alex/}, {customer_name: 1})	customers_and_addresses
db.Products.find( { product_details: { $regex: /Latte|Americano/, $options: 'i' } }, { product_details: 1 } )	customers_and_addresses
db.Products.find( { product_details: { $in: [/Latte/, /Americano/] } }, { product_details: 1 } )	customers_and_addresses
db.Customers.aggregate([ { $match: { customer_name: "Maudie Kertzmann" } }, { $lookup: { from: "Customer_Addresses", localField: "customer_id", foreignField: "customer_id", as: "customer_addresses" } }, { $unwind: "$customer_addresses" }, { $lookup: { from: "Addresses", localField: "customer_addresses.address_id", foreignField: "address_id", as: "addresses" } }, { $unwind: "$addresses" }, { $project: { address_content: "$addresses.address_content" } } ])	customers_and_addresses
db.Customers.aggregate([ { $match: { customer_name: 'Maudie Kertzmann' } }, { $lookup: { from: 'Customer_Addresses', localField: 'customer_id', foreignField: 'customer_id', as: 'customer_addresses' } }, { $unwind: '$customer_addresses' }, { $lookup: { from: 'Addresses', localField: 'customer_addresses.address_id', foreignField: 'address_id', as: 'customer_address_content' } }, { $unwind: '$customer_address_content' }, { $project: { address_content: '$customer_address_content.address_content' } } ])	customers_and_addresses
db.Customers.aggregate([ { $lookup: { from: "Customer_Addresses", localField: "customer_id", foreignField: "customer_id", as: "customer_addresses" } }, { $unwind: "$customer_addresses" }, { $lookup: { from: "Addresses", localField: "customer_addresses.address_id", foreignField: "address_id", as: "addresses" } }, { $unwind: "$addresses" }, { $match: { "addresses.city": "Lake Geovannyton" } }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1} } ])	customers_and_addresses
db.Customers.aggregate([ { $lookup: { from: "Customer_Addresses", localField: "customer_id", foreignField: "customer_id", as: "customer_addresses" } }, { $lookup: { from: "Addresses", localField: "customer_addresses.address_id", foreignField: "address_id", as: "addresses" } }, { $match: { "addresses.city": "Lake Geovannyton" } }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1 } } ])	customers_and_addresses
db.Customers.aggregate([ { $lookup: { from: "Customer_Addresses", localField: "customer_id", foreignField: "customer_id", as: "customer_addresses" } }, { $unwind: "$customer_addresses" }, { $lookup: { from: "Addresses", localField: "customer_addresses.address_id", foreignField: "address_id", as: "addresses" } }, { $unwind: "$addresses" }, { $match: { "addresses.state_province_county": "Colorado" } }, { $project: { customer_name: 1 } } ])	customers_and_addresses
db.Customers.aggregate([ { $lookup: { from: "Customer_Addresses", localField: "customer_id", foreignField: "customer_id", as: "customer_addresses" } }, { $unwind: "$customer_addresses" }, { $lookup: { from: "Addresses", localField: "customer_addresses.address_id", foreignField: "address_id", as: "addresses" } }, { $unwind: "$addresses" }, { $match: { "addresses.state_province_county": "Colorado" } }, { $project: { customer_name: 1 } } ])	customers_and_addresses
db.Addresses.aggregate([ { $lookup: { from: "Customer_Addresses", localField: "address_id", foreignField: "address_id", as: "customer_addresses" } }, { $match: { "customer_addresses": { $size: 0 } } }, { $project: { city: 1 } } ])	customers_and_addresses
db.Addresses.aggregate([ { $lookup: { from: "Customer_Addresses", localField: "address_id", foreignField: "address_id", as: "customer_addresses" } }, { $match: { "customer_addresses": { $size: 0 } } }, { $group: { _id: "$city" } }, { $project: { city: "$_id" } } ])	customers_and_addresses
db.Customers.aggregate([ { $lookup: { from: "Customer_Addresses", localField: "customer_id", foreignField: "customer_id", as: "customer_addresses" } }, { $unwind: "$customer_addresses" }, { $lookup: { from: "Addresses", localField: "customer_addresses.address_id", foreignField: "address_id", as: "addresses" } }, { $unwind: "$addresses" }, { $group: { _id: "$addresses.city", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 },{ $project: { city: "$_id" } } ])	customers_and_addresses
db.Customers.aggregate([ { $lookup: { from: "Customer_Addresses", localField: "customer_id", foreignField: "customer_id", as: "customer_addresses" } }, { $unwind: "$customer_addresses" }, { $lookup: { from: "Addresses", localField: "customer_addresses.address_id", foreignField: "address_id", as: "addresses" } }, { $unwind: "$addresses" }, { $group: { _id: "$addresses.city", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { city: "$_id" } }])	customers_and_addresses
db.Addresses.find({zip_postcode: /^4/}, {state_province_county: 1, country: 1})	customers_and_addresses
db.Addresses.find({zip_postcode: /^4/}, { state_province_county: 1, country: 1})	customers_and_addresses
db.Addresses.aggregate([ { $group: { _id: "$country", count: { $sum: 1 } } }, { $match: { count: { $gt: 4 } } }, { $project: { country: "$_id" } } ])	customers_and_addresses
db.Addresses.aggregate([ { $group: { _id: "$country", count: { $sum: 1 } } }, { $match: { count: { $gt: 4 } } }, { $project: { country: "$_id" } } ])	customers_and_addresses
db.Customer_Contact_Channels.aggregate([ { $group: { _id: "$channel_code", count: { $sum: 1 } } }, { $match: { count: { $lt: 5 } } }, { $project: { channel_code: "$_id" } } ])	customers_and_addresses
db.Customer_Contact_Channels.aggregate([ { $group: { _id: "$channel_code", count: { $sum: 1 } } }, { $match: { count: { $lt: 5 } } }, { $project: { channel_code: "$_id" } } ])	customers_and_addresses
db.Customers.aggregate([ { $match: { customer_name: "Tillman Ernser" } }, { $lookup: { from: "Customer_Contact_Channels", localField: "customer_id", foreignField: "customer_id", as: "contact_channels" } }, { $unwind: "$contact_channels" }, { $group: { _id: "$contact_channels.channel_code" } }, { $project: { channel_code: "$_id" } } ])	customers_and_addresses
db.Customers.aggregate([ { $match: { customer_name: 'Tillman Ernser' } }, { $lookup: { from: "Customer_Contact_Channels", localField: "customer_id", foreignField: "customer_id", as: "contact_channels" }}, { $unwind: "$contact_channels" }, { $group: { _id: "$contact_channels.channel_code" } }, { $project: { channel_code: "$_id" } } ])	customers_and_addresses
db.Customers.aggregate([ { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "customer_orders" } }, { $unwind: "$customer_orders" }, { $lookup: { from: "Order_Items", localField: "customer_orders.order_id", foreignField: "order_id", as: "order_items" } }, { $unwind: "$order_items" }, { $group: { _id: "$customer_id", payment_method: { $first: "$payment_method" }, total_quantity: { $sum: "$order_items.order_quantity" } } }, { $sort: { total_quantity: 1 } }, { $limit: 1 }, { $project: { payment_method: 1 } } ])	customers_and_addresses
db.Customers.aggregate([ { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "customer_orders" } }, { $unwind: "$customer_orders" }, { $lookup: { from: "Order_Items", localField: "customer_orders.order_id", foreignField: "order_id", as: "order_items" } }, { $unwind: "$order_items" }, { $group: { _id: "$customer_id", payment_method: { $first: "$payment_method" }, total_quantity: { $sum: "$order_items.order_quantity" } } }, { $sort: { total_quantity: 1 } }, { $limit: 1 }, { $project: { payment_method: 1 } } ])	customers_and_addresses
db.Customers.aggregate([ { $match: { customer_name: "Rodrick Heaney" } }, { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "customer_orders" } }, { $unwind: "$customer_orders" }, { $lookup: { from: "Order_Items", localField: "customer_orders.order_id", foreignField: "order_id", as: "order_items" } }, { $unwind: "$order_items" }, { $group: { _id: null, uniqueProducts: { $addToSet: "$order_items.product_id" } } }, { $project: { count: { $size: "$uniqueProducts" } } } ])	customers_and_addresses
db.Customers.aggregate([ { $match: { customer_name: "Rodrick Heaney" } }, { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "customer_orders" } }, { $unwind: "$customer_orders" }, { $lookup: { from: "Order_Items", localField: "customer_orders.order_id", foreignField: "order_id", as: "order_items" } }, { $unwind: "$order_items" }, { $group: { _id: null, distinct_products: { $addToSet: "$order_items.product_id" } } }, { $project: { number_of_distinct_products: { $size: "$distinct_products" } } } ])	customers_and_addresses
db.Customer_Orders.aggregate([ { $match: { order_status: 'Cancelled' } }, { $group: { _id: "$customer_id" } }, { $count: "distinct_customer_count" } ])	customers_and_addresses
db.Customer_Orders.aggregate([ { $match: { order_status: 'Cancelled' } }, { $group: { _id: "$customer_id" } }, { $count: "distinct_customer_count" } ])	customers_and_addresses
db.Customers.aggregate([ { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $unwind: "$orders" }, { $sort: { "orders.order_date": -1 } }, { $limit: 1 }, { $project: { customer_name: 1 } } ])	customers_and_addresses
db.Customers.aggregate([ { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $unwind: "$orders" }, { $sort: { "orders.order_date": -1 } }, { $limit: 1 }, { $project: { customer_name: 1 } } ])	customers_and_addresses
db.Order_Items.aggregate([ { $lookup: { from: "Products", localField: "product_id", foreignField: "product_id", as: "product_details" } }, { $unwind: "$product_details" }, { $group: { _id: "$product_id", product_details: { $first: "$product_details.product_details" }, count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { product_details: 1 } } ])	customers_and_addresses
db.Order_Items.aggregate([ { $group: { _id: "$product_id", total_ordered: { $sum: "$order_quantity" } } }, { $sort: { total_ordered: -1 } }, { $limit: 1 }, { $lookup: { from: "Products", localField: "_id", foreignField: "product_id", as: "product_details" } }, { $unwind: "$product_details" }, { $project: { product_details: "$product_details.product_details" } } ])	customers_and_addresses
db.Addresses.find( { $or: [ { city: "East Julianaside", state_province_county: "Texas" }, { city: "Gleasonmouth", state_province_county: "Arizona" } ] }, { address_content: 1 } )	customers_and_addresses
db.Addresses.find( { $or: [ { city: "East Julianaside", state_province_county: "Texas" }, { city: "Gleasonmouth", state_province_county: "Arizona" } ] }, { address_content: 1 } )	customers_and_addresses
db.Customers.find( { payment_method: { $ne: 'Cash' } }, { customer_name: 1 } )	customers_and_addresses
db.Customers.find({payment_method: {$ne: 'Cash'}}, {customer_name: 1})	customers_and_addresses
db.Customers.aggregate([ { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $lookup: { from: "Order_Items", localField: "orders.order_id", foreignField: "order_id", as: "items" } }, { $lookup: { from: "Products", localField: "items.product_id", foreignField: "product_id", as: "products" } }, { $match: { "products.product_details": { $ne: "Latte" } } }, { $group: { _id: "$customer_id", customer_name: { $first: "$customer_name" } } }, { $project: { customer_name: 1 } } ])	customers_and_addresses
db.Customers.find( { customer_id: { $nin: db.Customer_Orders.distinct("customer_id") } }, { customer_name: 1 } )	customers_and_addresses
db.Customers.aggregate([ { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $match: { "orders": { $size: 0 } } }, { $project: { customer_name: 1 } } ])	customers_and_addresses
db.Customers.aggregate([ { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "customer_orders" } }, { $unwind: "$customer_orders" }, { $lookup: { from: "Order_Items", localField: "customer_orders.order_id", foreignField: "order_id", as: "order_items" } }, { $unwind: "$order_items" }, { $lookup: { from: "Products", localField: "order_items.product_id", foreignField: "product_id", as: "products" } }, { $unwind: "$products" }, { $match: { $or: [ { "products.product_details": "Latte" }, { "products.product_details": "Americano" } ] } }, { $group: { _id: "$customer_id", customer_name: { $first: "$customer_name" }, products: { $addToSet: "$products.product_details" } } }, { $match: { products: { $all: ["Latte", "Americano"] } } }, { $project: { customer_name: 1 } } ])	customers_and_addresses
db.Customers.aggregate([ { $lookup: { from: "Customer_Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $unwind: "$orders" }, { $lookup: { from: "Order_Items", localField: "orders.order_id", foreignField: "order_id", as: "orderItems" } }, { $unwind: "$orderItems" }, { $lookup: { from: "Products", localField: "orderItems.product_id", foreignField: "product_id", as: "products" } }, { $unwind: "$products" }, { $match: { "products.product_details": { $in: ["Latte", "Americano"] } } }, { $group: { _id: "$customer_id", customer_name: { $first: "$customer_name" }, products: { $addToSet: "$products.product_details" } } }, { $match: { products: { $all: ["Latte", "Americano"] } } }, { $project: { customer_name: 1 } } ])	customers_and_addresses
db.artist.find({}, {Age: 1})	music_4
db.artist.find({}, {Age: 1})	music_4
db.artist.aggregate([ { $group: { _id: null, averageAge: { $avg: "$Age" } } }, { $project: { averageAge: 1 } } ])	music_4
db.artist.aggregate([ { $group: { _id: null, averageAge: { $avg: "$Age" } } }, { $project: { averageAge: 1 } } ])	music_4
db.artist.find({Artist: 'Triumfall'}, {Famous_Title: 1})	music_4
db.artist.find({Artist: 'Triumfall'}, {Famous_Title: 1})	music_4
db.music_festival.find({}, { Date_of_ceremony: 1, Result: 1 })	music_4
db.music_festival.find({}, { Date_of_ceremony: 1, Result: 1 })	music_4
db.music_festival.find({Result: 'Awarded'}, {Category: 1})	music_4
db.music_festival.find({ Result: 'Awarded' }, { Category: 1 })	music_4
db.volume.aggregate([ { $group: { _id: null, max_weeks_on_top: { $max: "$Weeks_on_Top" }, min_weeks_on_top: { $min: "$Weeks_on_Top" } } }, { $project: { max_weeks_on_top: 1, min_weeks_on_top:1} } ])	music_4
db.volume.aggregate([ { $group: { _id: null, max_weeks_on_top: { $max: "$Weeks_on_Top" }, min_weeks_on_top: { $min: "$Weeks_on_Top" } } }, { $project: { max_weeks_on_top: 1, min_weeks_on_top:1} } ])	music_4
db.volume.find({ Weeks_on_Top: { $gt: 1 } }, { Song: 1 })	music_4
db.volume.find({Weeks_on_Top: {$gt: 1}}, { Song: 1})	music_4
db.volume.find({}, { Song: 1}).sort({Song: 1})	music_4
db.volume.find({}, { Song: 1}).sort({Song: 1})	music_4
db.music_festival.aggregate([ { $lookup: { from: "volume", localField: "Volume", foreignField: "Volume_ID", as: "volume_data" } }, { $unwind: "$volume_data" }, { $match: { "volume_data.Weeks_on_Top": { $gt: 2 } } }, { $project: { Date_of_ceremony: 1 } } ])	music_4
db.music_festival.aggregate([ { $lookup: { from: "volume", localField: "Volume", foreignField: "Volume_ID", as: "volume_data" } }, { $unwind: "$volume_data" }, { $match: { "volume_data.Weeks_on_Top": { $gt: 2 } } }, { $project: { Date_of_ceremony: 1 } } ])	music_4
db.music_festival.aggregate([ { $match: { Result: "Nominated" } }, { $lookup: { from: "volume", localField: "Volume", foreignField: "Volume_ID", as: "volume_data" } }, { $unwind: "$volume_data" }, { $project: { Song: "$volume_data.Song" } } ])	music_4
db.music_festival.aggregate([ { $match: { Result: "Nominated" } }, { $lookup: { from: "volume", localField: "Volume", foreignField: "Volume_ID", as: "volume_data" } }, { $unwind: "$volume_data" }, { $project: { Song: "$volume_data.Song" } } ])	music_4
db.artist.aggregate([ { $match: { Artist: "Gorgoroth" } }, { $lookup: { from: "volume", localField: "Artist_ID", foreignField: "Artist_ID", as: "volumes" } }, { $unwind: "$volumes" }, { $project: { Issue_Date: "$volumes.Issue_Date" } } ])	music_4
db.artist.aggregate([ { $match: { Artist: "Gorgoroth" } }, { $lookup: { from: "volume", localField: "Artist_ID", foreignField: "Artist_ID", as: "volume_info" } }, { $unwind: "$volume_info" }, { $project: { Issue_Date: "$volume_info.Issue_Date" } } ])	music_4
db.artist.aggregate([ { $match: { Age: { $gte: 32 } } }, { $lookup: { from: "volume", localField: "Artist_ID", foreignField: "Artist_ID", as: "volumes" } }, { $unwind: "$volumes" }, { $project: { Song: "$volumes.Song" } } ])	music_4
db.artist.aggregate([ { $match: { Age: { $gte: 32 } } }, { $lookup: { from: "volume", localField: "Artist_ID", foreignField: "Artist_ID", as: "volume_docs" } }, { $unwind: "$volume_docs" }, { $project: { Song: "$volume_docs.Song" } } ])	music_4
db.artist.aggregate([ { $match: { Age: { $lte: 25 } } }, { $lookup: { from: "volume", localField: "Artist_ID", foreignField: "Artist_ID", as: "volumes" } }, { $unwind: "$volumes" }, { $group: { _id: null, averageWeeksOnTop: { $avg: "$volumes.Weeks_on_Top" } } }, { $project: { averageWeeksOnTop: 1 } } ])	music_4
db.artist.aggregate([ { $match: { Age: { $lte: 25 } } }, { $lookup: { from: "volume", localField: "Artist_ID", foreignField: "Artist_ID", as: "volumes" } }, { $unwind: "$volumes" }, { $group: { _id: null, avgWeeksOnTop: { $avg: "$volumes.Weeks_on_Top" } } }, { $project: { avgWeeksOnTop: 1 } } ])	music_4
db.artist.aggregate([ { $lookup: { from: "volume", localField: "Artist_ID", foreignField: "Artist_ID", as: "volume_data" } }, { $unwind: "$volume_data" }, { $match: { "volume_data.Weeks_on_Top": { $gt: 2 } } }, { $project: { Famous_Title: 1 } } ])	music_4
db.artist.aggregate([ { $lookup: { from: "volume", localField: "Artist_ID", foreignField: "Artist_ID", as: "volume_data" } }, { $unwind: "$volume_data" }, { $match: { "volume_data.Weeks_on_Top": { $gt: 2 } } }, { $project: { Famous_Title: 1 } } ])	music_4
db.artist.aggregate([ { $sort: { Age: -1 } }, { $project: { Famous_Title: 1, Age: 1 } } ])	music_4
db.artist.find({}, {Famous_Title: 1, Age: 1}).sort({Age: -1})	music_4
db.artist.find({}, {Famous_Release_date: 1}).sort({Age: -1}).limit(1)	music_4
db.artist.find({}, {Famous_Release_date: 1}).sort({Age: -1}).limit(1)	music_4
db.music_festival.aggregate([ { $group: { _id: "$Category", count: { $sum: 1 } } }, { $project: { Category: "$_id", count: 1 } } ])	music_4
db.music_festival.aggregate([ { $group: { _id: "$Category", count: { $sum: 1 } } } ])	music_4
db.music_festival.aggregate([ { $group: { _id: "$Result", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	music_4
db.music_festival.aggregate([ { $group: { _id: "$Result", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Result: "$_id" } } ])	music_4
db.music_festival.aggregate([ { $group: { _id: "$Category", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Category: "$_id" } } ])	music_4
db.music_festival.aggregate([ { $group: { _id: "$Category", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Category: "$_id" } } ])	music_4
db.volume.find({}, {Song: 1}).sort({Weeks_on_Top: -1}).limit(1)	music_4
db.volume.find({}, { Song: 1}).sort({Weeks_on_Top: -1}).limit(1)	music_4
db.artist.aggregate([ { $lookup: { from: "volume", localField: "Artist_ID", foreignField: "Artist_ID", as: "volume_docs" } }, { $match: { "volume_docs": { $size: 0 } } }, { $project: { Famous_Title: 1 } } ])	music_4
db.artist.find( { Artist_ID: { $nin: db.volume.distinct("Artist_ID") } }, { Famous_Title: 1 } )	music_4
db.artist.aggregate([ { $lookup: { from: "volume", localField: "Artist_ID", foreignField: "Artist_ID", as: "volume_data" } }, { $match: { $and: [ {"volume_data.Weeks_on_Top": {$gt: 2}}, {"volume_data.Weeks_on_Top": {$lt: 2}} ] } }, { $project: { Famous_Title: 1 } } ])	music_4
db.artist.aggregate([ { $lookup: { from: "volume", localField: "Artist_ID", foreignField: "Artist_ID", as: "volume_data" } }, { $match: { $and: [ { "volume_data.Weeks_on_Top": { $gt: 2 } }, { "volume_data.Weeks_on_Top": { $lt: 2 } } ] } }, { $project: { Famous_Title: 1 } } ])	music_4
db.music_festival.find( { Category: 'Best Song', Result: 'Awarded' }, { Date_of_ceremony: 1 } )	music_4
db.music_festival.find( { Category: 'Best Song', Result: 'Awarded' }, { Date_of_ceremony: 1 } )	music_4
db.volume.find({}, {Issue_Date: 1}).sort({Weeks_on_Top: 1}).limit(1)	music_4
db.volume.find({}, {Issue_Date: 1}).sort({Weeks_on_Top: 1}).limit(1)	music_4
db.volume.aggregate([ { $group: { _id: "$Artist_ID" } }, { $count: "distinct_artists" } ])	music_4
db.music_festival.aggregate([ { $group: { _id: "$Result", count: { $sum: 1 } } }, { $sort: { count: -1 } } ])	music_4
db.music_festival.aggregate([ { $group: { _id: "$Result", count: { $sum: 1 } } }, { $sort: { count: -1 } } ])	music_4
db.artist.aggregate([ { $match: { Age: { $lte: 23 } } }, { $lookup: { from: "volume", localField: "Artist_ID", foreignField: "Artist_ID", as: "volume_info" } }, { $unwind: "$volume_info" }, { $project: { "Issue_Date": "$volume_info.Issue_Date" } } ])	music_4
db.artist.aggregate([ { $match: { Age: { $lte: 23 } } }, { $lookup: { from: "volume", localField: "Artist_ID", foreignField: "Artist_ID", as: "volumes" } }, { $unwind: "$volumes" }, { $project: { Issue_Date: "$volumes.Issue_Date" } } ])	music_4
db.roller_coaster.find({}, {Name: 1}).sort({Length: 1})	roller_coaster
db.roller_coaster.find({}, { Length: 1, Height: 1})	roller_coaster
db.country.find({ Languages: { $ne: 'German' } }, { Name: 1 })	roller_coaster
db.roller_coaster.find( { $or: [ { Length: { $gt: 3300 } }, { Height: { $gt: 100 } } ] }, { Status: 1 } )	roller_coaster
db.roller_coaster.find({}, { Speed: 1 }).sort({ Length: -1 }).limit(1)	roller_coaster
db.roller_coaster.aggregate([ { $group: { _id: "$Status", count: { $sum: 1 } } } ])	roller_coaster
db.roller_coaster.aggregate([ { $group: { _id: "$Status", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Status: "$_id" } } ])	roller_coaster
db.roller_coaster.aggregate([ { $group: { _id: "$Status", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Status: "$_id" } } ])	roller_coaster
db.roller_coaster.find({}, {Park: 1}).sort({Speed: -1}).limit(1)	roller_coaster
db.country.aggregate([ { $lookup: { from: "roller_coaster", localField: "Country_ID", foreignField: "Country_ID", as: "coasters" } }, { $unwind: "$coasters" }, { $project: { "Country Name": "$Name", "Coaster Name": "$coasters.Name" } } ])	roller_coaster
db.country.aggregate([ { $lookup: { from: "roller_coaster", localField: "Country_ID", foreignField: "Country_ID", as: "coasters" } }, { $match: { "coasters.1": { $exists: true } } }, { $project: { Name: 1 } } ])	roller_coaster
db.country.aggregate([ { $lookup: { from: "roller_coaster", localField: "Country_ID", foreignField: "Country_ID", as: "coasters" } }, { $unwind: "$coasters" }, { $sort: { "coasters.Height": -1 } }, { $limit: 1 }, { $project: { Name: 1, Population: 1 } } ])	roller_coaster
db.country.aggregate([ { $lookup:{ from: "roller_coaster", localField: "Country_ID", foreignField: "Country_ID", as: "coasters" } }, { $match: { "coasters": { $not: { $elemMatch: { "Length": { $gt: 3000 } } } } } }, { $count: "countries_without_long_coasters" } ])	roller_coaster
db.captain.aggregate([ { $group: { _id: "$Rank", count: { $sum: 1 } } } ])	ship_1
db.captain.aggregate([ { $group: { _id: "$Rank", count: { $sum: 1 } } } ])	ship_1
db.captain.find({}, { Name: 1}).sort({age: -1})	ship_1
db.captain.find({}, { Name: 1}).sort({age: -1})	ship_1
db.captain.find({}, { Name: 1, Class: 1, Rank: 1 })	ship_1
db.captain.find({}, { Name: 1, Class: 1, Rank: 1})	ship_1
db.captain.aggregate([ { $group: { _id: "$Rank", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { rank: "$_id" } } ])	ship_1
db.captain.aggregate([ { $group: { _id: "$Class", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Class: "$_id" } } ])	ship_1
db.captain.aggregate([ { $group: { _id: "$Class", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { Class: "$_id" } } ])	ship_1
db.captain.aggregate([ { $match: { $or: [ { Class: "Cutter" }, { Class: "Armed schooner" } ] } }, { $group: { _id: "$Rank", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { Rank: "$_id" } } ])	ship_1
db.captain.aggregate([ { $match: { $or: [ { Class: 'Cutter' }, { Class: 'Armed schooner' } ] } }, { $group: { _id: "$Rank", classes: { $addToSet: "$Class" } } }, { $match: { classes: { $all: ['Cutter', 'Armed schooner'] } } }, { $project: { rank: "$_id" } } ])	ship_1
db.captain.find({}, { Name: 1 }).sort({ age: 1 }).limit(1)	ship_1
db.captain.find({}, { Name: 1}).sort({age: 1}).limit(1)	ship_1
db.Ship.find({}, { Name: 1, Type: 1, Flag: 1 }).sort({ Built_Year: -1 }).limit(1)	ship_1
db.Ship.find({}, { Name: 1, Type: 1, Flag: 1 }).sort({ Built_Year: -1 }).limit(1)	ship_1
db.Ship.aggregate([ { $group: { _id: "$Flag", NumberOfShips: { $sum: 1 } } }, { $project: { Flag: "$_id", NumberOfShips: 1 } } ])	ship_1
db.Ship.aggregate([ { $group: { _id: "$Flag", count: { $sum: 1 } } } ])	ship_1
db.Ship.aggregate([ { $group: { _id: "$Flag", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Flag: "$_id" } } ])	ship_1
db.Ship.aggregate([ { $group: { _id: "$Flag", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	ship_1
db.Ship.find({}, { Name: 1 }).sort({ Built_Year: 1, Class: 1 })	ship_1
db.Ship.find({}, {Name: 1}).sort({Built_Year: 1, Class: 1})	ship_1
db.Ship.aggregate([ { $match: { $or: [{ Flag: 'Panama' }, { Flag: 'Malta' }] } }, { $group: { _id: "$Type", flags: { $addToSet: "$Flag" } } }, { $match: { flags: { $all: ["Panama", "Malta"] } } }, { $project: { _id: 1 } } ])	ship_1
db.Ship.aggregate([ { $group: { _id: "$Built_Year", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	ship_1
db.Ship.aggregate([ { $group: { _id: "$Built_Year", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Built_Year: "$_id" } } ])	ship_1
db.captain.aggregate([ { $group: { _id: "$Ship_ID", captainsCount: {$sum: 1} } }, { $match: { captainsCount: {$gt: 1} } }, { $lookup: { from: "Ship", localField: "_id", foreignField: "Ship_ID", as: "shipDetails" } }, { $unwind: "$shipDetails" }, { $project: { "_id": 0, "name": "$shipDetails.Name" } } ])	ship_1
db.captain.aggregate([ { $group: { _id: "$Ship_ID", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $lookup: { from: "Ship", localField: "_id", foreignField: "Ship_ID", as: "ship_info" } }, { $unwind: "$ship_info" }, { $project: { name: "$ship_info.Name" } } ])	ship_1
db.Ship.aggregate([ { $lookup: { from: "captain", localField: "Ship_ID", foreignField: "Ship_ID", as: "captain_info" } }, { $match: { "captain_info": { $size: 0 } } }, { $project: { Name: 1, Class: 1 } } ])	ship_1
db.hosting_city.find({}, { Host_City: 1}).sort({Year: -1}).limit(1)	city_record
db.hosting_city.find({}, { Host_City: 1}).sort({Year: -1}).limit(1)	city_record
db.match.find({ Competition: "1994 FIFA World Cup qualification" }, { Match_ID: 1 })	city_record
db.match.find({ Competition: '1994 FIFA World Cup qualification' }, { Match_ID: 1 })	city_record
db.city.aggregate([ { $match: { City: "Shanghai" } }, { $lookup: { from: "temperature", localField: "City_ID", foreignField: "City_ID", as: "temp" } }, { $unwind: "$temp" }, { $project: { Jan: "$temp.Jan" } } ])	city_record
db.city.aggregate([ { $match: { City: "Shanghai" } }, { $lookup: { from: "temperature", localField: "City_ID", foreignField: "City_ID", as: "temp" } }, { $unwind: "$temp" }, { $project: { Jan: "$temp.Jan" } } ])	city_record
db.city.find({}, {City: 1}).sort({Regional_Population: -1}).limit(3)	city_record
db.city.find({}, { City: 1}).sort({Regional_Population: -1}).limit(3)	city_record
db.city.find({}, { City: 1, GDP: 1}).sort({GDP: 1}).limit(1)	city_record
db.city.find({}, { City: 1, GDP: 1 }).sort({ GDP: 1 }).limit(1)	city_record
db.city.aggregate([ { $lookup: { from: "temperature", localField: "City_ID", foreignField: "City_ID", as: "temp_data" } }, { $unwind: "$temp_data" }, { $sort: { "temp_data.Feb": -1 } }, { $limit: 1 }, { $project: { City: 1 } } ])	city_record
db.city.aggregate([ { $lookup: { from: "temperature", localField: "City_ID", foreignField: "City_ID", as: "temperature_data" } }, { $unwind: "$temperature_data" }, { $sort: { "temperature_data.Feb": -1 } }, { $limit: 1 }, { $project: { City: 1 } } ])	city_record
db.city.aggregate([ { $lookup: { from: "temperature", localField: "City_ID", foreignField: "City_ID", as: "temp" } }, { $match: { $expr: { $or: [ { $lt: ["$temp.Mar", "$temp.Jul"] }, { $gt: ["$temp.Mar", "$temp.Oct"] } ] } } }, { $project: { City: 1 } } ])	city_record
db.city.find({ Regional_Population: { $gt: 10000000 } }, { City: 1 })	city_record
db.city.find({ Regional_Population: { $gt: 10000000 } }, { City: 1 })	city_record
db.match.aggregate([ { $group: { _id: "$Competition", count: { $sum: 1 } } } ])	city_record
db.match.aggregate([ { $group: { _id: "$Competition", count: { $sum: 1 } } } ])	city_record
db.match.aggregate([ { $sort: { Date: -1 } }, { $project: { Venue: 1 } } ])	city_record
db.match.find({}, { Venue: 1 }).sort({ Date: -1 })	city_record
db.city.find({}, {GDP: 1}).sort({Regional_Population: -1}).limit(1)	city_record
db.city.find({}, {GDP: 1}).sort({Regional_Population: -1}).limit(1)	city_record
db.Individuals.find({}, {individual_first_name: 1, individual_middle_name: 1, individual_last_name: 1}).sort({individual_last_name: 1})	e_government
db.Individuals.find({}, {individual_first_name: 1, individual_middle_name: 1, individual_last_name: 1}).sort({individual_last_name: 1})	e_government
db.Forms.aggregate([ { $lookup: { from: "Party_Forms", localField: "form_id", foreignField: "form_id", as: "party_forms" } }, { $unwind: "$party_forms" }, { $group: { _id: "$form_name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { form_name: "$_id" } } ])	e_government
db.Parties.find( { party_email: 'enrico09@example.com' }, { payment_method_code: 1, party_phone: 1 } )	e_government
db.Parties.find( { party_email: 'enrico09@example.com' }, { payment_method_code: 1, party_phone: 1 } )	e_government
db.Organizations.find({}, { organization_name: 1 }).sort({ date_formed: 1 })	e_government
db.Organizations.find({}, {organization_name: 1}).sort({date_formed: 1})	e_government
db.Organizations.find({}, { organization_name: 1 }).sort({ date_formed: -1 }).limit(1)	e_government
db.Organizations.aggregate([ { $match: { organization_name: "Labour Party" } }, { $lookup: { from: "Organization_Contact_Individuals", localField: "organization_id", foreignField: "organization_id", as: "contact_individuals" } }, { $unwind: "$contact_individuals" }, { $lookup: { from: "Individuals", localField: "contact_individuals.individual_id", foreignField: "individual_id", as: "individual" } }, { $unwind: "$individual" }, { $sort: { "contact_individuals.date_contact_to": -1 } }, { $limit: 1 }, { $project: { individual_last_name: "$individual.individual_last_name" } } ])	e_government
db.Organizations.aggregate([ { $match: { organization_name: "Labour Party" } }, { $lookup: { from: "Organization_Contact_Individuals", localField: "organization_id", foreignField: "organization_id", as: "contact_individuals" } }, { $unwind: "$contact_individuals" }, { $lookup: { from: "Individuals", localField: "contact_individuals.individual_id", foreignField: "individual_id", as: "individual" } }, { $unwind: "$individual" }, { $sort: { "contact_individuals.date_contact_to": -1 } }, { $limit: 1 }, { $project: { individual_last_name: "$individual.individual_last_name" } } ])	e_government
db.Addresses.aggregate([ { $match: { state_province_county: 'Colorado' }}, { $group: { _id: "$town_city" } }, { $count: "number_of_cities" } ])	e_government
db.Parties.aggregate([ { $group: { _id: "$payment_method_code", count: { $sum: 1 } } }, { $match: { count: { $gt: 3 } } }, { $project: { payment_method_code: "$_id" } } ])	e_government
db.Parties.aggregate([ { $group: { _id: "$payment_method_code", count: { $sum: 1 } } }, { $match: { count: { $gt: 3 } } }, { $project: { payment_method_code: "$_id" } } ])	e_government
db.Organizations.find( { organization_name: { $regex: /Party/ } }, { organization_name: 1 } )	e_government
db.Parties.aggregate([ { $group: { _id: "$payment_method_code" } }, { $count: "distinct_payment_method_codes" } ])	e_government
db.Parties.aggregate([ { $lookup: { from: "Party_Services", localField: "party_id", foreignField: "customer_id", as: "services" } }, { $project: { party_email: 1 } }, { $sort: { serviceCount: -1 } }, { $limit: 1 } ])	e_government
db.Parties.aggregate([ { $lookup: { from: "Party_Services", localField: "party_id", foreignField: "customer_id", as: "party_services" } }, { $project: { party_email: 1 } }, { $sort: { count: -1 } }, { $limit: 1 } ])	e_government
db.Addresses.find({ line_1_number_building: /6862 Kaitlyn Knolls/ }, { state_province_county: 1 })	e_government
db.Addresses.findOne({ line_1_number_building: /6862 Kaitlyn Knolls/ }, { state_province_county: 1 })	e_government
db.Organizations.aggregate([ { $lookup: { from: "Organization_Contact_Individuals", localField: "organization_id", foreignField: "organization_id", as: "contact_individuals" } }, { $project: { organization_name: 1 } }, { $sort: { count: -1 } }, { $limit: 1 } ])	e_government
db.Organizations.aggregate([ { $lookup: { from: "Organization_Contact_Individuals", localField: "organization_id", foreignField: "organization_id", as: "contact_individuals" } }, { $project: { organization_name: 1} }, { $sort: { count: -1 } }, { $limit: 1 } ])	e_government
db.Individuals.aggregate([ { $lookup: { from: "Organization_Contact_Individuals", localField: "individual_id", foreignField: "individual_id", as: "contact_individuals" } }, { $match: { "contact_individuals": { $ne: [] } } }, { $project: { individual_last_name: 1 } } ])	e_government
db.Individuals.aggregate([ { $lookup: { from: "Organization_Contact_Individuals", localField: "individual_id", foreignField: "individual_id", as: "contact_individuals" } }, { $match: { "contact_individuals.individual_id": { $exists: true } } }, { $project: { individual_last_name: 1 } } ])	e_government
db.driver.find({}, { Name: 1, Home_city: 1, Age: 1 })	school_bus
db.driver.aggregate([ { $group: { _id: "$Party", count: { $sum: 1 } } }, { $project: { party: "$_id", count: 1 } } ])	school_bus
db.driver.find({}, { Name: 1}).sort({Age: -1})	school_bus
db.driver.aggregate([ { $group: { _id: "$Home_city", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { home_city: "$_id" } } ])	school_bus
db.driver.find( { Home_city: "Hartford", Age: { $gt: 40 } }, { Party: 1 } )	school_bus
db.driver.aggregate([ { $group: { _id: "$Home_city", maxAge: { $max: "$Age" } } }, { $match: { maxAge: { $lte: 40 } } }, { $project: { Home_city: "$_id" } } ])	school_bus
db.driver.aggregate([ { $lookup: { from: "school_bus", localField: "Driver_ID", foreignField: "Driver_ID", as: "bus_info" } }, { $match: { "bus_info": { $size: 0 } } }, { $project: { Name: 1 } } ])	school_bus
db.school.aggregate([ { $group: { _id: "$Type", count: { $sum: 1 } } }, { $match: { count: 2 } }, { $project: { Type: "$_id" } } ])	school_bus
db.school_bus.aggregate([ { $lookup: { from: "school", localField: "School_ID", foreignField: "School_ID", as: "school_info" } }, { $lookup: { from: "driver", localField: "Driver_ID", foreignField: "Driver_ID", as: "driver_info" } }, { $unwind: "$school_info" }, { $unwind: "$driver_info" }, { $project: { school: "$school_info.School", name: "$driver_info.Name" } } ])	school_bus
db.school_bus.aggregate([ { $group: { _id: null, maxYearsWorking: { $max: "$Years_Working" }, minYearsWorking: { $min: "$Years_Working" }, avgYearsWorking: { $avg: "$Years_Working" } } } , { $project: { maxYearsWorking: 1, minYearsWorking:1, avgYearsWorking:1} }])	school_bus
db.school.aggregate([ { $lookup: { from: "school_bus", localField: "School_ID", foreignField: "School_ID", as: "bus_info" } }, { $match: { "bus_info": { $eq: [] } } }, { $project: { School: 1, Type: 1 } } ])	school_bus
db.school_bus.aggregate([ { $lookup: { from: "school", localField: "School_ID", foreignField: "School_ID", as: "school_info" } }, { $unwind: "$school_info" }, { $group: { _id: "$school_info.Type", count: { $sum: 1 } } }, { $project: { type: "$_id", count: 1 } } ])	school_bus
db.driver.aggregate([ { $match: { $or: [ { Home_city: "Hartford" }, { Age: { $lt: 40 } } ] } }, { $count: "total" } ])	school_bus
db.driver.find( { Home_city: "Hartford", Age: { $lt: 40 } }, { Name: 1 } )	school_bus
db.driver.aggregate([ { $lookup: { from: "school_bus", localField: "Driver_ID", foreignField: "Driver_ID", as: "school_bus_info" } }, { $unwind: "$school_bus_info" }, { $sort: { "school_bus_info.Years_Working": -1 } }, { $limit: 1 }, { $project: { Name: 1 } } ])	school_bus
db.flight.find({}, { Vehicle_Flight_number: 1, Date: 1, Pilot: 1 }).sort({ Altitude: 1 })	flight_company
db.operate_company.aggregate([ { $group: { _id: null, maxGroupEquityShareholding: { $max: "$Group_Equity_Shareholding" } } }, { $project: { maxGroupEquityShareholding: 1 } } ])	flight_company
db.flight.aggregate([ { $match: { Pilot: 'Thompson' }}, { $group: { _id: null, avgVelocity: { $avg: "$Velocity" } } }, { $project: { avgVelocity: 1 } } ])	flight_company
db.airport.find({Country: {$ne: 'Iceland'}}, { name: 1})	flight_company
db.operate_company.aggregate([ { $lookup: { from: "flight", localField: "id", foreignField: "company_id", as: "flights" } }, { $unwind: "$flights" }, { $match: { "flights.Velocity": { $lt: 200 } } }, { $group: { _id: "$Type" } }, { $project: { Type: "$_id" } } ])	flight_company
db.operate_company.aggregate([ { $lookup: { from: "flight", localField: "id", foreignField: "company_id", as: "flight_data" } }, { $match: { "flight_data.1": { $exists: true } } }, { $project: { id: 1, name: 1 } } ])	flight_company
db.airport.aggregate([ { $match: { $or: [ {Country: "United States"}, {name: "Billund Airport"} ] } }, { $lookup: { from: "flight", localField: "id", foreignField: "airport_id", as: "flight_info" } }, { $unwind: "$flight_info" }, { $group: { _id: "$flight_info.Pilot" } }, { $project: { pilot: "$_id" } } ])	flight_company
db.operate_company.aggregate([ { $group: { _id: "$Type", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	flight_company
db.airport.find({name: {$regex: /international/i}}, { name: 1})	flight_company
db.airport.aggregate([ { $group: { _id: "$Country", count: { $sum: 1 } } } ])	flight_company
db.airport.aggregate([ { $group: { _id: "$Country", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $project: { country: "$_id" } } ])	flight_company
db.flight.aggregate([ { $group: { _id: "$Pilot", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { pilot: "$_id" } } ])	flight_company
db.Accounts.find({}, { Account_ID: 1, Account_Details: 1 })	cre_Docs_and_Epenses
db.Accounts.find({}, { Account_ID: 1, Account_Details: 1 })	cre_Docs_and_Epenses
db.Statements.find({}, { Statement_ID: 1, Statement_Details: 1})	cre_Docs_and_Epenses
db.Statements.find({}, { Statement_ID: 1, Statement_Details: 1 })	cre_Docs_and_Epenses
db.Accounts.aggregate([ { $lookup: { from: "Statements", localField: "Statement_ID", foreignField: "Statement_ID", as: "StatementDetails" } }, { $unwind: "$StatementDetails" }, { $project: { statement_id: "$Statement_ID", statement_details: "$StatementDetails.Statement_Details", account_details: "$Account_Details" } } ])	cre_Docs_and_Epenses
db.Accounts.aggregate([ { $lookup: { from: "Statements", localField: "Statement_ID", foreignField: "Statement_ID", as: "statement" } }, { $unwind: "$statement" }, { $project: { statement_id: "$Statement_ID", statement_details: "$statement.Statement_Details", account_details: "$Account_Details" } } ])	cre_Docs_and_Epenses
db.Accounts.aggregate([ { $group: { _id: "$Statement_ID", count: { $sum: 1 } } }, { $project: { STATEMENT_ID: "$_id", count: 1 } } ])	cre_Docs_and_Epenses
db.Accounts.aggregate([ { $group: { _id: "$Statement_ID", count: { $sum: 1 } } } ])	cre_Docs_and_Epenses
db.Accounts.aggregate([ { $group: { _id: "$Statement_ID", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Statements", localField: "_id", foreignField: "Statement_ID", as: "statement_details" } }, { $project: { statement_id: "$_id", statement_details: { $arrayElemAt: ["$statement_details.Statement_Details", 0] } } } ])	cre_Docs_and_Epenses
db.Accounts.aggregate([ { $group: { _id: "$Statement_ID", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Statements", localField: "_id", foreignField: "Statement_ID", as: "statement_details" } }, { $project: { statement_id: "$_id", statement_details: { $arrayElemAt: ["$statement_details.Statement_Details", 0] } } } ])	cre_Docs_and_Epenses
db.Documents.find({}, { Document_ID: 1, Document_Name: 1})	cre_Docs_and_Epenses
db.Documents.find({}, { Document_ID: 1, Document_Name: 1})	cre_Docs_and_Epenses
db.Documents.find({ Document_Type_Code: "BK" }, { Document_Name: 1, Document_ID: 1 })	cre_Docs_and_Epenses
db.Documents.find({ Document_Type_Code: "BK" }, { Document_Name: 1, Document_ID: 1 })	cre_Docs_and_Epenses
db.Documents.aggregate([ { $match: { Document_Type_Code: "BK" } }, { $group: { _id: "$Project_ID", count: { $sum: 1 } } } ])	cre_Docs_and_Epenses
db.Documents.aggregate([ { $match: { Document_Type_Code: 'BK' } }, { $group: { _id: "$Project_ID", count: { $sum: 1 } } } ])	cre_Docs_and_Epenses
db.Documents.aggregate([ { $group: { _id: "$Project_ID", count: { $sum: 1 } } } ])	cre_Docs_and_Epenses
db.Documents.aggregate([ { $group: { _id: "$Project_ID", count: { $sum: 1 } } } ])	cre_Docs_and_Epenses
db.Documents.aggregate([ { $group: { _id: "$Project_ID", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 } , { $project: { project_id: "$_id" } }])	cre_Docs_and_Epenses
db.Documents.aggregate([ { $group: { _id: "$Project_ID", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { project_id: "$_id" } } ])	cre_Docs_and_Epenses
db.Documents.aggregate([ { $group: { _id: "$Project_ID", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Project_ID: "$_id" } } ])	cre_Docs_and_Epenses
db.Documents.aggregate([ { $group: { _id: "$Project_ID", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Project_ID: "$_id" } } ])	cre_Docs_and_Epenses
db.Documents.aggregate([ { $group: { _id: "$Document_Type_Code", count: { $sum: 1 } } }, { $project: { Document_Type_Code: "$_id", count: 1 } } ])	cre_Docs_and_Epenses
db.Documents.aggregate([ { $group: { _id: "$Document_Type_Code", count: { $sum: 1 } } } ])	cre_Docs_and_Epenses
db.Documents.aggregate([ { $group: { _id: "$Document_Type_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Document_Type_Code: "$_id" } } ])	cre_Docs_and_Epenses
db.Documents.aggregate([ { $group: { _id: "$Document_Type_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { document_type_code: "$_id" } } ])	cre_Docs_and_Epenses
db.Documents.aggregate([ { $group: { _id: "$Document_Type_Code", count: { $sum: 1 } } }, { $match: { count: { $lt: 3 } } }, { $project: { Document_Type_Code: "$_id" } } ])	cre_Docs_and_Epenses
db.Documents.aggregate([ { $group: { _id: "$Document_Type_Code", count: { $sum: 1 } } }, { $match: { count: { $lt: 3 } } }, { $project: { Document_Type_Code: "$_id" } } ])	cre_Docs_and_Epenses
db.Ref_Document_Types.aggregate([ { $project: { Document_Type_Code: 1, Document_Type_Name: 1, Document_Type_Description: 1 } } ])	cre_Docs_and_Epenses
db.Ref_Document_Types.find({}, { Document_Type_Code: 1, Document_Type_Name: 1, Document_Type_Description: 1})	cre_Docs_and_Epenses
db.Ref_Document_Types.findOne({Document_Type_Name: 'Film'}, {Document_Type_Description: 1})	cre_Docs_and_Epenses
db.Ref_Document_Types.findOne({Document_Type_Name: 'Film'}, {Document_Type_Description: 1})	cre_Docs_and_Epenses
db.Projects.find({}, { Project_ID: 1, Project_Details: 1 })	cre_Docs_and_Epenses
db.Projects.aggregate([ { $lookup: { from: "Documents", localField: "Project_ID", foreignField: "Project_ID", as: "documents" } }, { $match: { "documents.2": { $exists: true } } }, { $project: { Project_ID: 1, Project_Details: 1 } } ])	cre_Docs_and_Epenses
db.Projects.aggregate([ { $lookup: { from: "Documents", localField: "Project_ID", foreignField: "Project_ID", as: "documents" } }, { $match: { "documents.2": { $exists: true } } }, { $project: { Project_ID: 1, Project_Details: 1 } } ])	cre_Docs_and_Epenses
db.Projects.aggregate([ { $lookup: { from: "Documents", localField: "Project_ID", foreignField: "Project_ID", as: "documents" } }, { $match: { "documents.Document_Name": "King Book" } }, { $project: { Project_Details: 1 } } ])	cre_Docs_and_Epenses
db.Projects.aggregate([ { $lookup: { from: "Documents", localField: "Project_ID", foreignField: "Project_ID", as: "documents" } }, { $match: { "documents.Document_Name": "King Book" } }, { $project: { Project_Details: 1 } } ])	cre_Docs_and_Epenses
db.Ref_Budget_Codes.find({}, { Budget_Type_Code: 1, Budget_Type_Description: 1})	cre_Docs_and_Epenses
db.Ref_Budget_Codes.find({}, { Budget_Type_Code: 1, Budget_Type_Description: 1 })	cre_Docs_and_Epenses
db.Ref_Budget_Codes.findOne({ Budget_Type_Code: "ORG" }, { Budget_Type_Description: 1 })	cre_Docs_and_Epenses
db.Ref_Budget_Codes.find({ Budget_Type_Code: 'ORG' }, { Budget_Type_Description: 1 })	cre_Docs_and_Epenses
db.Documents_with_Expenses.find({ Budget_Type_Code: 'SF' }, { Document_ID: 1 })	cre_Docs_and_Epenses
db.Documents_with_Expenses.find({ Budget_Type_Code: 'SF' }, { Document_ID: 1 })	cre_Docs_and_Epenses
db.Documents_with_Expenses.aggregate([ { $lookup: { from: "Ref_Budget_Codes", localField: "Budget_Type_Code", foreignField: "Budget_Type_Code", as: "budget_info" } }, { $unwind: "$budget_info" }, { $project: { Budget_Type_Code: "$budget_info.Budget_Type_Code", Budget_Type_Description: "$budget_info.Budget_Type_Description", Document_ID: 1 } } ])	cre_Docs_and_Epenses
db.Documents_with_Expenses.aggregate([ { $lookup: { from: "Ref_Budget_Codes", localField: "Budget_Type_Code", foreignField: "Budget_Type_Code", as: "budget_info" } }, { $unwind: "$budget_info" }, { $match: { "budget_info.Budget_Type_Description": "Government" } }, { $project: { Document_ID: 1 } } ])	cre_Docs_and_Epenses
db.Documents_with_Expenses.aggregate([ { $lookup: { from: "Ref_Budget_Codes", localField: "Budget_Type_Code", foreignField: "Budget_Type_Code", as: "budget_info" } }, { $unwind: "$budget_info" }, { $match: { "budget_info.Budget_Type_Description": "Government" } }, { $project: { Document_ID: 1 } } ])	cre_Docs_and_Epenses
db.Documents_with_Expenses.aggregate([ { $group: { _id: "$Budget_Type_Code", count: { $sum: 1 } } }, { $project: { Budget_Type_Code: "$_id", count: 1 } } ])	cre_Docs_and_Epenses
db.Documents_with_Expenses.aggregate([ { $group: { _id: "$Budget_Type_Code", count: { $sum: 1 } } } ])	cre_Docs_and_Epenses
db.Documents_with_Expenses.aggregate([ { $group: { _id: "$Budget_Type_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	cre_Docs_and_Epenses
db.Documents_with_Expenses.aggregate([ { $group: { _id: "$Budget_Type_Code", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { budget_type_code: "$_id" } } ])	cre_Docs_and_Epenses
db.Documents.find( { "Document_ID": { "$nin": db.Documents_with_Expenses.distinct("Document_ID") } }, { "Document_ID": 1, "_id": 0 } )	cre_Docs_and_Epenses
db.Documents.aggregate([ { $lookup: { from: "Documents_with_Expenses", localField: "Document_ID", foreignField: "Document_ID", as: "expenses" } }, { $match: { "expenses": { $size: 0 } } }, { $project: { Document_ID: 1 } } ])	cre_Docs_and_Epenses
db.Documents.aggregate([ { $lookup: { from: "Documents_with_Expenses", localField: "Document_ID", foreignField: "Document_ID", as: "expenses" } }, { $match: { "Document_Type_Code": "CV", "expenses": { $size: 0 } } }, { $project: { "_id": 0, "Document_ID": 1 } } ])	cre_Docs_and_Epenses
db.Documents.aggregate([ { $lookup: { from: "Documents_with_Expenses", localField: "Document_ID", foreignField: "Document_ID", as: "expenses" } }, { $match: { "Document_Type_Code": "CV", "expenses": { $size: 0 } } }, { $project: { "_id": 0, "Document_ID": 1 } } ])	cre_Docs_and_Epenses
db.Documents.aggregate([ { $lookup: { from: "Documents_with_Expenses", localField: "Document_ID", foreignField: "Document_ID", as: "expenses" } }, { $match: { $and: [ { "Document_Name": { $regex: "s", $options: "i" } }, { "expenses": { $ne: [] } } ] } }, { $project: { Document_ID: 1 } } ])	cre_Docs_and_Epenses
db.Documents.aggregate([ { $lookup: { from: "Documents_with_Expenses", localField: "Document_ID", foreignField: "Document_ID", as: "expenses" } }, { $match: { "Document_Name": { $regex: /s/, $options: 'i' }, "expenses": { $ne: [] } } }, { $project: { "_id": 0, "Document_ID": 1 } } ])	cre_Docs_and_Epenses
db.Documents.aggregate([ { $lookup: { from: "Documents_with_Expenses", localField: "Document_ID", foreignField: "Document_ID", as: "Expenses" } }, { $match: { "Expenses": { $size: 0 } } }, { $count: "DocumentsWithoutExpenses" } ])	cre_Docs_and_Epenses
db.Documents.aggregate([ { $lookup: { from: "Documents_with_Expenses", localField: "Document_ID", foreignField: "Document_ID", as: "Expenses" } }, { $match: { "Expenses": { $size: 0 } } }, { $count: "NoExpenseDocumentCount" } ])	cre_Docs_and_Epenses
db.Projects.aggregate([ { $group: { _id: null, totalHours: { $sum: "$Hours" } } }, { $project: { totalHours: 1 } } ])	scientist_1
db.AssignedTo.aggregate([ { $group: { _id: "$Scientist" } }, { $count: "distinct_scientists" } ])	scientist_1
db.Projects.aggregate([ { $group: { _id: null, averageHours: { $avg: "$Hours" } } }, { $project: { averageHours: 1 } } ])	scientist_1
db.Projects.aggregate([ { $group: { _id: null, averageHours: { $avg: "$Hours" } } }, { $project: { averageHours: 1 } } ])	scientist_1
db.Projects.find({}, { Name: 1}).sort({Hours: -1}).limit(1)	scientist_1
db.Projects.find({}, { Name: 1}).sort({Hours: -1}).limit(1)	scientist_1
db.Projects.aggregate([ { $group: { _id: null, averageHours: { $avg: "$Hours" } } }, { $project: { averageHours: 1 } }, { $lookup: { from: "Projects", let: { averageHours: "$averageHours" }, pipeline: [ { $match: { $expr: { $gt: ["$Hours", "$$averageHours"] } } }, { $project: { Name: 1 } } ], as: "projects" } }, { $unwind: "$projects" }, { $replaceRoot: { newRoot: "$projects" } } ])	scientist_1
db.Projects.aggregate([ { $group: { _id: null, averageHours: { $avg: "$Hours" }}}, { $lookup: { from: "Projects", let: { averageHours: "$averageHours" }, pipeline: [ { $match: { $expr: { $gt: [ "$Hours", "$$averageHours" ]} }}, { $project: { Name: 1 }} ], as: "projects_above_average" }}, { $unwind: "$projects_above_average" }, { $replaceRoot: { newRoot: "$projects_above_average" }} ])	scientist_1
db.AssignedTo.aggregate([ { $group: { _id: "$Project", scientistCount: { $sum: 1 } } }, { $sort: { scientistCount: -1 } }, { $limit: 1 }, { $lookup: { from: "Projects", localField: "_id", foreignField: "Code", as: "projectDetails" } }, { $unwind: "$projectDetails" }, { $project: { name: "$projectDetails.Name", hours: "$projectDetails.Hours" } } ])	scientist_1
db.AssignedTo.aggregate([ { $group: { _id: "$Project", scientistCount: { $sum: 1 } } }, { $sort: { scientistCount: -1 } }, { $limit: 1 }, { $lookup: { from: "Projects", localField: "_id", foreignField: "Code", as: "projectDetails" }}, { $unwind: "$projectDetails" }, { $project: { name: "$projectDetails.Name", hours: "$projectDetails.Hours" } } ])	scientist_1
db.AssignedTo.aggregate([ { $lookup: { from: "Projects", localField: "Project", foreignField: "Code", as: "ProjectDetails" } }, { $lookup: { from: "Scientists", localField: "Scientist", foreignField: "SSN", as: "ScientistDetails" } }, { $match: { $or: [ { "ScientistDetails.Name": "Michael Rogers" }, { "ScientistDetails.Name": "Carol Smith" } ] } }, { $unwind: "$ProjectDetails" }, { $group: { _id: null, totalHours: { $sum: "$ProjectDetails.Hours" } } }, { $project: { totalHours: 1 } } ])	scientist_1
db.Scientists.find({}, { Name: 1 }).sort({ Name: 1 })	scientist_1
db.AssignedTo.aggregate([ { $lookup: { from: "Projects", localField: "Project", foreignField: "Code", as: "ProjectDetails" } }, { $unwind: "$ProjectDetails" }, { $group: { _id: "$ProjectDetails.Name", NumberOfScientists: { $sum: 1 } } }, { $project: { ProjectName: "$_id", NumberOfScientists: 1 } } ])	scientist_1
db.Projects.aggregate([ { $match: { Hours: { $gt: 300 } } }, { $lookup: { from: "AssignedTo", localField: "Code", foreignField: "Project", as: "ScientistsAssigned" } }, { $unwind: "$ScientistsAssigned" }, { $group: { _id: "$Name", NumOfScientists: { $sum: 1 } } }, { $project: { ProjectName: "$_id", NumOfScientists: 1 } } ])	scientist_1
db.Scientists.aggregate([ { $lookup: { from: "AssignedTo", localField: "SSN", foreignField: "Scientist", as: "ProjectsAssigned" } }, { $project: { Name: 1, NumberOfProjects: { $size: "$ProjectsAssigned" } } } ])	scientist_1
db.Scientists.aggregate([ { $lookup: { from: "AssignedTo", localField: "SSN", foreignField: "Scientist", as: "projectsAssigned" } }, { $project: { Name: 1, NumberOfProjects: { $size: "$projectsAssigned" } } } ])	scientist_1
db.AssignedTo.aggregate([ { $lookup: { from: "Scientists", localField: "Scientist", foreignField: "SSN", as: "ScientistDetails" } }, { $unwind: "$ScientistDetails" }, { $project: { "ScientistDetails.Name": 1 } }, { $group: { _id: "$ScientistDetails.Name" } }, { $project: { Name: "$_id" } } ])	scientist_1
db.AssignedTo.aggregate([ { $lookup: { from: "Scientists", localField: "Scientist", foreignField: "SSN", as: "ScientistDetails" } }, { $unwind: "$ScientistDetails" }, { $group: { _id: "$ScientistDetails.Name" } }, { $project: { Name: "$_id" } } ])	scientist_1
db.Projects.find({Code: {$nin: db.AssignedTo.distinct("Project")}}, {Name: 1})	scientist_1
db.Projects.find( { Code: { $nin: db.AssignedTo.distinct("Project") } }, { Name: 1 } )	scientist_1
db.Scientists.aggregate([ { $lookup: { from: "AssignedTo", localField: "SSN", foreignField: "Scientist", as: "Assignments" } }, { $lookup: { from: "Projects", localField: "Assignments.Project", foreignField: "Code", as: "AssignedProjects" } }, { $addFields: { maxHours: { $max: "$AssignedProjects.Hours" } } }, { $lookup: { from: "Projects", pipeline: [ { $group: { _id: null, maxHours: { $max: "$Hours" } } } ], as: "MaxProjectHours" } }, { $match: { $expr: { $ne: ["$maxHours", { $arrayElemAt: ["$MaxProjectHours.maxHours", 0] }] } } }, { $project: { Name: 1 } } ])	scientist_1
db.Scientists.aggregate([ { $lookup: { from: "AssignedTo", localField: "SSN", foreignField: "Scientist", as: "assigned_projects" } }, { $unwind: "$assigned_projects" }, { $lookup: { from: "Projects", localField: "assigned_projects.Project", foreignField: "Code", as: "project_details" } }, { $unwind: "$project_details" }, { $project: { Name: 1, ProjectName: "$project_details.Name", Hours: "$project_details.Hours" } }, { $sort: { ProjectName: 1, Name: 1 } } ])	scientist_1
db.Scientists.aggregate([ { $lookup: { from: "AssignedTo", localField: "SSN", foreignField: "Scientist", as: "assigned_projects" } }, { $unwind: "$assigned_projects" }, { $lookup: { from: "Projects", localField: "assigned_projects.Project", foreignField: "Code", as: "project_details" } }, { $unwind: "$project_details" }, { $project: { Name: 1, ProjectName: "$project_details.Name", Hours: "$project_details.Hours" } }, { $sort: { ProjectName: 1, Name: 1 } } ])	scientist_1
db.appellations.aggregate([ { $match: { County: "Sonoma" } }, { $lookup: { from: "wine", localField: "Appelation", foreignField: "Appelation", as: "wines" } }, { $unwind: "$wines" }, { $group: { _id: null, averagePrice: { $avg: "$wines.Price" } } }, { $project: { averagePrice: 1 } } ])	wine_1
db.appellations.aggregate([ { $match: { County: "Sonoma" } }, { $lookup: { from: "wine", localField: "Appelation", foreignField: "Appelation", as: "wines" } }, { $unwind: "$wines" }, { $group: { _id: null, averagePrice: { $avg: "$wines.Price" } } } , { $project: { averagePrice: 1 } }])	wine_1
db.wine.aggregate([ { $lookup: { from: "appellations", localField: "Appelation", foreignField: "Appelation", as: "appellation_info" } }, { $unwind: "$appellation_info" }, { $match: { "appellation_info.Area": "Central Coast", "Year": { $lt: 2005 } } }, { $group: { _id: null, maxPrice: { $max: "$Price" } } }, { $project: { maxPrice: 1 } } ])	wine_1
db.wine.aggregate([ { $lookup: { from: "appellations", localField: "Appelation", foreignField: "Appelation", as: "appellation_info" } }, { $unwind: "$appellation_info" }, { $match: { "appellation_info.Area": "Central Coast", "Year": { $lt: 2005 } } }, { $group: { _id: null, maxPrice: { $max: "$Price" } } }, { $project: { maxPrice: 1 } } ])	wine_1
db.grapes.aggregate([ { $match: { Color: 'White' } }, { $lookup: { from: "wine", localField: "Grape", foreignField: "Grape", as: "HighScoreWines" } }, { $unwind: "$HighScoreWines" }, { $match: { "HighScoreWines.Score": { $gt: 90 } } }, { $group: { _id: "$Grape" } }, { $project: { Grape: "$_id" } } ])	wine_1
db.grapes.aggregate([ { $match: { Color: "White" } }, { $lookup: { from: "wine", localField: "Grape", foreignField: "Grape", as: "wine_data" } }, { $unwind: "$wine_data" }, { $match: { "wine_data.Score": { $gt: 90 } } }, { $group: { _id: "$Grape" } } ])	wine_1
db.appellations.aggregate([ { $match: { County: "Monterey" } }, { $lookup: { from: "wine", localField: "Appelation", foreignField: "Appelation", as: "wines" } }, { $unwind: "$wines" }, { $match: { "wines.Price": { $lt: 50 } } }, { $project: { Name: "$wines.Name" } } ])	wine_1
db.appellations.aggregate([ { $match: { County: "Monterey" } }, { $lookup: { from: "wine", localField: "Appelation", foreignField: "Appelation", as: "wines" } }, { $unwind: "$wines" }, { $match: { "wines.Price": { $lt: 50 } } }, { $project: { Name: "$wines.Name" } } ])	wine_1
db.wine.aggregate([ { $group: { _id: "$Grape", count: { $sum: 1 } } } ])	wine_1
db.wine.aggregate([ { $group: { _id: "$Grape", count: { $sum: 1 } } } ])	wine_1
db.wine.aggregate([ { $group: { _id: "$Year", averagePrice: { $avg: "$Price" } } } ])	wine_1
db.wine.aggregate([ { $group: { _id: "$Year", averagePrice: { $avg: "$Price" } } } ])	wine_1
db.appellations.aggregate([ { $lookup: { from: "wine", localField: "Appelation", foreignField: "Appelation", as: "wine_data" } }, { $unwind: "$wine_data" }, { $match: { "wine_data.Year": { $lt: 2010 } } }, { $group: { _id: "$Appelation", count: { $sum: 1 }, Area: { $first: "$Area" } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Area: 1 } } ])	wine_1
db.appellations.aggregate([ { $lookup: { from: "wine", localField: "Appelation", foreignField: "Appelation", as: "wine_data" } }, { $unwind: "$wine_data" }, { $match: { "wine_data.Year": { $lt: 2010 } } }, { $group: { _id: "$Appelation", count: { $sum: 1 }, area: { $first: "$Area" } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Area: "$area" } } ])	wine_1
db.wine.aggregate([ { $lookup: { from: "grapes", localField: "Grape", foreignField: "Grape", as: "grape_info" } }, { $unwind: "$grape_info" }, { $group: { _id: "$Grape", avgPrice: { $avg: "$Price" }, color: { $first: "$grape_info.Color" } } }, { $sort: { avgPrice: -1 } }, { $limit: 1 }, { $project: { color: 1 } } ])	wine_1
db.wine.aggregate([ { $lookup: { from: "grapes", localField: "Grape", foreignField: "Grape", as: "grape_info" } }, { $unwind: "$grape_info" }, { $group: { _id: "$Grape", avgPrice: { $avg: "$Price" }, color: { $first: "$grape_info.Color" } } }, { $sort: { avgPrice: -1 } }, { $limit: 1 }, { $project: { color: 1 } } ])	wine_1
db.wine.aggregate([ { $match: { Year: 2009, Grape: 'Zinfandel' } }, { $group: { _id: null, AveragePrice: { $avg: "$Price" }, AverageCases: { $avg: "$Cases" } } }, { $project: { AveragePrice: 1, AverageCases: 1 } } ])	wine_1
db.wine.aggregate([ { $match: { Year: 2009, Grape: "Zinfandel" } }, { $group: { _id: null, AveragePrice: { $avg: "$Price" }, AverageCases: { $avg: "$Cases" } } }, { $project: { AveragePrice: 1, AverageCases: 1 } } ])	wine_1
db.wine.aggregate([ { $match: { Appelation: "St. Helena" } }, { $group: { _id: null, maxPrice: { $max: "$Price" }, maxScore: { $max: "$Score" } } }, { $project: { maxPrice: 1, maxScore: 1 } } ])	wine_1
db.wine.aggregate([ { $match: { Appelation: "St. Helena" } }, { $group: { _id: null, maxPrice: { $max: "$Price" }, maxScore: { $max: "$Score" } } }, { $project: { maxPrice: 1, maxScore: 1 } } ])	wine_1
db.wine.aggregate([ { $group: { _id: "$Year", maxPrice: { $max: "$Price" }, maxScore: { $max: "$Score" } } }, { $project: { Year: "$_id", maxPrice: 1, maxScore: 1 } } ])	wine_1
db.wine.aggregate([ { $group: { _id: "$Year", MaxPrice: { $max: "$Price" }, MaxScore: { $max: "$Score" } } }, { $project: { Year: "$_id", MaxPrice: 1, MaxScore: 1 } } ])	wine_1
db.wine.aggregate([ { $group: { _id: { year: "$Year" }, maxPrice: { $max: "$Price" } } }, { $match: { "_id.year": 2006 } }, { $lookup: { from: "wine", let: { yearMaxPrice: "$maxPrice" }, pipeline: [ { $match: { $expr: { $gt: ["$Price", "$$yearMaxPrice"] } } }, { $project: { Name: 1 } } ], as: "expensiveWines" } }, { $unwind: "$expensiveWines" }, { $replaceRoot: { newRoot: "$expensiveWines" } } ])	wine_1
db.wine.aggregate([ { $match: { Year: 2006 } }, { $group: { _id: null, maxPrice: { $max: "$Price" } } }, { $lookup: { from: "wine", let: { maxPrice: "$maxPrice" }, pipeline: [ { $match: { $expr: { $gt: ["$Price", "$$maxPrice"] } } }, { $project: { Name: 1 } } ], as: "wines_above_max_price" } }, { $unwind: "$wines_above_max_price" }, { $replaceRoot: { newRoot: "$wines_above_max_price" } } ])	wine_1
db.wine.aggregate([ { $lookup: { from: "grapes", localField: "Grape", foreignField: "Grape", as: "grape_info" } }, { $match: { "grape_info.Color": "White" } }, { $group: { _id: "$Winery", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 3 } , { $project: { winery: "$_id" } }])	wine_1
db.wine.aggregate([ { $lookup: { from: "grapes", localField: "Grape", foreignField: "Grape", as: "grape_info" } }, { $match: { "grape_info.Color": "White" } }, { $group: { _id: "$Winery", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 3 } , { $project: { winery: "$_id" } }])	wine_1
db.wine.aggregate([ { $match: { Year: { $gt: 2008 } } }, { $lookup: { from: "appellations", localField: "Appelation", foreignField: "Appelation", as: "appellation_info" } }, { $match: { "appellation_info.Area": { $ne: "Central Coast" } } }, { $group: { _id: "$Appelation" } }, { $project: { Appelation: "$_id" } } ])	wine_1
db.wine.aggregate([ { $match: { Year: { $gt: 2008 } } }, { $lookup: { from: 'appellations', localField: 'Appelation', foreignField: 'Appelation', as: 'appellation_info' } }, { $unwind: '$appellation_info' }, { $match: { 'appellation_info.Area': { $ne: 'Central Coast' } } }, { $group: { _id: '$Appelation' } }, { $project: { Appelation: '$_id' } } ])	wine_1
db.wine.aggregate([ { $lookup: { from: "appellations", localField: "Appelation", foreignField: "Appelation", as: "appellation_info" } }, { $match: { "appellation_info.County": { $ne: "Sonoma" } } }, { $group: { _id: null, averagePrice: { $avg: "$Price" } } } , { $project: { averagePrice:1 } }])	wine_1
db.wine.aggregate([ { $lookup: { from: "appellations", localField: "Appelation", foreignField: "Appelation", as: "appellation_info" } }, { $match: { "appellation_info.County": { $ne: "Sonoma" } } }, { $group: { _id: null, averagePrice: { $avg: "$Price" } } }, { $project: { averagePrice: 1 } } ])	wine_1
db.appellations.aggregate([ { $lookup: { from: "wine", localField: "Appelation", foreignField: "Appelation", as: "wine_data" } }, { $unwind: "$wine_data" }, { $match: { "wine_data.Score": { $gt: 90 } } }, { $group: { _id: "$County", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { country: "$_id" } } ])	wine_1
db.appellations.aggregate([ { $lookup: { from: "wine", localField: "Appelation", foreignField: "Appelation", as: "wine_data" } }, { $unwind: "$wine_data" }, { $match: { "wine_data.Score": { $gt: 90 } } }, { $group: { _id: "$County", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { country: "$_id" } }])	wine_1
db.station.find({}, { Name: 1, Location: 1, Number_of_Platforms: 1 })	train_station
db.station.find( { Location: { $ne: 'London' } }, { Name: 1, Total_Passengers: 1 } )	train_station
db.station.aggregate([ { $group: { _id: "$Location", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Location: "$_id" } } ])	train_station
db.train.find({}, { Name: 1, Time: 1, Service: 1 })	train_station
db.train.find({}, { Name: 1, Service: 1 }).sort({ Time: 1 })	train_station
db.train_station.aggregate([ { $lookup: { from: "station", localField: "Station_ID", foreignField: "Station_ID", as: "station_info" } }, { $unwind: "$station_info" }, { $group: { _id: "$Station_ID", name: { $first: "$station_info.Name" }, count: { $sum: 1 } } }, { $project: { name: 1, count: 1 } } ])	train_station
db.train_station.aggregate([ { $lookup: { from: "station", localField: "Station_ID", foreignField: "Station_ID", as: "station_info" } }, { $unwind: "$station_info" }, { $lookup: { from: "train", localField: "Train_ID", foreignField: "Train_ID", as: "train_info" } }, { $unwind: "$train_info" }, { $project: { train_name: "$train_info.Name", station_name: "$station_info.Name" } } ])	train_station
db.train_station.aggregate([ { $lookup: { from: "station", localField: "Station_ID", foreignField: "Station_ID", as: "station_info" } }, { $unwind: "$station_info" }, { $match: { "station_info.Location": "London" } }, { $lookup: { from: "train", localField: "Train_ID", foreignField: "Train_ID", as: "train_info" } }, { $unwind: "$train_info" }, { $project: { "train_name": "$train_info.Name", "train_time": "$train_info.Time" } }, { $sort: { "train_time": -1 } } ])	train_station
db.train_station.aggregate([ { $lookup: { from: "station", localField: "Station_ID", foreignField: "Station_ID", as: "station_info" } }, { $unwind: "$station_info" }, { $group: { _id: "$Station_ID", count: { $sum: 1 }, name: { $first: "$station_info.Name" } } }, { $match: { count: { $gte: 2 } } }, { $project: { name: 1 } } ])	train_station
db.station.aggregate([ { $group: { _id: "$Location", count: { $sum: 1 } } }, { $match: { count: 1 } }, { $project: { Location: "$_id" } } ])	train_station
db.station.aggregate([ { $lookup: { from: "train_station", localField: "Station_ID", foreignField: "Station_ID", as: "train_info" } }, { $match: { train_info: { $size: 0 } } }, { $project: { Name: 1 } } ])	train_station
db.station.aggregate([ { $lookup: { from: "train_station", localField: "Station_ID", foreignField: "Station_ID", as: "train_station_info" } }, { $unwind: "$train_station_info" }, { $lookup: { from: "train", localField: "train_station_info.Train_ID", foreignField: "Train_ID", as: "train_info" } }, { $unwind: "$train_info" }, { $match: { "train_info.Name": { $in: ["Ananthapuri Express", "Guruvayur Express"] } } }, { $group: { _id: "$Name", trains: { $addToSet: "$train_info.Name" } } }, { $match: { "trains": { $all: ["Ananthapuri Express", "Guruvayur Express"] } } }, { $project: { Name: "$_id" } } ])	train_station
db.train.aggregate([ { $lookup: { from: "train_station", localField: "Train_ID", foreignField: "Train_ID", as: "train_station" } }, { $unwind: "$train_station" }, { $lookup: { from: "station", localField: "train_station.Station_ID", foreignField: "Station_ID", as: "station" } }, { $unwind: "$station" }, { $match: { "station.Location": { $ne: "London" } } }, { $group: { _id: "$Name" } } ])	train_station
db.station.find({}, { Name: 1, Location: 1}).sort({Annual_entry_exit: 1, Annual_interchanges: 1})	train_station
db.Vehicles.find({}, {vehicle_id: 1})	driving_school
db.Vehicles.find({}, { vehicle_id: 1})	driving_school
db.Vehicles.find({vehicle_id: 1}, {vehicle_details: 1})	driving_school
db.Vehicles.find({vehicle_id: 1}, { vehicle_details: 1})	driving_school
db.Staff.find({}, {first_name: 1, middle_name: 1, last_name: 1})	driving_school
db.Staff.find({}, { first_name: 1, middle_name: 1, last_name: 1})	driving_school
db.Staff.find( { first_name: 'Janessa', last_name: 'Sawayn' }, { nickname: 1 } )	driving_school
db.Staff.find( { first_name: 'Janessa', last_name: 'Sawayn' }, { nickname: 1 } )	driving_school
db.Addresses.aggregate([ { $lookup: { from: "Staff", localField: "address_id", foreignField: "staff_address_id", as: "staff_info" } }, { $unwind: "$staff_info" }, { $match: { "staff_info.first_name": "Janessa", "staff_info.last_name": "Sawayn" } }, { $project: { city: 1 } } ])	driving_school
db.Addresses.aggregate([ { $lookup: { from: "Staff", localField: "address_id", foreignField: "staff_address_id", as: "staff_info" } }, { $unwind: "$staff_info" }, { $match: { "staff_info.first_name": "Janessa", "staff_info.last_name": "Sawayn" } }, { $project: { city: 1 } } ])	driving_school
db.Addresses.aggregate([ { $lookup: { from: "Staff", localField: "address_id", foreignField: "staff_address_id", as: "staff_info" } }, { $unwind: "$staff_info" }, { $match: { "staff_info.first_name": "Janessa", "staff_info.last_name": "Sawayn" } }, { $project: { country: 1, state_province_county: 1 } } ])	driving_school
db.Addresses.aggregate([ { $lookup: { from: "Staff", localField: "address_id", foreignField: "staff_address_id", as: "staff_info" } }, { $unwind: "$staff_info" }, { $match: { "staff_info.first_name": "Janessa", "staff_info.last_name": "Sawayn" } }, { $project: { country: 1, state_province_county: 1 } } ])	driving_school
db.Addresses.aggregate([ { $lookup: { from: "Staff", localField: "address_id", foreignField: "staff_address_id", as: "staff" } }, { $unwind: "$staff" }, { $match: { "staff.first_name": "Janessa", "staff.last_name": "Sawayn" } }, { $project: { zip_postcode: 1 } } ])	driving_school
db.Addresses.aggregate([ { $lookup: { from: "Staff", localField: "address_id", foreignField: "staff_address_id", as: "staff" } }, { $match: { "staff.first_name": "Janessa", "staff.last_name": "Sawayn" } }, { $project: { zip_postcode: 1 } } ])	driving_school
db.Addresses.aggregate([ { $match: { city: "Damianfort" } }, { $lookup: { from: "Staff", localField: "address_id", foreignField: "staff_address_id", as: "staff" } }, { $unwind: "$staff" }, { $project: { first_name: "$staff.first_name", last_name: "$staff.last_name" } } ])	driving_school
db.Addresses.aggregate([ { $match: { city: "Damianfort" } }, { $lookup: { from: "Staff", localField: "address_id", foreignField: "staff_address_id", as: "staff" } }, { $unwind: "$staff" }, { $project: { first_name: "$staff.first_name", last_name: "$staff.last_name" } } ])	driving_school
db.Addresses.aggregate([ { $lookup: { from: "Staff", localField: "address_id", foreignField: "staff_address_id", as: "staff" } }, { $unwind: "$staff" }, { $group: { _id: "$city", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	driving_school
db.Addresses.aggregate([ { $lookup: { from: "Staff", localField: "address_id", foreignField: "staff_address_id", as: "staff" } }, { $unwind: "$staff" }, { $group: { _id: "$city", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	driving_school
db.Customers.find({}, {first_name: 1, last_name: 1})	driving_school
db.Customers.find({}, {first_name: 1, last_name: 1})	driving_school
db.Customers.find({amount_outstanding: {$gt: 2000}}, {phone_number: 1, email_address: 1})	driving_school
db.Customers.find( {amount_outstanding: {$gt: 2000}}, {phone_number: 1, email_address: 1} )	driving_school
db.Customers.find( { $or: [ { first_name: 'Marina' }, { last_name: 'Kohler' } ] }, { customer_status_code: 1, cell_mobile_phone_number: 1, email_address: 1 } )	driving_school
db.Customers.find( { $or: [ {first_name: 'Marina'}, {last_name: 'Kohler'} ] }, { customer_status_code: 1, cell_mobile_phone_number: 1, email_address: 1 } )	driving_school
db.Customers.aggregate([ { $group: { _id: "$customer_status_code", count: { $sum: 1 } } }, { $project: { customer_status_code: "$_id", count: 1 } } ])	driving_school
db.Customers.aggregate([ { $group: { _id: "$customer_status_code", count: { $sum: 1 } } } ])	driving_school
db.Customers.aggregate([ { $group: { _id: "$customer_status_code", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { customer_status_code: "$_id" } } ])	driving_school
db.Customers.aggregate([ { $group: { _id: "$customer_status_code", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { customer_status_code: "$_id" } } ])	driving_school
db.Lessons.aggregate([ { $lookup: { from: "Customers", localField: "customer_id", foreignField: "customer_id", as: "customer_info" } }, { $unwind: "$customer_info" }, { $match: { "customer_info.first_name": "Rylan", "customer_info.last_name": "Goodwin", "lesson_status_code": "Completed" } }, { $count: "completed_lessons" } ])	driving_school
db.Customers.aggregate([ { $group: { _id: null, max_amount_outstanding: { $max: "$amount_outstanding" }, min_amount_outstanding: { $min: "$amount_outstanding" }, avg_amount_outstanding: { $avg: "$amount_outstanding" } } } , { $project: { max_amount_outstanding: 1, min_amount_outstanding:1, avg_amount_outstanding:1} }])	driving_school
db.Customers.aggregate([ { $group: { _id: null, max_amount_outstanding: { $max: "$amount_outstanding" }, min_amount_outstanding: { $min: "$amount_outstanding" }, avg_amount_outstanding: { $avg: "$amount_outstanding" } } } , { $project: { max_amount_outstanding: 1, min_amount_outstanding:1, avg_amount_outstanding:1} }])	driving_school
db.Customers.find( {amount_outstanding: {$gte: 1000, $lte: 3000}}, {first_name: 1, last_name: 1} )	driving_school
db.Customers.find( {amount_outstanding: {$gte: 1000, $lte: 3000}}, {first_name: 1, last_name: 1} )	driving_school
db.Customers.aggregate([ { $lookup: { from: "Addresses", localField: "customer_address_id", foreignField: "address_id", as: "address_info" } }, { $match: { "address_info.city": "Lockmanfurt" } }, { $project: { first_name: 1, last_name: 1 } } ])	driving_school
db.Customers.aggregate([ { $lookup: { from: "Addresses", localField: "customer_address_id", foreignField: "address_id", as: "address_info" } }, { $match: { "address_info.city": "Lockmanfurt" } }, { $project: { first_name: 1, last_name: 1 } } ])	driving_school
db.Customers.aggregate([ { $match: { first_name: "Carole", last_name: "Bernhard" } }, { $lookup: { from: "Addresses", localField: "customer_address_id", foreignField: "address_id", as: "address_info" } }, { $unwind: "$address_info" }, { $project: { country: "$address_info.country" } } ])	driving_school
db.Customers.aggregate([ { $match: { first_name: "Carole", last_name: "Bernhard" } }, { $lookup: { from: "Addresses", localField: "customer_address_id", foreignField: "address_id", as: "address_info" } }, { $unwind: "$address_info" }, { $project: { zip_postcode: "$address_info.zip_postcode" } } ])	driving_school
db.Customers.aggregate([ { $match: { first_name: "Carole", last_name: "Bernhard" } }, { $lookup: { from: "Addresses", localField: "customer_address_id", foreignField: "address_id", as: "address_info" } }, { $unwind: "$address_info" }, { $project: { zip_postcode: "$address_info.zip_postcode" } } ])	driving_school
db.Customers.aggregate([ { $lookup: { from: "Addresses", localField: "customer_address_id", foreignField: "address_id", as: "address_info" } }, { $unwind: "$address_info" }, { $group: { _id: "$address_info.city", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { city: "$_id" } } ])	driving_school
db.Customers.aggregate([ { $lookup: { from: "Addresses", localField: "customer_address_id", foreignField: "address_id", as: "address_info" } }, { $unwind: "$address_info" }, { $group: { _id: "$address_info.city", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { city: "$_id" } } ])	driving_school
db.Customer_Payments.aggregate([ { $lookup: { from: "Customers", localField: "customer_id", foreignField: "customer_id", as: "customer_info" } }, { $unwind: "$customer_info" }, { $match: { "customer_info.first_name": "Carole", "customer_info.last_name": "Bernhard" } }, { $group: { _id: null, total_amount: { $sum: "$amount_payment" } } }, { $project: { total_amount: 1 } } ])	driving_school
db.Customers.aggregate([ { $match: { first_name: "Carole", last_name: "Bernhard" } }, { $lookup: { from: "Customer_Payments", localField: "customer_id", foreignField: "customer_id", as: "payments" } }, { $project: { totalAmount: { $sum: "$payments.amount_payment" } } } ])	driving_school
db.Customers.aggregate([ { $lookup: { from: "Customer_Payments", localField: "customer_id", foreignField: "customer_id", as: "payments" } }, { $match: { "payments": { $size: 0 } } }, { $count: "noPaymentCustomers" } ])	driving_school
db.Customers.aggregate([ { $lookup: { from: "Customer_Payments", localField: "customer_id", foreignField: "customer_id", as: "payments" } }, { $match: { payments: { $size: 0 } } }, { $count: "no_payment_customers" } ])	driving_school
db.Customer_Payments.aggregate([ { $group: { _id: "$customer_id", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $lookup: { from: "Customers", localField: "_id", foreignField: "customer_id", as: "customer" } }, { $unwind: "$customer" }, { $project: { first_name: "$customer.first_name", last_name: "$customer.last_name" } } ])	driving_school
db.Customer_Payments.aggregate([ { $group: { _id: "$customer_id", count: { $sum: 1 } } }, { $match: { count: { $gt: 2 } } }, { $lookup: { from: "Customers", localField: "_id", foreignField: "customer_id", as: "customer" } }, { $unwind: "$customer" }, { $project: { first_name: "$customer.first_name", last_name: "$customer.last_name" } } ])	driving_school
db.Customer_Payments.aggregate([ { $group: { _id: "$payment_method_code", count: { $sum: 1 } } } ])	driving_school
db.Customer_Payments.aggregate([ { $group: { _id: "$payment_method_code", count: { $sum: 1 } } } ])	driving_school
db.Lessons.aggregate([ { $lookup: { from: "Staff", localField: "staff_id", foreignField: "staff_id", as: "staff_info" } }, { $unwind: "$staff_info" }, { $match: { "staff_info.first_name": "Janessa", "staff_info.last_name": "Sawayn", "staff_info.nickname": { $regex: /s/, $options: "i" } } }, { $project: { lesson_id: 1 } } ])	driving_school
db.Lessons.aggregate([ { $lookup: { from: "Staff", localField: "staff_id", foreignField: "staff_id", as: "staff_info" } }, { $match: { "staff_info.first_name": "Janessa", "staff_info.last_name": "Sawayn", "staff_info.nickname": { $regex: /s/ } } }, { $project: { lesson_id: 1 } } ])	driving_school
db.Lessons.aggregate([ { $lookup: { from: "Staff", localField: "staff_id", foreignField: "staff_id", as: "staff_info" } }, { $unwind: "$staff_info" }, { $match: { "staff_info.first_name": { $regex: /a/, $options: "i" } } }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1 } } ])	driving_school
db.Lessons.aggregate([ { $lookup: { from: "Staff", localField: "staff_id", foreignField: "staff_id", as: "staff_info" } }, { $unwind: "$staff_info" }, { $match: { "staff_info.first_name": { $regex: /a/, $options: "i" } } }, { $group: { _id: null, count: { $sum: 1 } } } , { $project: { count: 1 } } ])	driving_school
db.Lessons.aggregate([ { $lookup: { from: "Staff", localField: "staff_id", foreignField: "staff_id", as: "staff_info" } }, { $match: { "staff_info.first_name": "Janessa", "staff_info.last_name": "Sawayn" } }, { $group: { _id: null, averagePrice: { $avg: "$price" } } }, { $project: { averagePrice: 1 } } ])	driving_school
db.Lessons.aggregate([ { $lookup: { from: "Staff", localField: "staff_id", foreignField: "staff_id", as: "staff_info" } }, { $unwind: "$staff_info" }, { $match: { "staff_info.first_name": "Janessa", "staff_info.last_name": "Sawayn" } }, { $group: { _id: null, averagePrice: { $avg: "$price" } } }, { $project: { averagePrice: 1 } } ])	driving_school
db.Lessons.aggregate([ { $lookup: { from: "Customers", localField: "customer_id", foreignField: "customer_id", as: "customer_info" } }, { $match: { "customer_info.first_name": "Ray" } }, { $group: { _id: null, count: { $sum: 1 } } } , { $project: { count: 1 } } ])	driving_school
db.Lessons.aggregate([ { $lookup: { from: "Customers", localField: "customer_id", foreignField: "customer_id", as: "customer_info" } }, { $match: { "customer_info.first_name": "Ray" } }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1 } } ])	driving_school
db.Customers.aggregate([ { $lookup: { from: "Staff", localField: "last_name", foreignField: "last_name", as: "staff_matches" } }, { $match: { "staff_matches.0": { $exists: true } } }, { $project: { last_name: 1 } } ])	driving_school
db.Customers.aggregate([ { $lookup: { from: "Staff", localField: "last_name", foreignField: "last_name", as: "shared_last_names" } }, { $match: { "shared_last_names": { $ne: [] } } }, { $group: { _id: "$last_name" } }, { $project: { last_name: "$_id" } } ])	driving_school
db.Staff.aggregate([ { $lookup: { from: "Lessons", localField: "staff_id", foreignField: "staff_id", as: "lessons" } }, { $match: { "lessons": { $size: 0 } } }, { $project: { first_name: 1 } } ])	driving_school
db.Staff.aggregate([ { $lookup: { from: "Lessons", localField: "staff_id", foreignField: "staff_id", as: "lessons" } }, { $match: { "lessons": { $size: 0 } } }, { $project: { first_name: 1 } } ])	driving_school
db.Lessons.aggregate([ { $group: { _id: "$vehicle_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Vehicles", localField: "_id", foreignField: "vehicle_id", as: "vehicleDetails" } }, { $project: { vehicle_id: "$_id", vehicle_details: { $arrayElemAt: ["$vehicleDetails.vehicle_details", 0] } } } ])	driving_school
db.Faculty.find({ Sex: 'F' }, { Fname: 1, Lname: 1, Phone: 1 })	activity_1
db.Faculty.find({ Sex: 'F' }, { Fname: 1, Lname: 1, Phone: 1 })	activity_1
db.Faculty.find({Fname: "Jerry", Lname: "Prince"}, {Phone: 1, Room: 1, Building: 1})	activity_1
db.Faculty.find( { Fname: 'Jerry', Lname: 'Prince' }, { Phone: 1, Room: 1, Building: 1 } )	activity_1
db.Faculty.find({ Rank: 'Instructor' }, { Fname: 1, Lname: 1 })	activity_1
db.Faculty.find({Rank: 'Instructor'}, {Fname: 1, Lname: 1})	activity_1
db.Faculty.aggregate([ { $group: { _id: "$Building", count: { $sum: 1 } } }, { $project: { building: "$_id", count: 1 } } ])	activity_1
db.Faculty.aggregate([ { $group: { _id: "$Building", count: { $sum: 1 } } }, { $project: { Building: "$_id", count: 1 } } ])	activity_1
db.Faculty.aggregate([ { $group: { _id: "$Building", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	activity_1
db.Faculty.aggregate([ { $match: { Rank: 'Professor' } }, { $group: { _id: '$Building', count: { $sum: 1 } } }, { $match: { count: { $gte: 10 } } }, { $project: { Building: '$_id' } } ])	activity_1
db.Faculty.aggregate([ { $match: { Rank: "Professor" } }, { $group: { _id: "$Building", count: { $sum: 1 } } }, { $match: { count: { $gte: 10 } } }, { $project: { building: "$_id" } } ])	activity_1
db.Faculty.aggregate([ { $group: { _id: "$Rank", count: { $sum: 1 } } }, { $project: { rank: "$_id", count: 1 } } ])	activity_1
db.Faculty.aggregate([ { $group: { _id: "$Rank", count: { $sum: 1 } } } ])	activity_1
db.Faculty.aggregate([ { $group: { _id: { rank: "$Rank", sex: "$Sex" }, count: { $sum: 1 } } }, { $project: { rank: "$_id.rank", sex: "$_id.sex", count: 1 } } ])	activity_1
db.Faculty.aggregate([ { $group: { _id: { rank: "$Rank", sex: "$Sex" }, count: { $sum: 1 } } }, { $project: { rank: "$_id.rank", sex: "$_id.sex", count: 1 } } ])	activity_1
db.Faculty.aggregate([ { $group: { _id: "$Rank", count: { $sum: 1 } } }, { $sort: { count: 1 } }, { $limit: 1 }, { $project: { rank: "$_id" } } ])	activity_1
db.Faculty.aggregate([ { $match: { Rank: 'AsstProf' } }, { $group: { _id: '$Sex', count: { $sum: 1 } } } ])	activity_1
db.Faculty.aggregate([ { $match: { Rank: 'AsstProf' } }, { $group: { _id: "$Sex", count: { $sum: 1 } } } ])	activity_1
db.Student.aggregate([ { $match: { Fname: 'Linda', LName: 'Smith' } }, { $lookup: { from: 'Faculty', localField: 'Advisor', foreignField: 'FacID', as: 'advisor_info' } }, { $unwind: '$advisor_info' }, { $project: { fname: '$advisor_info.Fname', lname: '$advisor_info.Lname' } } ])	activity_1
db.Student.aggregate([ { $lookup: { from: "Faculty", localField: "Advisor", foreignField: "FacID", as: "advisor_details" } }, { $match: { "advisor_details.Rank": "Professor" } }, { $project: { StuID: 1 } } ])	activity_1
db.Student.aggregate([ { $lookup: { from: "Faculty", localField: "Advisor", foreignField: "FacID", as: "FacultyAdvisor" } }, { $match: { "FacultyAdvisor.Rank": "Professor" } }, { $project: { StuID: 1 } } ])	activity_1
db.Student.aggregate([ { $group: { _id: "$Advisor", NumberOfStudents: { $sum: 1 } } }, { $project: { FacID: "$_id", NumberOfStudents: 1 } } ])	activity_1
db.Student.aggregate([ { $group: { _id: "$Advisor", NumberOfStudents: { $sum: 1 } } }, { $project: { FacID: "$_id", NumberOfStudents: 1 } } ])	activity_1
db.Faculty.aggregate([ { $lookup: { from: "Student", localField: "FacID", foreignField: "Advisor", as: "AdvisedStudents" } }, { $project: { Fname: 1, Lname: 1, studentCount: { $size: "$AdvisedStudents" } } }, { $sort: { studentCount: -1 } }, { $limit: 1 }, { $project: { Lname: 1, Fname: 1 } } ])	activity_1
db.Student.aggregate([ { $group: { _id: "$Advisor", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $lookup: { from: "Faculty", localField: "_id", foreignField: "FacID", as: "faculty" } }, { $unwind: "$faculty" }, { $project: { fname: "$faculty.Fname", lname: "$faculty.Lname" } } ])	activity_1
db.Student.aggregate([ { $group: { _id: "$Advisor", studentCount: { $sum: 1 } } }, { $match: { studentCount: { $gte: 2 } } }, { $project: { FacID: "$_id" } } ])	activity_1
db.Student.aggregate([ { $group: { _id: "$Advisor", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { FacID: "$_id" } } ])	activity_1
db.Activity.find({}, {activity_name: 1})	activity_1
db.Activity.find({}, {activity_name: 1})	activity_1
db.Faculty_Participates_in.aggregate([ { $lookup: { from: "Student", localField: "FacID", foreignField: "Advisor", as: "AdvisingStudents" } }, { $match: { "AdvisingStudents": { $ne: [] } } }, { $group: { _id: "$FacID" } } ])	activity_1
db.Faculty_Participates_in.aggregate([ { $lookup: { from: "Student", localField: "FacID", foreignField: "Advisor", as: "Student_Advisor" } }, { $match: { "Student_Advisor": { $ne: [] } } }, { $group: { _id: "$FacID" } } ])	activity_1
db.Faculty.aggregate([ { $match: { Fname: "Mark", Lname: "Giuliano" } }, { $lookup: { from: "Faculty_Participates_in", localField: "FacID", foreignField: "FacID", as: "activities" } }, { $project: { activityCount: { $size: "$activities" } } } ])	activity_1
db.Faculty.aggregate([ { $match: { Fname: "Mark", Lname: "Giuliano" } }, { $lookup: { from: "Faculty_Participates_in", localField: "FacID", foreignField: "FacID", as: "FacultyActivities" }}, { $project: { NumberOfActivities: { $size: "$FacultyActivities" } } } ])	activity_1
db.Faculty.aggregate([ { $match: { Fname: 'Mark', Lname: 'Giuliano' } }, { $lookup: { from: 'Faculty_Participates_in', localField: 'FacID', foreignField: 'FacID', as: 'participations' } }, { $unwind: '$participations' }, { $lookup: { from: 'Activity', localField: 'participations.actid', foreignField: 'actid', as: 'activities' } }, { $unwind: '$activities' }, { $project: { activity_name: '$activities.activity_name' } } ])	activity_1
db.Faculty.aggregate([ { $match: { Fname: "Mark", Lname: "Giuliano" } }, { $lookup: { from: "Faculty_Participates_in", localField: "FacID", foreignField: "FacID", as: "activities" } }, { $unwind: "$activities" }, { $lookup: { from: "Activity", localField: "activities.actid", foreignField: "actid", as: "activityDetails" } }, { $unwind: "$activityDetails" }, { $project: { activity_name: "$activityDetails.activity_name" } } ])	activity_1
db.Activity.aggregate([ { $lookup: { from: "Faculty_Participates_in", localField: "actid", foreignField: "actid", as: "faculty_participation" } }, { $project: { activity_name: 1} }, { $sort: { faculty_count: -1 } }, { $limit: 1 }])	activity_1
db.Activity.aggregate([ { $lookup: { from: "Faculty_Participates_in", localField: "actid", foreignField: "actid", as: "faculty_participation" } }, { $project: { activity_name: 1} }, { $sort: { faculty_count: -1 } }, { $limit: 1 } ])	activity_1
db.Student.aggregate([ { $lookup: { from: "Participates_in", localField: "StuID", foreignField: "stuid", as: "participates" } }, { $match: { "participates": { $size: 0 } } }, { $project: { StuID: 1 } } ])	activity_1
db.Student.aggregate([ { $lookup: { from: "Participates_in", localField: "StuID", foreignField: "stuid", as: "participates" } }, { $match: { "participates": { $size: 0 } } }, { $project: { StuID: 1 } } ])	activity_1
db.Student.aggregate([ { $lookup: { from: "Participates_in", localField: "StuID", foreignField: "stuid", as: "participates_in" } }, { $match: { "Age": { $lt: 20 }, "participates_in": { $ne: [] } } }, { $project: { "_id": 0, "StuID": 1 } } ])	activity_1
db.Student.aggregate([ { $lookup: { from: 'Participates_in', localField: 'StuID', foreignField: 'stuid', as: 'activities' } }, { $unwind: '$activities' }, { $group: { _id: '$StuID', fname: { $first: '$Fname' }, lname: { $first: '$LName' }, count: { $sum: 1 } } }, { $sort: {count: -1} }, { $limit: 1 }, { $project: { fname: 1, lname: 1 } } ])	activity_1
db.Activity.aggregate([ { $lookup: { from: "Participates_in", localField: "actid", foreignField: "actid", as: "participants" } }, { $project: { activity_name: 1} }, { $sort: { participantCount: -1 } }, { $limit: 1 } ])	activity_1
db.Activity.aggregate([ { $lookup: { from: "Participates_in", localField: "actid", foreignField: "actid", as: "participants" } }, { $project: { activity_name: 1 } }, { $sort: { participantCount: -1 } }, { $limit: 1 } ])	activity_1
db.airports.find({city: 'Goroka'}, {name: 1})	flight_4
db.airports.find({city: 'Goroka'}, {name: 1})	flight_4
db.airports.find({city: 'New York'}, {name: 1, city: 1, country: 1, elevation: 1})	flight_4
db.airports.find({city: 'New York'}, {name: 1, city: 1, country: 1, elevation: 1})	flight_4
db.airports.aggregate([ { $match: { country: "Iceland" } }, { $group: { _id: null, max_elevation: { $max: "$elevation" } } }, { $project: { max_elevation: 1 } } ])	flight_4
db.airports.aggregate([ { $match: { country: 'Iceland' } }, { $group: { _id: null, maxElevation: { $max: "$elevation" } } }, { $project: { maxElevation: 1 } } ])	flight_4
db.airlines.find({name: /^Orbit/}, {country: 1})	flight_4
db.airlines.find({name: /^Orbit/}, {country: 1})	flight_4
db.airports.find({}, {country: 1}).sort({elevation: -1}).limit(1)	flight_4
db.airports.find({}, { country: 1 }).sort({ elevation: -1 }).limit(1)	flight_4
db.airports.aggregate([ { $match: { country: "Greenland" } }, { $group: { _id: "$city" } }, { $count: "distinctCities" } ])	flight_4
db.airports.aggregate([ { $match: { country: "Greenland" } }, { $group: { _id: "$city" } }, { $count: "distinct_cities" } ])	flight_4
db.routes.aggregate([ { $lookup: { from: "airlines", localField: "alid", foreignField: "alid", as: "airline_info" } }, { $match: { "airline_info.name": "American Airlines" } }, { $count: "count" } ])	flight_4
db.airlines.aggregate([ { $match: { name: 'American Airlines' } }, { $lookup: { from: 'routes', localField: 'alid', foreignField: 'alid', as: 'routes' } }, { $unwind: '$routes' }, { $count: 'routeCount' } ])	flight_4
db.airports.aggregate([ { $match: { country: "Canada" } }, { $lookup: { from: "routes", localField: "apid", foreignField: "dst_apid", as: "routes" } }, { $unwind: "$routes" }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1 } } ])	flight_4
db.routes.aggregate([ { $lookup: { from: "airports", localField: "dst_apid", foreignField: "apid", as: "dst_ap" } }, { $match: { "dst_ap.country": "Canada" } }, { $count: "total" } ])	flight_4
db.airports.find({}, {name: 1, city: 1, country: 1}).sort({elevation: 1}).limit(1)	flight_4
db.airports.find({}, { name: 1, city: 1, country: 1 }).sort({ elevation: 1 }).limit(1)	flight_4
db.airports.find({}, {name: 1, city: 1, country: 1}).sort({elevation: -1}).limit(1)	flight_4
db.airports.find({}, { name: 1, city: 1, country: 1 }).sort({ elevation: -1 }).limit(1)	flight_4
db.routes.aggregate([ { $group: { _id: "$alid", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 10 }, { $lookup: { from: "airlines", localField: "_id", foreignField: "alid", as: "airlineInfo" } }, { $unwind: "$airlineInfo" }, { $project: { name: "$airlineInfo.name", alid: "$_id" } } ])	flight_4
db.routes.aggregate([ { $lookup: { from: "airlines", localField: "alid", foreignField: "alid", as: "airline_info" } }, { $match: { "airline_info.name": "American Airlines" } }, { $group: { _id: null, uniqueAirports: { $addToSet: "$dst_apid" } } }, { $project: { numOfAirports: { $size: "$uniqueAirports" } } } ])	flight_4
db.routes.aggregate([ { $lookup: { from: "airlines", localField: "alid", foreignField: "alid", as: "airline_info" } }, { $match: { "airline_info.name": "American Airlines" } }, { $group: { _id: "$dst_apid" } }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1 } } ])	flight_4
db.airlines.aggregate([ { $group: { _id: "$country", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { country: "$_id" } } ])	flight_4
db.airlines.aggregate([ { $group: { _id: "$country", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	flight_4
db.airlines.aggregate([ { $match: { active: 'Y' } }, { $group: { _id: "$country", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { country: "$_id" } } ])	flight_4
db.airlines.aggregate([ { $match: { active: 'Y' } }, { $group: { _id: '$country', count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { country: "$_id" } } ])	flight_4
db.airports.aggregate([ { $match: { country: "United States" } }, { $group: { _id: "$city", count: { $sum: 1 } } }, { $match: { count: { $gt: 3 } } } , { $project: { city: "$_id" } }])	flight_4
db.airports.aggregate([ { $match: { country: "United States" } }, { $group: { _id: "$city", count: { $sum: 1 } } }, { $match: { count: { $gt: 3 } } } , { $project: { city: "$_id" } }])	flight_4
db.airports.aggregate([ { $group: { _id: "$city", count: { $sum: 1 } } }, { $match: { count: { $gt: 3 } } }, { $count: "cities" } ])	flight_4
db.airports.aggregate([ { $group: { _id: "$city", count: { $sum: 1 } } }, { $match: { count: { $gt: 3 } } }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1} } ])	flight_4
db.routes.aggregate([ { $lookup: { from: "airports", localField: "dst_apid", foreignField: "apid", as: "dst_ap" } }, { $match: { "dst_ap.country": "Italy" } }, { $count: "total" } ])	flight_4
db.routes.aggregate([ { $lookup: { from: "airports", localField: "dst_apid", foreignField: "apid", as: "dst_ap" } }, { $match: { "dst_ap.country": "Italy" } }, { $count: "total" } ])	flight_4
db.routes.aggregate([ { $lookup: { from: "airports", localField: "dst_apid", foreignField: "apid", as: "dst_ap" } }, { $lookup: { from: "airlines", localField: "alid", foreignField: "alid", as: "airline" } }, { $match: { "dst_ap.country": "Italy", "airline.name": "American Airlines" } }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1} } ])	flight_4
db.routes.aggregate([ { $lookup: { from: "airports", localField: "dst_apid", foreignField: "apid", as: "dst_ap" } }, { $lookup: { from: "airlines", localField: "alid", foreignField: "alid", as: "al" } }, { $match: { "dst_ap.country": "Italy", "al.name": "American Airlines" } }, { $group: { _id: null, count: { $sum: 1 } } }, { $project: { count: 1} } ])	flight_4
db.routes.aggregate([ { $lookup: { from: "airports", localField: "dst_apid", foreignField: "apid", as: "dst_ap" } }, { $match: { "dst_ap.name": "John F Kennedy International Airport" } }, { $count: "count" } ])	flight_4
db.routes.aggregate([ { $lookup: { from: "airports", localField: "dst_apid", foreignField: "apid", as: "dst_ap" } }, { $match: { "dst_ap.name": "John F Kennedy International Airport" } }, { $count: "count" } ])	flight_4
db.routes.aggregate([ { $lookup: { from: "airports", localField: "src_apid", foreignField: "apid", as: "source_airport" } }, { $match: { "source_airport.country": "United States" } }, { $lookup: { from: "airports", localField: "dst_apid", foreignField: "apid", as: "destination_airport" } }, { $match: { "destination_airport.country": "Canada" } }, { $count: "num_routes" } ])	flight_4
db.routes.aggregate([ { $lookup: { from: "airports", localField: "src_apid", foreignField: "apid", as: "source_airport" } }, { $lookup: { from: "airports", localField: "dst_apid", foreignField: "apid", as: "destination_airport" } }, { $match: { "source_airport.country": "United States", "destination_airport.country": "Canada" } }, { $count: "total_routes" } ])	flight_4
db.airlines.aggregate([ { $lookup: { from: "routes", localField: "alid", foreignField: "alid", as: "routes" } }, { $project: { name: 1 } }, { $sort: { routeCount: -1 } }, { $limit: 1 } ])	flight_4
db.airlines.aggregate([ { $lookup: { from: "routes", localField: "alid", foreignField: "alid", as: "routes" } }, { $project: { name: 1} }, { $sort: { routeCount: -1 } }, { $limit: 1 } ])	flight_4
db.airports.aggregate([ { $match: { country: "China" } }, { $lookup: { from: "routes", localField: "apid", foreignField: "src_apid", as: "routes" } }, { $unwind: "$routes" }, { $group: { _id: "$name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { name: "$_id" } }])	flight_4
db.airports.aggregate([ { $match: { country: "China" } }, { $lookup: { from: "routes", localField: "apid", foreignField: "src_apid", as: "routes" } }, { $unwind: "$routes" }, { $group: { _id: "$name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { name: "$_id" } } ])	flight_4
db.airports.aggregate([ { $match: { country: "China" } }, { $lookup: { from: "routes", localField: "apid", foreignField: "dst_apid", as: "routes" } }, { $unwind: "$routes" }, { $group: { _id: "$name", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } , { $project: { name: "$_id" } }])	flight_4
db.airports.aggregate([ { $lookup: { from: "routes", localField: "apid", foreignField: "dst_apid", as: "routes" } }, { $match: { "country": "China" } }, { $unwind: "$routes" }, { $group: { "_id": "$name", "count": { "$sum": 1 } } }, { $sort: { "count": -1 } }, { $limit: 1 } , { $project: { name: "$_id" } }])	flight_4
db.Orders.find({}, {order_id: 1}).sort({date_order_placed: -1}).limit(1)	tracking_orders
db.Orders.find({}, {order_id: 1}).sort({date_order_placed: -1}).limit(1)	tracking_orders
db.Orders.find({}, {order_id: 1}).sort({date_order_placed: -1}).limit(1)	tracking_orders
db.Orders.find({}, { order_id: 1, customer_id: 1 }).sort({ date_order_placed: 1 }).limit(1)	tracking_orders
db.Shipments.findOne({shipment_tracking_number: '3452'}, {order_id: 1})	tracking_orders
db.Shipments.findOne({shipment_tracking_number: '3452'}, {order_id: 1})	tracking_orders
db.Order_Items.find({product_id: 11}, {order_item_id: 1})	tracking_orders
db.Order_Items.find({product_id: 11}, {order_item_id: 1})	tracking_orders
db.Customers.aggregate([ { $lookup: { from: "Orders", localField: "customer_id", foreignField: "customer_id", as: "customer_orders" } }, { $match: { "customer_orders.order_status": "Packing" } }, { $group: { _id: "$customer_name" } } ])	tracking_orders
db.Customers.aggregate([ { $lookup: { from: "Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $match: { "orders.order_status": "Packing" } }, { $project: { customer_name: 1 } } ])	tracking_orders
db.Customers.aggregate([ { $lookup: { from: "Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $match: { "orders.order_status": "On Road" } }, { $project: { customer_details: 1 } } ])	tracking_orders
db.Customers.aggregate([ { $lookup: { from: "Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $match: { "orders.order_status": "On Road" } }, { $project: { customer_details: 1 } } ])	tracking_orders
db.Orders.aggregate([ { $group: { _id: "$customer_id", orderCount: { $sum: 1 } } }, { $sort: { orderCount: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	tracking_orders
db.Orders.aggregate([ { $group: { _id: "$customer_id", total: { $sum: 1 } }}, { $sort: { total: -1 }}, { $limit: 1 }, { $project: { _id: 1 } } ])	tracking_orders
db.Customers.aggregate([ { $match: { customer_name: "Jeramie" } }, { $lookup: { from: "Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $unwind: "$orders" }, { $project: { order_id: "$orders.order_id", order_status: "$orders.order_status" } } ])	tracking_orders
db.Customers.aggregate([ { $match: { customer_name: "Jeramie" } }, { $lookup: { from: "Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $unwind: "$orders" }, { $project: { order_id: "$orders.order_id", order_status: "$orders.order_status" } } ])	tracking_orders
db.Customers.aggregate([ { $lookup: { from: "Orders", localField: "customer_id", foreignField: "customer_id", as: "customer_orders" } }, { $match: { "customer_orders.order_status": { $all: ["On Road", "Shipped"] } } }, { $project: { customer_name: 1 } } ])	tracking_orders
db.Customers.aggregate([ { $lookup: { from: "Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $match: { "orders.order_status": { $all: ["On Road", "Shipped"] } } }, { $project: { customer_name: 1 } } ])	tracking_orders
db.Customers.aggregate([ { $lookup: { from: "Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $match: { "orders.order_status": { $all: ["On Road", "Shipped"] } } }, { $group: { _id: "$customer_id" } }, { $project: { customer_id: "$_id" } } ])	tracking_orders
db.Customers.aggregate([ { $lookup: { from: "Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $match: { "orders.order_status": { $all: ["On Road", "Shipped"] } } }, { $project: { customer_id: 1 } } ])	tracking_orders
db.Orders.aggregate([ { $lookup: { from: "Order_Items", localField: "order_id", foreignField: "order_id", as: "order_items" } }, { $unwind: "$order_items" }, { $lookup: { from: "Products", localField: "order_items.product_id", foreignField: "product_id", as: "product" } }, { $unwind: "$product" }, { $group: { _id: "$product.product_id", count: { $sum: 1 } } } ])	tracking_orders
db.Orders.aggregate([ { $lookup: { from: "Order_Items", localField: "order_id", foreignField: "order_id", as: "order_items" } }, { $unwind: "$order_items" }, { $lookup: { from: "Products", localField: "order_items.product_id", foreignField: "product_id", as: "product" } }, { $unwind: "$product" }, { $group: { _id: "$product.product_id", count: { $sum: 1 } } }, { $project: { product_id: "$_id", count: 1 } } ])	tracking_orders
db.Shipments.find({}, {order_id: 1}).sort({shipment_date: -1}).limit(1)	tracking_orders
db.Shipments.aggregate([ { $sort: { shipment_date: -1 } }, { $limit: 1 }, { $project: { order_id: 1 } } ])	tracking_orders
db.Order_Items.aggregate([ { $group: { _id: "$order_id", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { _id: 1 } } ])	tracking_orders
db.Orders.aggregate([ { $group: { _id: "$customer_id", orderCount: { $sum: 1 } } }, { $sort: { orderCount: -1 } }, { $limit: 1 }, { $lookup: { from: "Customers", localField: "_id", foreignField: "customer_id", as: "customerDetails" } }, { $unwind: "$customerDetails" }, { $project: { customer_name: "$customerDetails.customer_name" } } ])	tracking_orders
db.Customers.aggregate([ { $lookup: { from: "Orders", localField: "customer_id", foreignField: "customer_id", as: "customer_orders" } }, { $project: { customer_name: 1, numberOfOrders: { $size: "$customer_orders" } } }, { $match: { numberOfOrders: { $gte: 2 } } } ])	tracking_orders
db.Orders.aggregate([ { $group: { _id: "$customer_id", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $lookup: { from: "Customers", localField: "_id", foreignField: "customer_id", as: "customer" } }, { $replaceRoot: { newRoot: { $mergeObjects: [ { $arrayElemAt: [ "$customer", 0 ] }, "$$ROOT" ] } } }, { $project: { customer_name: 1, count: 1 } } ])	tracking_orders
db.Customers.aggregate([ { $lookup: { from: "Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $unwind: "$orders" }, { $lookup: { from: "Order_Items", localField: "orders.order_id", foreignField: "order_id", as: "order_items" } }, { $unwind: "$order_items" }, { $lookup: { from: "Products", localField: "order_items.product_id", foreignField: "product_id", as: "products" } }, { $unwind: "$products" }, { $match: { "products.product_name": "food" } }, { $group: { _id: "$customer_id", customer_name: { $first: "$customer_name" } } } , { $project: { customer_name: 1 } }])	tracking_orders
db.Customers.aggregate([ { $lookup: { from: "Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $unwind: "$orders" }, { $lookup: { from: "Order_Items", localField: "orders.order_id", foreignField: "order_id", as: "order_items" } }, { $unwind: "$order_items" }, { $lookup: { from: "Products", localField: "order_items.product_id", foreignField: "product_id", as: "products" } }, { $unwind: "$products" }, { $match: { "products.product_name": "food" } }, { $group: { _id: "$customer_id", customer_name: { $first: "$customer_name" } } } , { $project: { customer_name: 1} }])	tracking_orders
db.Customers.aggregate([ { $lookup: { from: "Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $unwind: "$orders" }, { $lookup: { from: "Order_Items", localField: "orders.order_id", foreignField: "order_id", as: "order_items" } }, { $unwind: "$order_items" }, { $lookup: { from: "Products", localField: "order_items.product_id", foreignField: "product_id", as: "products" } }, { $unwind: "$products" }, { $match: { "order_items.order_item_status": "Cancel", "products.product_name": "food" } }, { $group: { _id: "$customer_id", customer_name: { $first: "$customer_name" } } }, { $project: { customer_name: 1} } ])	tracking_orders
db.Customers.aggregate([ { $lookup: { from: "Orders", localField: "customer_id", foreignField: "customer_id", as: "orders" } }, { $unwind: "$orders" }, { $lookup: { from: "Order_Items", localField: "orders.order_id", foreignField: "order_id", as: "order_items" } }, { $unwind: "$order_items" }, { $lookup: { from: "Products", localField: "order_items.product_id", foreignField: "product_id", as: "products" } }, { $unwind: "$products" }, { $match: { "order_items.order_item_status": "Cancel", "products.product_name": "food" } }, { $group: { _id: "$customer_id", customer_name: { $first: "$customer_name" } } }, { $project: { customer_name: 1} } ])	tracking_orders
db.bridge.aggregate([ { $group: { _id: null, averageLengthFeet: { $avg: "$length_feet" } } } , { $project: { averageLengthFeet: 1} }])	architecture
db.mill.find({ type: 'Grondzeiler' }, { name: 1, built_year: 1 })	architecture
db.mill.find( { location: { $ne: 'Donceel' } }, { name: 1 } )	architecture
db.architect.aggregate([ { $lookup: { from: "mill", localField: "id", foreignField: "architect_id", as: "mills" } }, { $project: { _id: "$id", name: 1, nationality: 1, millsCount: { $size: "$mills" } } }, { $sort: { millsCount: -1 } }, { $limit: 1 }, { $project: { _id: 1, name: 1, nationality: 1 } } ])	architecture
db.bridge.find({name: {$in: ['Kolob Arch', 'Rainbow Bridge']}}, {location: 1})	architecture
db.mill.find( { name: { $regex: /Moulin/, $options: 'i' } }, { name: 1 } )	architecture
db.mill.aggregate([ { $lookup: { from: "architect", localField: "architect_id", foreignField: "id", as: "architect_info" } }, { $lookup: { from: "bridge", localField: "architect_id", foreignField: "architect_id", as: "bridge_info" } }, { $match: { "bridge_info.length_meters": { $gt: 80 } } }, { $group: { _id: "$name" } }, { $project: { name: "$_id" } } ])	architecture
db.mill.aggregate([ { $group: { _id: "$type", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 } ])	architecture
db.book_club.find({Year: {$gt: 1989}}, { Book_Title: 1, Author_or_Editor: 1})	culture_company
db.book_club.find({Year: {$gt: 1989}}, { Book_Title: 1, Author_or_Editor: 1})	culture_company
db.book_club.find({}, {Year: 1, Book_Title: 1, Publisher: 1}).sort({Year: -1})	culture_company
db.book_club.find({}, { Year: 1, Book_Title: 1, Publisher: 1 }).sort({ Year: -1 })	culture_company
db.book_club.aggregate([ { $group: { _id: "$Publisher", count: { $sum: 1 } } }, { $project: { Publisher: "$_id", count: 1 } } ])	culture_company
db.book_club.aggregate([ { $group: { _id: "$Publisher", count: { $sum: 1 } } } ])	culture_company
db.book_club.aggregate([ { $group: { _id: "$Publisher", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Publisher: "$_id" } } ])	culture_company
db.book_club.aggregate([ { $group: { _id: "$Publisher", count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $limit: 1 }, { $project: { Publisher: "$_id" } } ])	culture_company
db.book_club.aggregate([ { $group: { _id: "$Category", count: { $sum: 1 } } }, { $project: { category: "$_id", count: 1 } } ])	culture_company
db.book_club.aggregate([ { $group: { _id: "$Category", count: { $sum: 1 } } } ])	culture_company
db.book_club.aggregate([ { $match: { Year: { $gt: 1989 } } }, { $group: { _id: "$Category", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Category: "$_id" } } ])	culture_company
db.book_club.aggregate([ { $match: { Year: { $gt: 1989 } } }, { $group: { _id: "$Category", count: { $sum: 1 } } }, { $match: { count: { $gte: 2 } } }, { $project: { Category: "$_id" } } ])	culture_company
db.book_club.aggregate([ { $match: { Year: { $in: [1989, 1990] } } }, { $group: { _id: "$Publisher", distinctYears: { $addToSet: "$Year" } } }, { $match: { distinctYears: { $all: [1989, 1990] } } }, { $project: { _id: 1 } } ])	culture_company
db.book_club.aggregate([ { $match: { Year: { $in: [1989, 1990] } } }, { $group: { _id: "$Publisher", years: { $addToSet: "$Year" } } }, { $match: { years: { $all: [1989, 1990] } } }, { $project: { Publisher: "$_id" } } ])	culture_company
db.movie.find({}, { Title: 1, Year: 1, Director: 1 }).sort({ Budget_million: 1 })	culture_company
db.movie.find({}, {Title: 1, Year: 1, Director: 1}).sort({Budget_million: 1})	culture_company
db.movie.find( { Year: { $lte: 2000 } }, { Title: 1, Director: 1 } ).sort({ Gross_worldwide: -1 }).limit(1)	culture_company
db.movie.find( { Year: { $lte: 2000 } }, { Title: 1, Director: 1 } ).sort({ Gross_worldwide: -1 }).limit(1)	culture_company
db.movie.aggregate([ { $match: { Year: { $in: [1999, 2000] } } }, { $group: { _id: "$Director", count: { $sum: 1 } } }, { $match: { count: 2 } }, { $project: { Director: "$_id" } } ])	culture_company
db.movie.aggregate([ { $match: { Year: { $in: [1999, 2000] } } }, { $group: { _id: "$Director", count: { $sum: 1 } } }, { $match: { count: 2 } }, { $project: { Director: "$_id" } } ])	culture_company
db.movie.find({ Year: { $in: [1999, 2000] } }, { Director: 1 })	culture_company
db.movie.find({ $or: [{ Year: 1999 }, { Year: 2000 }] }, { Director: 1 })	culture_company
db.movie.aggregate([ { $match: { Year: { $lt: 2000 } } }, { $group: { _id: null, avgBudget: { $avg: "$Budget_million" }, maxBudget: { $max: "$Budget_million" }, minBudget: { $min: "$Budget_million" } } }, { $project: { avgBudget: 1, maxBudget: 1, minBudget: 1 } } ])	culture_company
db.movie.aggregate([ { $match: { Year: { $lt: 2000 } } }, { $group: { _id: null, avgBudget: { $avg: "$Budget_million" }, maxBudget: { $max: "$Budget_million" }, minBudget: { $min: "$Budget_million" } } }, { $project: { avgBudget: 1, maxBudget: 1, minBudget: 1 } } ])	culture_company
