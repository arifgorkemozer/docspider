query_id;question;database;prompt;gold_sql;hardness
1;How many singers do we have?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
How many singers do we have?
";SELECT count(*) FROM singer;easy
2;What is the total number of singers?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What is the total number of singers?
";SELECT count(*) FROM singer;easy
3;Show name, country, age for all singers ordered by age from the oldest to the youngest.;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
Show name, country, age for all singers ordered by age from the oldest to the youngest.
";SELECT name ,  country ,  age FROM singer ORDER BY age DESC;medium
4;What are the names, countries, and ages for every singer in descending order of age?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What are the names, countries, and ages for every singer in descending order of age?
";SELECT name ,  country ,  age FROM singer ORDER BY age DESC;medium
5;What is the average, minimum, and maximum age of all singers from France?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What is the average, minimum, and maximum age of all singers from France?
";SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France';medium
6;What is the average, minimum, and maximum age for all French singers?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What is the average, minimum, and maximum age for all French singers?
";SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France';medium
7;Show the name and the release year of the song by the youngest singer.;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
Show the name and the release year of the song by the youngest singer.
";SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1;medium
8;What are the names and release years for all the songs of the youngest singer?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What are the names and release years for all the songs of the youngest singer?
";SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1;medium
9;What are all distinct countries where singers above age 20 are from?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What are all distinct countries where singers above age 20 are from?
";SELECT DISTINCT country FROM singer WHERE age  >  20;easy
10;What are  the different countries with singers above age 20?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What are  the different countries with singers above age 20?
";SELECT DISTINCT country FROM singer WHERE age  >  20;easy
11;Show all countries and the number of singers in each country.;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
Show all countries and the number of singers in each country.
";SELECT country ,  count(*) FROM singer GROUP BY country;medium
12;How many singers are from each country?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
How many singers are from each country?
";SELECT country ,  count(*) FROM singer GROUP BY country;medium
13;List all song names by singers above the average age.;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
List all song names by singers above the average age.
";SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer);hard
14;What are all the song names by singers who are older than average?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What are all the song names by singers who are older than average?
";SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer);hard
15;Show location and name for all stadiums with a capacity between 5000 and 10000.;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
Show location and name for all stadiums with a capacity between 5000 and 10000.
";SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;medium
16;What are the locations and names of all stations with capacity between 5000 and 10000?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What are the locations and names of all stations with capacity between 5000 and 10000?
";SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;medium
17;What is the maximum capacity and the average of all stadiums ?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What is the maximum capacity and the average of all stadiums ?
";select max(capacity), average from stadium;medium
18;What is the average and maximum capacities for all stadiums ?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What is the average and maximum capacities for all stadiums ?
";select avg(capacity) ,  max(capacity) from stadium;medium
19;What is the name and capacity for the stadium with highest average attendance?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What is the name and capacity for the stadium with highest average attendance?
";SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1;medium
20;What is the name and capacity for the stadium with the highest average attendance?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What is the name and capacity for the stadium with the highest average attendance?
";SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1;medium
21;How many concerts are there in year 2014 or 2015?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
How many concerts are there in year 2014 or 2015?
";SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015;medium
22;How many concerts occurred in 2014 or 2015?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
How many concerts occurred in 2014 or 2015?
";SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015;medium
23;Show the stadium name and the number of concerts in each stadium.;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
Show the stadium name and the number of concerts in each stadium.
";SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id;medium
24;For each stadium, how many concerts play there?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
For each stadium, how many concerts play there?
";SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id;medium
25;Show the stadium name and capacity with most number of concerts in year 2014 or after.;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
Show the stadium name and capacity with most number of concerts in year 2014 or after.
";SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1;extra
26;What is the name and capacity of the stadium with the most concerts after 2013 ?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What is the name and capacity of the stadium with the most concerts after 2013 ?
";select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1;extra
27;Which year has most number of concerts?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
Which year has most number of concerts?
";SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1;hard
28;What is the year that had the most concerts?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What is the year that had the most concerts?
";SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1;hard
29;Show the stadium names without any concert.;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
Show the stadium names without any concert.
";SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert);hard
30;What are the names of the stadiums without any concerts?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What are the names of the stadiums without any concerts?
";SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert);hard
31;Show countries where a singer above age 40 and a singer below 30 are from.;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
Show countries where a singer above age 40 and a singer below 30 are from.
";SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30;hard
32;Show names for all stadiums except for stadiums having a concert in year 2014.;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
Show names for all stadiums except for stadiums having a concert in year 2014.
";SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014;hard
33;What are the names of all stadiums that did not have a concert in 2014?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What are the names of all stadiums that did not have a concert in 2014?
";SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014;hard
34;Show the name and theme for all concerts and the number of singers in each concert.;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
Show the name and theme for all concerts and the number of singers in each concert.
";SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id;medium
35;What are the names , themes , and number of singers for every concert ?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What are the names , themes , and number of singers for every concert ?
";select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id;medium
36;List singer names and number of concerts for each singer.;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
List singer names and number of concerts for each singer.
";SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id;medium
37;What are the names of the singers and number of concerts for each person?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What are the names of the singers and number of concerts for each person?
";SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id;medium
38;List all singer names in concerts in year 2014.;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
List all singer names in concerts in year 2014.
";SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014;hard
39;What are the names of the singers who performed in a concert in 2014?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What are the names of the singers who performed in a concert in 2014?
";SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014;hard
40;what is the name and nation of the singer who have a song having 'Hey' in its name?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
what is the name and nation of the singer who have a song having 'Hey' in its name?
";SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%';medium
41;What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?
";SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%';medium
42;Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.
";SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015;extra
43;What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?
";SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015;extra
44;Find the number of concerts happened in the stadium with the highest capacity .;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
Find the number of concerts happened in the stadium with the highest capacity .
";select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1);hard
45;What are the number of concerts that occurred in the stadium with the largest capacity ?;concert_singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
stadium(Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average)
singer(Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male)
concert(concert_ID, concert_Name, Theme, Stadium_ID, Year)
singer_in_concert(concert_ID, Singer_ID)
Foreign keys:
concert.Stadium_ID = stadium.Stadium_ID
singer_in_concert.Singer_ID = singer.Singer_ID
singer_in_concert.concert_ID = concert.concert_ID
Question:
What are the number of concerts that occurred in the stadium with the largest capacity ?
";select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1);hard
46;Find the number of pets whose weight is heavier than 10.;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the number of pets whose weight is heavier than 10.
";SELECT count(*) FROM pets WHERE weight  >  10;easy
47;How many pets have a greater weight than 10?;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
How many pets have a greater weight than 10?
";SELECT count(*) FROM pets WHERE weight  >  10;easy
48;Find the weight of the youngest dog.;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the weight of the youngest dog.
";SELECT weight FROM pets ORDER BY pet_age LIMIT 1;medium
49;How much does the youngest dog weigh?;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
How much does the youngest dog weigh?
";SELECT weight FROM pets ORDER BY pet_age LIMIT 1;medium
50;Find the maximum weight for each type of pet. List the maximum weight and pet type.;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the maximum weight for each type of pet. List the maximum weight and pet type.
";SELECT max(weight) ,  petType FROM pets GROUP BY petType;medium
51;List the maximum weight and type for each type of pet.;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
List the maximum weight and type for each type of pet.
";SELECT max(weight) ,  petType FROM pets GROUP BY petType;medium
52;Find number of pets owned by students who are older than 20.;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find number of pets owned by students who are older than 20.
";SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20;medium
53;How many pets are owned by students that have an age greater than 20?;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
How many pets are owned by students that have an age greater than 20?
";SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20;medium
54;Find the number of dog pets that are raised by female students (with sex F).;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the number of dog pets that are raised by female students (with sex F).
";SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog';hard
55;How many dog pets are raised by female students?;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
How many dog pets are raised by female students?
";SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog';hard
56;Find the number of distinct type of pets.;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the number of distinct type of pets.
";SELECT count(DISTINCT pettype) FROM pets;easy
57;How many different types of pet are there?;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
How many different types of pet are there?
";SELECT count(DISTINCT pettype) FROM pets;easy
58;Find the first name of students who have cat or dog pet.;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the first name of students who have cat or dog pet.
";SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog';extra
59;What are the first names of every student who has a cat or dog as a pet?;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
What are the first names of every student who has a cat or dog as a pet?
";SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog';extra
60;Find the first name of students who have both cat and dog pets .;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the first name of students who have both cat and dog pets .
";select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog';extra
61;What are the students' first names who have both cats and dogs as pets?;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
What are the students' first names who have both cats and dogs as pets?
";SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog';extra
62;Find the major and age of students who do not have a cat pet.;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the major and age of students who do not have a cat pet.
";SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat');extra
63;What major is every student who does not own a cat as a pet, and also how old are they?;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
What major is every student who does not own a cat as a pet, and also how old are they?
";SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat');extra
64;Find the id of students who do not have a cat pet.;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the id of students who do not have a cat pet.
";SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat';hard
65;What are the ids of the students who do not own cats as pets?;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
What are the ids of the students who do not own cats as pets?
";SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat';hard
66;Find the first name and age of students who have a dog but do not have a cat as a pet.;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the first name and age of students who have a dog but do not have a cat as a pet.
";SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat');extra
67;What is the first name of every student who has a dog but does not have a cat?;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
What is the first name of every student who has a dog but does not have a cat?
";SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat');extra
68;Find the type and weight of the youngest pet.;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the type and weight of the youngest pet.
";SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1;medium
69;What type of pet is the youngest animal, and how much does it weigh?;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
What type of pet is the youngest animal, and how much does it weigh?
";SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1;medium
70;Find the id and weight of all pets whose age is older than 1.;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the id and weight of all pets whose age is older than 1.
";SELECT petid ,  weight FROM pets WHERE pet_age  >  1;medium
71;What is the id and weight of every pet who is older than 1?;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
What is the id and weight of every pet who is older than 1?
";SELECT petid ,  weight FROM pets WHERE pet_age  >  1;medium
72;Find the average and maximum age for each type of pet.;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the average and maximum age for each type of pet.
";SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype;medium
73;What is the average and maximum age for each pet type?;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
What is the average and maximum age for each pet type?
";SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype;medium
74;Find the average weight for each pet type.;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the average weight for each pet type.
";SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype;medium
75;What is the average weight for each type of pet?;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
What is the average weight for each type of pet?
";SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype;medium
76;Find the first name and age of students who have a pet.;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the first name and age of students who have a pet.
";SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid;medium
77;What are the different first names and ages of the students who do have pets?;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
What are the different first names and ages of the students who do have pets?
";SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid;medium
78;Find the id of the pet owned by student whose last name is ‘Smith’.;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the id of the pet owned by student whose last name is ‘Smith’.
";SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith';medium
79;What is the id of the pet owned by the student whose last name is 'Smith'?;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
What is the id of the pet owned by the student whose last name is 'Smith'?
";SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith';medium
80;Find the number of pets for each student who has any pet and student id.;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the number of pets for each student who has any pet and student id.
";SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid;medium
81;For students who have pets , how many pets does each student have ? list their ids instead of names .;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
For students who have pets , how many pets does each student have ? list their ids instead of names .
";select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid;medium
82;Find the first name and gender of student who have more than one pet.;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the first name and gender of student who have more than one pet.
";SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1;medium
83;What is the first name and gender of the all the students who have more than one pet?;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
What is the first name and gender of the all the students who have more than one pet?
";SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1;medium
84;Find the last name of the student who has a cat that is age 3.;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the last name of the student who has a cat that is age 3.
";SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat';hard
85;What is the last name of the student who has a cat that is 3 years old?;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
What is the last name of the student who has a cat that is 3 years old?
";SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat';hard
86;Find the average age of students who do not have any pet .;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
Find the average age of students who do not have any pet .
";select avg(age) from student where stuid not in (select stuid from has_pet);extra
87;What is the average age for all students who do not own any pets ?;pets_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Student(StuID, LName, Fname, Age, Sex, Major, Advisor, city_code)
Has_Pet(StuID, PetID)
Pets(PetID, PetType, pet_age, weight)
Foreign keys:
Has_Pet.StuID = Student.StuID
Has_Pet.PetID = Pets.PetID
Question:
What is the average age for all students who do not own any pets ?
";select avg(age) from student where stuid not in (select stuid from has_pet);extra
88;How many continents are there?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
How many continents are there?
";"SELECT count(*) FROM CONTINENTS;";easy
89;What is the number of continents?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the number of continents?
";"SELECT count(*) FROM CONTINENTS;";easy
90;How many countries does each continent have? List the continent id, continent name and the number of countries.;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
How many countries does each continent have? List the continent id, continent name and the number of countries.
";"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;";medium
91;For each continent, list its id, name, and how many countries it has?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
For each continent, list its id, name, and how many countries it has?
";"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;";medium
92;How many countries are listed?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
How many countries are listed?
";"SELECT count(*) FROM COUNTRIES;";easy
93;How many countries exist?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
How many countries exist?
";"SELECT count(*) FROM COUNTRIES;";easy
94;How many models does each car maker produce? List maker full name, id and the number.;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
How many models does each car maker produce? List maker full name, id and the number.
";"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;";medium
95;What is the full name of each car maker, along with its id and how many models it produces?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the full name of each car maker, along with its id and how many models it produces?
";"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;";medium
96;Which model of the car has the minimum horsepower?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
Which model of the car has the minimum horsepower?
";"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;";hard
97;What is the model of the car with the smallest amount of horsepower?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the model of the car with the smallest amount of horsepower?
";"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;";hard
98;Find the model of the car whose weight is below the average weight.;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
Find the model of the car whose weight is below the average weight.
";SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA);extra
99;What is the model for the car with a weight smaller than the average?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the model for the car with a weight smaller than the average?
";SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA);extra
100;Find the name of the makers that produced some cars in the year of 1970?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
Find the name of the makers that produced some cars in the year of 1970?
";"SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';";extra
101;What is the name of the different car makers who produced a car in 1970?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the name of the different car makers who produced a car in 1970?
";"SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';";extra
102;Find the make and production time of the cars that were produced in the earliest year?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
Find the make and production time of the cars that were produced in the earliest year?
";"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);";extra
103;What is the maker of the carr produced in the earliest year and what year was it?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the maker of the carr produced in the earliest year and what year was it?
";"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);";extra
104;Which distinct car models are the produced after 1980?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
Which distinct car models are the produced after 1980?
";"SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;";hard
105;What are the different models for the cards produced after 1980?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What are the different models for the cards produced after 1980?
";"SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;";hard
106;How many car makers are there in each continents? List the continent name and the count.;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
How many car makers are there in each continents? List the continent name and the count.
";"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;";hard
107;What is the name of each continent and how many car makers are there in each one?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the name of each continent and how many car makers are there in each one?
";"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;";hard
108;Which of the countries has the most car makers? List the country name.;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
Which of the countries has the most car makers? List the country name.
";"SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;";extra
109;What is the name of the country with the most car makers?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the name of the country with the most car makers?
";"SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;";extra
110;How many car models are produced by each maker ? Only list the count and the maker full name .;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
How many car models are produced by each maker ? Only list the count and the maker full name .
";"select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;";medium
111;What is the number of car models that are produced by each maker and what is the id and full name of each maker?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the number of car models that are produced by each maker and what is the id and full name of each maker?
";"SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;";medium
112;What is the accelerate of the car make amc hornet sportabout (sw)?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the accelerate of the car make amc hornet sportabout (sw)?
";"SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';";medium
113;How much does the car accelerate that makes amc hornet sportabout (sw)?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
How much does the car accelerate that makes amc hornet sportabout (sw)?
";"SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';";medium
114;How many car makers are there in france?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
How many car makers are there in france?
";"SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';";medium
115;What is the number of makers of care in France?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the number of makers of care in France?
";"SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';";medium
116;How many car models are produced in the usa?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
How many car models are produced in the usa?
";"SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';";hard
117;What is the count of the car models produced in the United States?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the count of the car models produced in the United States?
";"SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';";hard
118;What is the average miles per gallon(mpg) of the cars with 4 cylinders?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the average miles per gallon(mpg) of the cars with 4 cylinders?
";"SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;";easy
119;What is the average miles per gallon of all the cards with 4 cylinders?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the average miles per gallon of all the cards with 4 cylinders?
";"SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;";easy
120;What is the smallest weight of the car produced with 8 cylinders on 1974 ?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the smallest weight of the car produced with 8 cylinders on 1974 ?
";select min(weight) from cars_data where cylinders  =  8 and year  =  1974;medium
121;What is the minimum weight of the car with 8 cylinders produced in 1974 ?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the minimum weight of the car with 8 cylinders produced in 1974 ?
";select min(weight) from cars_data where cylinders  =  8 and year  =  1974;medium
122;What are all the makers and models?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What are all the makers and models?
";"SELECT Maker ,  Model FROM MODEL_LIST;";medium
123;What are the makers and models?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What are the makers and models?
";"SELECT Maker ,  Model FROM MODEL_LIST;";medium
124;What are the countries having at least one car maker? List name and id.;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What are the countries having at least one car maker? List name and id.
";"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;";medium
125;What are the names and ids of all countries with at least one car maker?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What are the names and ids of all countries with at least one car maker?
";"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;";medium
126;What is the number of the cars with horsepower more than 150?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the number of the cars with horsepower more than 150?
";"SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;";easy
127;What is the number of cars with a horsepower greater than 150?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the number of cars with a horsepower greater than 150?
";"SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;";easy
128;What is the average weight of cars each year?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the average weight of cars each year?
";"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;";medium
129;What is the average weight and year for each year?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the average weight and year for each year?
";"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;";medium
130;Which countries in europe have at least 3 car manufacturers?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
Which countries in europe have at least 3 car manufacturers?
";"SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;";extra
131;What are the names of all European countries with at least 3 manufacturers?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What are the names of all European countries with at least 3 manufacturers?
";"SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;";extra
132;What is the maximum horsepower and the make of the car models with 3 cylinders?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the maximum horsepower and the make of the car models with 3 cylinders?
";"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;";extra
133;What is the largest amount of horsepower for the models with 3 cylinders and what make is it?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the largest amount of horsepower for the models with 3 cylinders and what make is it?
";"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;";extra
134;Which model saves the most gasoline? That is to say, have the maximum miles per gallon.;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
Which model saves the most gasoline? That is to say, have the maximum miles per gallon.
";"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;";hard
135;What is the car model with the highest mpg ?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the car model with the highest mpg ?
";"select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;";hard
136;What is the average horsepower of the cars before 1980?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the average horsepower of the cars before 1980?
";"SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;";easy
137;What is the average horsepower for all cars produced before 1980 ?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the average horsepower for all cars produced before 1980 ?
";"select avg(horsepower) from cars_data where year  <  1980;";easy
138;What is the average edispl of the cars of model volvo?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the average edispl of the cars of model volvo?
";"SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';";medium
139;What is the average edispl for all volvos?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the average edispl for all volvos?
";"SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';";medium
140;What is the maximum accelerate for different number of cylinders?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the maximum accelerate for different number of cylinders?
";"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;";medium
141;What is the maximum accelerate for all the different cylinders?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the maximum accelerate for all the different cylinders?
";"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;";medium
142;Which model has the most version(make) of cars?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
Which model has the most version(make) of cars?
";"SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;";hard
143;What model has the most different versions?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What model has the most different versions?
";"SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;";hard
144;How many cars have more than 4 cylinders?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
How many cars have more than 4 cylinders?
";"SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;";easy
145;What is the number of cars with more than 4 cylinders?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the number of cars with more than 4 cylinders?
";"SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;";easy
146;how many cars were produced in 1980?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
how many cars were produced in 1980?
";"SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;";easy
147;In 1980, how many cars were made?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
In 1980, how many cars were made?
";"SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;";easy
148;How many car models were produced by the maker with full name American Motor Company?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
How many car models were produced by the maker with full name American Motor Company?
";"SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';";medium
149;What is the number of car models created by the car maker American Motor Company?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the number of car models created by the car maker American Motor Company?
";"SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';";medium
150;Which makers designed more than 3 car models? List full name and the id.;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
Which makers designed more than 3 car models? List full name and the id.
";"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;";medium
151;What are the names and ids of all makers with more than 3 models?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What are the names and ids of all makers with more than 3 models?
";"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;";medium
152;Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?
";"SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;";extra
153;What are the different models created by either the car maker General Motors or weighed more than 3500?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What are the different models created by either the car maker General Motors or weighed more than 3500?
";"SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;";extra
154;In which years cars were produced weighing no less than 3000 and no more than 4000 ?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
In which years cars were produced weighing no less than 3000 and no more than 4000 ?
";"select distinct year from cars_data where weight between 3000 and 4000;";easy
155;What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?
";"select distinct year from cars_data where weight between 3000 and 4000;";easy
156;What is the horsepower of the car with the largest accelerate?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the horsepower of the car with the largest accelerate?
";"SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;";medium
157;What is the horsepower of the car with the greatest accelerate?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the horsepower of the car with the greatest accelerate?
";"SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;";medium
158;For model volvo, how many cylinders does the car with the least accelerate have?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
For model volvo, how many cylinders does the car with the least accelerate have?
";"SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;";extra
159;For a volvo model, how many cylinders does the version with least accelerate have?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
For a volvo model, how many cylinders does the version with least accelerate have?
";"SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;";extra
160;How many cars have a larger accelerate than the car with the largest horsepower?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
How many cars have a larger accelerate than the car with the largest horsepower?
";"SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );";hard
161;What is the number of cars with a greater accelerate than the one with the most horsepower?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the number of cars with a greater accelerate than the one with the most horsepower?
";"SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );";hard
162;How many countries has more than 2 car makers ?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
How many countries has more than 2 car makers ?
";select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2;medium
163;What is the number of countries with more than 2 car makers ?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the number of countries with more than 2 car makers ?
";select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2;medium
164;How many cars has over 6 cylinders?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
How many cars has over 6 cylinders?
";"SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;";easy
165;What is the number of carsw ith over 6 cylinders?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the number of carsw ith over 6 cylinders?
";"SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;";easy
166;For the cars with 4 cylinders, which model has the largest horsepower?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
For the cars with 4 cylinders, which model has the largest horsepower?
";"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;";extra
167;For all of the 4 cylinder cars, which model has the most horsepower?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
For all of the 4 cylinder cars, which model has the most horsepower?
";"SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;";extra
168;Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.
";"SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;";extra
169;Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?
";"select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;";extra
170;What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?
";select max(mpg) from cars_data where cylinders  =  8 or year  <  1980;medium
171;What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?
";select max(mpg) from cars_data where cylinders  =  8 or year  <  1980;medium
172;Which models are lighter than 3500 but not built by the 'Ford Motor Company'?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
Which models are lighter than 3500 but not built by the 'Ford Motor Company'?
";"SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';";extra
173;What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?
";"SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';";extra
174;What are the name of the countries where there is not a single car maker?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What are the name of the countries where there is not a single car maker?
";"SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;";hard
175;What are the names of the countries with no car makers?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What are the names of the countries with no car makers?
";"SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;";hard
176;Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .
";"select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;";extra
177;What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?
";"SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;";extra
178;What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?
";"SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';";extra
179;What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?;car_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
continents(ContId, Continent)
countries(CountryId, CountryName, Continent)
car_makers(Id, Maker, FullName, Country)
model_list(ModelId, Maker, Model)
car_names(MakeId, Model, Make)
cars_data(Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year)
Foreign keys:
countries.Continent = continents.ContId
car_makers.Country = countries.CountryId
model_list.Maker = car_makers.Id
car_names.Model = model_list.Model
cars_data.Id = car_names.MakeId
Question:
What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?
";"select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';";extra
180;Which country does Airline 'JetBlue Airways' belong to?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Which country does Airline 'JetBlue Airways' belong to?
";SELECT Country FROM AIRLINES WHERE Airline  =  'JetBlue Airways';easy
181;What country is Jetblue Airways affiliated with?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
What country is Jetblue Airways affiliated with?
";SELECT Country FROM AIRLINES WHERE Airline  =  'JetBlue Airways';easy
182;What is the abbreviation of Airline 'JetBlue Airways'?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
What is the abbreviation of Airline 'JetBlue Airways'?
";SELECT Abbreviation FROM AIRLINES WHERE Airline  =  'JetBlue Airways';easy
183;Which abbreviation corresponds to Jetblue Airways?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Which abbreviation corresponds to Jetblue Airways?
";SELECT Abbreviation FROM AIRLINES WHERE Airline  =  'JetBlue Airways';easy
184;List all airline names and their abbreviations in 'USA'.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
List all airline names and their abbreviations in 'USA'.
";SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  'USA';medium
185;What are the airline names and abbreviations for airlines in the USA?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
What are the airline names and abbreviations for airlines in the USA?
";SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  'USA';medium
186;List the airport code and name in the city of Anthony.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
List the airport code and name in the city of Anthony.
";SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  'Anthony';medium
187;Give the airport code and airport name corresonding to the city Anthony.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Give the airport code and airport name corresonding to the city Anthony.
";SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  'Anthony';medium
188;How many airlines do we have?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
How many airlines do we have?
";SELECT count(*) FROM AIRLINES;easy
189;What is the total number of airlines?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
What is the total number of airlines?
";SELECT count(*) FROM AIRLINES;easy
190;How many airports do we have?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
How many airports do we have?
";SELECT count(*) FROM AIRPORTS;easy
191;Return the number of  airports.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Return the number of  airports.
";SELECT count(*) FROM AIRPORTS;easy
192;How many flights do we have?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
How many flights do we have?
";SELECT count(*) FROM FLIGHTS;easy
193;Return the number of flights.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Return the number of flights.
";SELECT count(*) FROM FLIGHTS;easy
194;Which airline has abbreviation 'UAL'?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Which airline has abbreviation 'UAL'?
";SELECT Airline FROM AIRLINES WHERE Abbreviation  =  'UAL';easy
195;Give the airline with abbreviation 'UAL'.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Give the airline with abbreviation 'UAL'.
";SELECT Airline FROM AIRLINES WHERE Abbreviation  =  'UAL';easy
196;How many airlines are from USA?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
How many airlines are from USA?
";SELECT count(*) FROM AIRLINES WHERE Country  =  'USA';easy
197;Return the number of airlines in the USA.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Return the number of airlines in the USA.
";SELECT count(*) FROM AIRLINES WHERE Country  =  'USA';easy
198;Which city and country is the Alton airport at?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Which city and country is the Alton airport at?
";SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  'Alton';medium
199;Give the city and country for the Alton airport.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Give the city and country for the Alton airport.
";SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  'Alton';medium
200;What is the airport name for airport 'AKO'?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
What is the airport name for airport 'AKO'?
";SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  'AKO';easy
201;Return the name of the airport with code 'AKO'.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Return the name of the airport with code 'AKO'.
";SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  'AKO';easy
202;What are airport names at City 'Aberdeen'?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
What are airport names at City 'Aberdeen'?
";SELECT AirportName FROM AIRPORTS WHERE City = 'Aberdeen';easy
203;What are the names of airports in Aberdeen?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
What are the names of airports in Aberdeen?
";SELECT AirportName FROM AIRPORTS WHERE City = 'Aberdeen';easy
204;How many flights depart from 'APG'?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
How many flights depart from 'APG'?
";SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  'APG';easy
205;Count the number of flights departing from 'APG'.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Count the number of flights departing from 'APG'.
";SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  'APG';easy
206;How many flights have destination ATO?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
How many flights have destination ATO?
";SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  'ATO';easy
207;Count the number of flights into ATO.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Count the number of flights into ATO.
";SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  'ATO';easy
208;How many flights depart from City Aberdeen?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
How many flights depart from City Aberdeen?
";SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  'Aberdeen';medium
209;Return the number of flights departing from Aberdeen.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Return the number of flights departing from Aberdeen.
";SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  'Aberdeen';medium
210;How many flights arriving in Aberdeen city?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
How many flights arriving in Aberdeen city?
";SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  'Aberdeen';medium
211;Return the number of flights arriving in Aberdeen.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Return the number of flights arriving in Aberdeen.
";SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  'Aberdeen';medium
212;How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?
";SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  'Ashley' AND T3.City  =  'Aberdeen';hard
213;How many flights fly from Aberdeen to Ashley?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
How many flights fly from Aberdeen to Ashley?
";SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  'Ashley' AND T3.City  =  'Aberdeen';hard
214;How many flights does airline 'JetBlue Airways' have?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
How many flights does airline 'JetBlue Airways' have?
";SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = 'JetBlue Airways';medium
215;Give the number of Jetblue Airways flights.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Give the number of Jetblue Airways flights.
";SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = 'JetBlue Airways';medium
216;How many 'United Airlines' flights go to Airport 'ASY'?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
How many 'United Airlines' flights go to Airport 'ASY'?
";SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  'United Airlines' AND T2.DestAirport  =  'ASY';medium
217;Count the number of United Airlines flights arriving in ASY Airport.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Count the number of United Airlines flights arriving in ASY Airport.
";SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  'United Airlines' AND T2.DestAirport  =  'ASY';medium
218;How many 'United Airlines' flights depart from Airport 'AHD'?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
How many 'United Airlines' flights depart from Airport 'AHD'?
";SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  'United Airlines' AND T2.SourceAirport  =  'AHD';medium
219;Return the number of United Airlines flights leaving from AHD Airport.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Return the number of United Airlines flights leaving from AHD Airport.
";SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  'United Airlines' AND T2.SourceAirport  =  'AHD';medium
220;How many United Airlines flights go to City 'Aberdeen'?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
How many United Airlines flights go to City 'Aberdeen'?
";SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  'Aberdeen' AND T3.Airline  =  'United Airlines';hard
221;Count the number of United Airlines flights that arrive in Aberdeen.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Count the number of United Airlines flights that arrive in Aberdeen.
";SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  'Aberdeen' AND T3.Airline  =  'United Airlines';hard
222;Which city has most number of arriving flights?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Which city has most number of arriving flights?
";SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1;extra
223;Which city has the most frequent destination airport?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Which city has the most frequent destination airport?
";SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1;extra
224;Which city has most number of departing flights?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Which city has most number of departing flights?
";SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1;extra
225;Which city is the most frequent source airport?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Which city is the most frequent source airport?
";SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1;extra
226;What is the code of airport that has the highest number of flights?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
What is the code of airport that has the highest number of flights?
";SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1;extra
227;What is the airport code of the airport with the most flights?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
What is the airport code of the airport with the most flights?
";SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1;extra
228;What is the code of airport that has fewest number of flights?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
What is the code of airport that has fewest number of flights?
";SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1;extra
229;Give the code of the airport with the least flights.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Give the code of the airport with the least flights.
";SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1;extra
230;Which airline has most number of flights?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Which airline has most number of flights?
";SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1;extra
231;What airline serves the most flights?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
What airline serves the most flights?
";SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1;extra
232;Find the abbreviation and country of the airline that has fewest number of flights?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Find the abbreviation and country of the airline that has fewest number of flights?
";SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1;extra
233;What is the abbreviation of the airilne has the fewest flights and what country is it in?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
What is the abbreviation of the airilne has the fewest flights and what country is it in?
";SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1;extra
234;What are airlines that have some flight departing from airport 'AHD'?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
What are airlines that have some flight departing from airport 'AHD'?
";SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'AHD';medium
235;Which airlines have a flight with source airport AHD?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Which airlines have a flight with source airport AHD?
";SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'AHD';medium
236;What are airlines that have flights arriving at airport 'AHD'?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
What are airlines that have flights arriving at airport 'AHD'?
";SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  'AHD';medium
237;Which airlines have a flight with destination airport AHD?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Which airlines have a flight with destination airport AHD?
";SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  'AHD';medium
238;Find all airlines that have flights from both airports 'APG' and 'CVO'.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Find all airlines that have flights from both airports 'APG' and 'CVO'.
";SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'APG' INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'CVO';extra
239;Which airlines have departing flights from both APG and CVO airports?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Which airlines have departing flights from both APG and CVO airports?
";SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'APG' INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'CVO';extra
240;Find all airlines that have flights from airport 'CVO' but not from 'APG'.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Find all airlines that have flights from airport 'CVO' but not from 'APG'.
";SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'CVO' EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'APG';extra
241;Which airlines have departures from CVO but not from APG airports?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Which airlines have departures from CVO but not from APG airports?
";SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'CVO' EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'APG';extra
242;Find all airlines that have at least 10 flights.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Find all airlines that have at least 10 flights.
";SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10;medium
243;Which airlines have at least 10 flights?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Which airlines have at least 10 flights?
";SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10;medium
244;Find all airlines that have fewer than 200 flights.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Find all airlines that have fewer than 200 flights.
";SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200;medium
245;Which airlines have less than 200 flights?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Which airlines have less than 200 flights?
";SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200;medium
246;What are flight numbers of Airline 'United Airlines'?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
What are flight numbers of Airline 'United Airlines'?
";SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  'United Airlines';medium
247;Which flight numbers correspond to United Airlines flights?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Which flight numbers correspond to United Airlines flights?
";SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  'United Airlines';medium
248;What are flight numbers of flights departing from Airport 'APG'?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
What are flight numbers of flights departing from Airport 'APG'?
";SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  'APG';easy
249;Give the flight numbers of flights leaving from APG.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Give the flight numbers of flights leaving from APG.
";SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  'APG';easy
250;What are flight numbers of flights arriving at Airport 'APG'?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
What are flight numbers of flights arriving at Airport 'APG'?
";SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  'APG';easy
251;Give the flight numbers of flights landing at APG.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Give the flight numbers of flights landing at APG.
";SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  'APG';easy
252;What are flight numbers of flights departing from City 'Aberdeen '?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
What are flight numbers of flights departing from City 'Aberdeen '?
";SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  'Aberdeen';medium
253;Give the flight numbers of flights leaving from Aberdeen.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Give the flight numbers of flights leaving from Aberdeen.
";SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  'Aberdeen';medium
254;What are flight numbers of flights arriving at City 'Aberdeen'?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
What are flight numbers of flights arriving at City 'Aberdeen'?
";SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  'Aberdeen';medium
255;Give the flight numbers of flights arriving in Aberdeen.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Give the flight numbers of flights arriving in Aberdeen.
";SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  'Aberdeen';medium
256;Find the number of flights landing in the city of Aberdeen or Abilene.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Find the number of flights landing in the city of Aberdeen or Abilene.
";SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  'Aberdeen' OR T2.city  =  'Abilene';hard
257;How many flights land in Aberdeen or Abilene?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
How many flights land in Aberdeen or Abilene?
";SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  'Aberdeen' OR T2.city  =  'Abilene';hard
258;Find the name of airports which do not have any flight in and out.;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Find the name of airports which do not have any flight in and out.
";SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights);hard
259;Which airports do not have departing or arriving flights?;flight_2;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
airlines(uid, Airline, Abbreviation, Country)
airports(City, AirportCode, AirportName, Country, CountryAbbrev)
flights(Airline, FlightNo, SourceAirport, DestAirport)
Foreign keys:
flights.DestAirport = airports.AirportCode
flights.SourceAirport = airports.AirportCode
Question:
Which airports do not have departing or arriving flights?
";SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights);hard
260;How many employees are there?;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
How many employees are there?
";SELECT count(*) FROM employee;easy
261;Count the number of employees;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Count the number of employees
";SELECT count(*) FROM employee;easy
262;Sort employee names by their age in ascending order.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Sort employee names by their age in ascending order.
";SELECT name FROM employee ORDER BY age;easy
263;List the names of employees and sort in ascending order of age.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
List the names of employees and sort in ascending order of age.
";SELECT name FROM employee ORDER BY age;easy
264;What is the number of employees from each city?;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
What is the number of employees from each city?
";SELECT count(*) ,  city FROM employee GROUP BY city;medium
265;Count the number of employees for each city.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Count the number of employees for each city.
";SELECT count(*) ,  city FROM employee GROUP BY city;medium
266;Which cities do more than one employee under age 30 come from?;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Which cities do more than one employee under age 30 come from?
";SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1;medium
267;Find the cities that have more than one employee under age 30.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Find the cities that have more than one employee under age 30.
";SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1;medium
268;Find the number of shops in each location.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Find the number of shops in each location.
";SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION;medium
269;How many shops are there in each location?;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
How many shops are there in each location?
";SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION;medium
270;Find the manager name and district of the shop whose number of products is the largest.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Find the manager name and district of the shop whose number of products is the largest.
";SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1;medium
271;What are the manager name and district of the shop that sells the largest number of products?;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
What are the manager name and district of the shop that sells the largest number of products?
";SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1;medium
272;find the minimum and maximum number of products of all stores.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
find the minimum and maximum number of products of all stores.
";SELECT min(Number_products) ,  max(Number_products) FROM shop;medium
273;What are the minimum and maximum number of products across all the shops?;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
What are the minimum and maximum number of products across all the shops?
";SELECT min(Number_products) ,  max(Number_products) FROM shop;medium
274;Return the name, location and district of all shops in descending order of number of products.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Return the name, location and district of all shops in descending order of number of products.
";SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC;medium
275;Sort all the shops by number products in descending order, and return the name, location and district of each shop.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Sort all the shops by number products in descending order, and return the name, location and district of each shop.
";SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC;medium
276;Find the names of stores whose number products is more than the average number of products.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Find the names of stores whose number products is more than the average number of products.
";SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop);hard
277;Which shops' number products is above the average? Give me the shop names.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Which shops' number products is above the average? Give me the shop names.
";SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop);hard
278;find the name of employee who was awarded the most times in the evaluation.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
find the name of employee who was awarded the most times in the evaluation.
";SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1;extra
279;Which employee received the most awards in evaluations? Give me the employee name.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Which employee received the most awards in evaluations? Give me the employee name.
";SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1;extra
280;Find the name of the employee who got the highest one time bonus.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Find the name of the employee who got the highest one time bonus.
";SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1;hard
281;Which employee received the biggest bonus? Give me the employee name.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Which employee received the biggest bonus? Give me the employee name.
";SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1;hard
282;Find the names of employees who never won any award in the evaluation.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Find the names of employees who never won any award in the evaluation.
";SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation);hard
283;What are the names of the employees who never received any evaluation?;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
What are the names of the employees who never received any evaluation?
";SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation);hard
284;What is the name of the shop that is hiring the largest number of employees?;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
What is the name of the shop that is hiring the largest number of employees?
";SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1;extra
285;Which shop has the most employees? Give me the shop name.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Which shop has the most employees? Give me the shop name.
";SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1;extra
286;Find the name of the shops that do not hire any employee.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Find the name of the shops that do not hire any employee.
";SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring);hard
287;Which shops run with no employees? Find the shop names;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Which shops run with no employees? Find the shop names
";SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring);hard
288;"Find the number of employees hired in each shop; show the shop name as well.";employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Find the number of employees hired in each shop; show the shop name as well.
";SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name;medium
289;For each shop, return the number of employees working there and the name of the shop.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
For each shop, return the number of employees working there and the name of the shop.
";SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name;medium
290;What is total bonus given in all evaluations?;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
What is total bonus given in all evaluations?
";SELECT sum(bonus) FROM evaluation;easy
291;Find the total amount of bonus given in all the evaluations.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Find the total amount of bonus given in all the evaluations.
";SELECT sum(bonus) FROM evaluation;easy
292;Give me all the information about hiring.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Give me all the information about hiring.
";SELECT * FROM hiring;easy
293;What is all the information about hiring?;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
What is all the information about hiring?
";SELECT * FROM hiring;easy
294;Which district has both stores with less than 3000 products and stores with more than 10000 products?;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Which district has both stores with less than 3000 products and stores with more than 10000 products?
";SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000;hard
295;Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.
";SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000;hard
296;How many different store locations are there?;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
How many different store locations are there?
";SELECT count(DISTINCT LOCATION) FROM shop;easy
297;Count the number of distinct store locations.;employee_hire_evaluation;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
employee(Employee_ID, Name, Age, City)
shop(Shop_ID, Name, Location, District, Number_products, Manager_name)
hiring(Shop_ID, Employee_ID, Start_from, Is_full_time)
evaluation(Employee_ID, Year_awarded, Bonus)
Foreign keys:
hiring.Employee_ID = employee.Employee_ID
hiring.Shop_ID = shop.Shop_ID
evaluation.Employee_ID = employee.Employee_ID
Question:
Count the number of distinct store locations.
";SELECT count(DISTINCT LOCATION) FROM shop;easy
298;How many documents do we have?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
How many documents do we have?
";SELECT count(*) FROM Documents;easy
299;Count the number of documents.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Count the number of documents.
";SELECT count(*) FROM Documents;easy
300;List document IDs, document names, and document descriptions for all documents.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
List document IDs, document names, and document descriptions for all documents.
";SELECT document_id ,  document_name ,  document_description FROM Documents;medium
301;What are the ids, names, and descriptions for all documents?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the ids, names, and descriptions for all documents?
";SELECT document_id ,  document_name ,  document_description FROM Documents;medium
302;What is the document name and template id for document with description with the letter 'w' in it?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What is the document name and template id for document with description with the letter 'w' in it?
";SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE '%w%';medium
303;Return the names and template ids for documents that contain the letter w in their description.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Return the names and template ids for documents that contain the letter w in their description.
";SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE '%w%';medium
304;What is the document id, template id and description for document named 'Robbin CV'?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What is the document id, template id and description for document named 'Robbin CV'?
";SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  'Robbin CV';medium
305;Return the document id, template id, and description for the document with the name Robbin CV.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Return the document id, template id, and description for the document with the name Robbin CV.
";SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  'Robbin CV';medium
306;How many different templates do all document use?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
How many different templates do all document use?
";SELECT count(DISTINCT template_id) FROM Documents;easy
307;Count the number of different templates used for documents.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Count the number of different templates used for documents.
";SELECT count(DISTINCT template_id) FROM Documents;easy
308;How many documents are using the template with type code 'PPT'?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
How many documents are using the template with type code 'PPT'?
";SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT';medium
309;Count the number of documents that use the PPT template type.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Count the number of documents that use the PPT template type.
";SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT';medium
310;Show all template ids and number of documents using each template.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Show all template ids and number of documents using each template.
";SELECT template_id ,  count(*) FROM Documents GROUP BY template_id;medium
311;What are all different template ids used for documents, and how many times were each of them used?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are all different template ids used for documents, and how many times were each of them used?
";SELECT template_id ,  count(*) FROM Documents GROUP BY template_id;medium
312;What is the id and type code for the template used by the most documents?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What is the id and type code for the template used by the most documents?
";SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1;extra
313;Return the id and type code of the template that is used for the greatest number of documents.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Return the id and type code of the template that is used for the greatest number of documents.
";SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1;extra
314;Show ids for all templates that are used by more than one document.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Show ids for all templates that are used by more than one document.
";SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1;easy
315;What are the template ids of any templates used in more than a single document?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the template ids of any templates used in more than a single document?
";SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1;easy
316;Show ids for all templates not used by any document.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Show ids for all templates not used by any document.
";SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents;hard
317;What are the ids for templates that are not used in any documents?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the ids for templates that are not used in any documents?
";SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents;hard
318;How many templates do we have?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
How many templates do we have?
";SELECT count(*) FROM Templates;easy
319;Count the number of templates.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Count the number of templates.
";SELECT count(*) FROM Templates;easy
320;Show template ids, version numbers, and template type codes for all templates.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Show template ids, version numbers, and template type codes for all templates.
";SELECT template_id ,  version_number ,  template_type_code FROM Templates;medium
321;What are the ids, version numbers, and type codes for each template?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the ids, version numbers, and type codes for each template?
";SELECT template_id ,  version_number ,  template_type_code FROM Templates;medium
322;Show all distinct template type codes for all templates.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Show all distinct template type codes for all templates.
";SELECT DISTINCT template_type_code FROM Templates;easy
323;What are the different template type codes?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the different template type codes?
";SELECT DISTINCT template_type_code FROM Templates;easy
324;What are the ids of templates with template type code PP or PPT?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the ids of templates with template type code PP or PPT?
";SELECT template_id FROM Templates WHERE template_type_code  =  'PP' OR template_type_code  =  'PPT';medium
325;Return the ids of templates that have the code PP or PPT.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Return the ids of templates that have the code PP or PPT.
";SELECT template_id FROM Templates WHERE template_type_code  =  'PP' OR template_type_code  =  'PPT';medium
326;How many templates have template type code CV?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
How many templates have template type code CV?
";SELECT count(*) FROM Templates WHERE template_type_code  =  'CV';easy
327;Count the number of templates of the type CV.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Count the number of templates of the type CV.
";SELECT count(*) FROM Templates WHERE template_type_code  =  'CV';easy
328;What is the version number and template type code for the template with version number later than 5?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What is the version number and template type code for the template with version number later than 5?
";SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5;medium
329;Return the version numbers and template type codes of templates with a version number greater than 5.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Return the version numbers and template type codes of templates with a version number greater than 5.
";SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5;medium
330;Show all template type codes and number of templates for each.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Show all template type codes and number of templates for each.
";SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code;medium
331;What are the different template type codes, and how many templates correspond to each?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the different template type codes, and how many templates correspond to each?
";SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code;medium
332;Which template type code has most number of templates?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Which template type code has most number of templates?
";SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1;hard
333;Return the type code of the template type that the most templates belong to.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Return the type code of the template type that the most templates belong to.
";SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1;hard
334;Show all template type codes with less than three templates.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Show all template type codes with less than three templates.
";SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3;easy
335;What are the codes of template types that have fewer than 3 templates?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the codes of template types that have fewer than 3 templates?
";SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3;easy
336;What the smallest version number and its template type code?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What the smallest version number and its template type code?
";SELECT min(Version_Number) ,  template_type_code FROM Templates;medium
337;Return the lowest version number, along with its corresponding template type code.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Return the lowest version number, along with its corresponding template type code.
";SELECT min(Version_Number) ,  template_type_code FROM Templates;medium
338;What is the template type code of the template used by document with the name 'Data base'?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What is the template type code of the template used by document with the name 'Data base'?
";SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  'Data base';medium
339;Return the template type code of the template that is used by a document named Data base.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Return the template type code of the template that is used by a document named Data base.
";SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  'Data base';medium
340;Show all document names using templates with template type code BK.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Show all document names using templates with template type code BK.
";SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  'BK';medium
341;What are the names of documents that use templates with the code BK?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the names of documents that use templates with the code BK?
";SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  'BK';medium
342;Show all template type codes and the number of documents using each type.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Show all template type codes and the number of documents using each type.
";SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code;medium
343;What are the different template type codes, and how many documents use each type?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the different template type codes, and how many documents use each type?
";SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code;medium
344;Which template type code is used by most number of documents?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Which template type code is used by most number of documents?
";SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1;extra
345;Return the code of the template type that is most commonly used in documents.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Return the code of the template type that is most commonly used in documents.
";SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1;extra
346;Show all template type codes that are not used by any document.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Show all template type codes that are not used by any document.
";SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id;hard
347;What are the codes of template types that are not used for any document?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the codes of template types that are not used for any document?
";SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id;hard
348;Show all template type codes and descriptions.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Show all template type codes and descriptions.
";SELECT template_type_code ,  template_type_description FROM Ref_template_types;medium
349;What are the type codes and descriptions for all template types?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the type codes and descriptions for all template types?
";SELECT template_type_code ,  template_type_description FROM Ref_template_types;medium
350;What is the template type descriptions for template type code 'AD'.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What is the template type descriptions for template type code 'AD'.
";SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  'AD';easy
351;Return the template type description of the template type with the code AD.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Return the template type description of the template type with the code AD.
";SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  'AD';easy
352;What is the template type code for template type description 'Book'.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What is the template type code for template type description 'Book'.
";SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  'Book';easy
353;Return the type code of the template type with the description 'Book'.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Return the type code of the template type with the description 'Book'.
";SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  'Book';easy
354;What are the distinct template type descriptions for the templates ever used by any document?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the distinct template type descriptions for the templates ever used by any document?
";SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID;medium
355;Return the different descriptions for templates that have been used in a document.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Return the different descriptions for templates that have been used in a document.
";SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID;medium
356;What are the template ids with template type description 'Presentation'.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the template ids with template type description 'Presentation'.
";SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  'Presentation';medium
357;Return the ids corresponding to templates with the description 'Presentation'.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Return the ids corresponding to templates with the description 'Presentation'.
";SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  'Presentation';medium
358;How many paragraphs in total?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
How many paragraphs in total?
";SELECT count(*) FROM Paragraphs;easy
359;Count the number of paragraphs.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Count the number of paragraphs.
";SELECT count(*) FROM Paragraphs;easy
360;How many paragraphs for the document with name 'Summer Show'?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
How many paragraphs for the document with name 'Summer Show'?
";SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show';medium
361;Count the number of paragraphs in the document named 'Summer Show'.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Count the number of paragraphs in the document named 'Summer Show'.
";SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show';medium
362;Show paragraph details for paragraph with text 'Korea ' .;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Show paragraph details for paragraph with text 'Korea ' .
";select other_details from paragraphs where paragraph_text like 'korea';medium
363;What are the details for the paragraph that includes the text 'Korea ' ?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the details for the paragraph that includes the text 'Korea ' ?
";select other_details from paragraphs where paragraph_text like 'korea';medium
364;Show all paragraph ids and texts for the document with name 'Welcome to NY'.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Show all paragraph ids and texts for the document with name 'Welcome to NY'.
";SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY';medium
365;What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?
";SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY';medium
366;Show all paragraph texts for the document 'Customer reviews'.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Show all paragraph texts for the document 'Customer reviews'.
";SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  'Customer reviews';medium
367;What are the paragraph texts for the document with the name 'Customer reviews'?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the paragraph texts for the document with the name 'Customer reviews'?
";SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  'Customer reviews';medium
368;Show all document ids and the number of paragraphs in each document. Order by document id.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Show all document ids and the number of paragraphs in each document. Order by document id.
";SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id;medium
369;Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.
";SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id;medium
370;Show all document ids, names and the number of paragraphs in each document.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Show all document ids, names and the number of paragraphs in each document.
";SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id;medium
371;What are the ids and names of each document, as well as the number of paragraphs in each?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the ids and names of each document, as well as the number of paragraphs in each?
";SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id;medium
372;List all document ids with at least two paragraphs.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
List all document ids with at least two paragraphs.
";SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2;easy
373;What are the ids of documents that have 2 or more paragraphs?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the ids of documents that have 2 or more paragraphs?
";SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2;easy
374;What is the document id and name with greatest number of paragraphs?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What is the document id and name with greatest number of paragraphs?
";SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1;extra
375;Return the id and name of the document with the most paragraphs.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Return the id and name of the document with the most paragraphs.
";SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1;extra
376;What is the document id with least number of paragraphs?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What is the document id with least number of paragraphs?
";SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1;hard
377;Return the id of the document with the fewest paragraphs.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Return the id of the document with the fewest paragraphs.
";SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1;hard
378;What is the document id with 1 to 2 paragraphs?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What is the document id with 1 to 2 paragraphs?
";SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2;easy
379;Give the ids of documents that have between one and two paragraphs.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Give the ids of documents that have between one and two paragraphs.
";SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2;easy
380;Show the document id with paragraph text 'Brazil' and 'Ireland'.;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
Show the document id with paragraph text 'Brazil' and 'Ireland'.
";SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland';hard
381;What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?;cre_Doc_Template_Mgt;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Template_Types(Template_Type_Code, Template_Type_Description)
Templates(Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details)
Documents(Document_ID, Template_ID, Document_Name, Document_Description, Other_Details)
Paragraphs(Paragraph_ID, Document_ID, Paragraph_Text, Other_Details)
Foreign keys:
Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
Documents.Template_ID = Templates.Template_ID
Paragraphs.Document_ID = Documents.Document_ID
Question:
What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?
";SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland';hard
382;How many teachers are there?;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
How many teachers are there?
";SELECT count(*) FROM teacher;easy
383;What is the total count of teachers?;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
What is the total count of teachers?
";SELECT count(*) FROM teacher;easy
384;List the names of teachers in ascending order of age.;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
List the names of teachers in ascending order of age.
";SELECT Name FROM teacher ORDER BY Age ASC;easy
385;What are the names of the teachers ordered by ascending age?;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
What are the names of the teachers ordered by ascending age?
";SELECT Name FROM teacher ORDER BY Age ASC;easy
386;What are the age and hometown of teachers?;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
What are the age and hometown of teachers?
";SELECT Age ,  Hometown FROM teacher;medium
387;What is the age and hometown of every teacher?;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
What is the age and hometown of every teacher?
";SELECT Age ,  Hometown FROM teacher;medium
388;List the name of teachers whose hometown is not `` Little Lever Urban District '' .;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
List the name of teachers whose hometown is not `` Little Lever Urban District '' .
";select name from teacher where hometown != 'little lever urban district';easy
389;What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?
";select name from teacher where hometown != 'little lever urban district';easy
390;Show the name of teachers aged either 32 or 33?;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
Show the name of teachers aged either 32 or 33?
";SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33;medium
391;What are the names of the teachers who are aged either 32 or 33?;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
What are the names of the teachers who are aged either 32 or 33?
";SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33;medium
392;What is the hometown of the youngest teacher?;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
What is the hometown of the youngest teacher?
";SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1;medium
393;Where is the youngest teacher from?;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
Where is the youngest teacher from?
";SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1;medium
394;Show different hometown of teachers and the number of teachers from each hometown.;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
Show different hometown of teachers and the number of teachers from each hometown.
";SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown;medium
395;For each hometown, how many teachers are there?;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
For each hometown, how many teachers are there?
";SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown;medium
396;List the most common hometown of teachers.;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
List the most common hometown of teachers.
";SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1;hard
397;What is the most commmon hometowns for teachers?;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
What is the most commmon hometowns for teachers?
";SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1;hard
398;Show the hometowns shared by at least two teachers.;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
Show the hometowns shared by at least two teachers.
";SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2;easy
399;What are the towns from which at least two teachers come from?;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
What are the towns from which at least two teachers come from?
";SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2;easy
400;Show names of teachers and the courses they are arranged to teach.;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
Show names of teachers and the courses they are arranged to teach.
";SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID;medium
401;What is the name of each teacher and what course they teach?;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
What is the name of each teacher and what course they teach?
";SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID;medium
402;Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.
";SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name;hard
403;What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?
";SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name;hard
404;Show the name of the teacher for the math course.;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
Show the name of the teacher for the math course.
";SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  'Math';hard
405;What are the names of the people who teach math courses?;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
What are the names of the people who teach math courses?
";SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  'Math';hard
406;Show names of teachers and the number of courses they teach.;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
Show names of teachers and the number of courses they teach.
";SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name;medium
407;What are the names of the teachers and how many courses do they teach?;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
What are the names of the teachers and how many courses do they teach?
";SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name;medium
408;Show names of teachers that teach at least two courses.;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
Show names of teachers that teach at least two courses.
";SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2;medium
409;What are the names of the teachers who teach at least two courses?;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
What are the names of the teachers who teach at least two courses?
";SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2;medium
410;List the names of teachers who have not been arranged to teach courses.;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
List the names of teachers who have not been arranged to teach courses.
";SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange);hard
411;What are the names of the teachers whose courses have not been arranged?;course_teach;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
course(Course_ID, Staring_Date, Course)
teacher(Teacher_ID, Name, Age, Hometown)
course_arrange(Course_ID, Teacher_ID, Grade)
Foreign keys:
course_arrange.Teacher_ID = teacher.Teacher_ID
course_arrange.Course_ID = course.Course_ID
Question:
What are the names of the teachers whose courses have not been arranged?
";SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange);hard
412;How many visitors below age 30 are there?;museum_visit;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
museum(Museum_ID, Name, Num_of_Staff, Open_Year)
visitor(ID, Name, Level_of_membership, Age)
visit(Museum_ID, visitor_ID, Num_of_Ticket, Total_spent)
Foreign keys:
visit.visitor_ID = visitor.ID
visit.Museum_ID = museum.Museum_ID
Question:
How many visitors below age 30 are there?
";SELECT count(*) FROM visitor WHERE age  <  30;easy
413;Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.;museum_visit;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
museum(Museum_ID, Name, Num_of_Staff, Open_Year)
visitor(ID, Name, Level_of_membership, Age)
visit(Museum_ID, visitor_ID, Num_of_Ticket, Total_spent)
Foreign keys:
visit.visitor_ID = visitor.ID
visit.Museum_ID = museum.Museum_ID
Question:
Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.
";SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC;medium
414;What is the average age of the visitors whose membership level is not higher than 4?;museum_visit;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
museum(Museum_ID, Name, Num_of_Staff, Open_Year)
visitor(ID, Name, Level_of_membership, Age)
visit(Museum_ID, visitor_ID, Num_of_Ticket, Total_spent)
Foreign keys:
visit.visitor_ID = visitor.ID
visit.Museum_ID = museum.Museum_ID
Question:
What is the average age of the visitors whose membership level is not higher than 4?
";SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4;easy
415;Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.;museum_visit;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
museum(Museum_ID, Name, Num_of_Staff, Open_Year)
visitor(ID, Name, Level_of_membership, Age)
visit(Museum_ID, visitor_ID, Num_of_Ticket, Total_spent)
Foreign keys:
visit.visitor_ID = visitor.ID
visit.Museum_ID = museum.Museum_ID
Question:
Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.
";SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC;medium
416;Find the id and name of the museum that has the most staff members?;museum_visit;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
museum(Museum_ID, Name, Num_of_Staff, Open_Year)
visitor(ID, Name, Level_of_membership, Age)
visit(Museum_ID, visitor_ID, Num_of_Ticket, Total_spent)
Foreign keys:
visit.visitor_ID = visitor.ID
visit.Museum_ID = museum.Museum_ID
Question:
Find the id and name of the museum that has the most staff members?
";SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1;medium
417;Find the average number of staff working for the museums that were open before 2009.;museum_visit;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
museum(Museum_ID, Name, Num_of_Staff, Open_Year)
visitor(ID, Name, Level_of_membership, Age)
visit(Museum_ID, visitor_ID, Num_of_Ticket, Total_spent)
Foreign keys:
visit.visitor_ID = visitor.ID
visit.Museum_ID = museum.Museum_ID
Question:
Find the average number of staff working for the museums that were open before 2009.
";SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009;easy
418;What are the opening year and staff number of the museum named Plaza Museum?;museum_visit;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
museum(Museum_ID, Name, Num_of_Staff, Open_Year)
visitor(ID, Name, Level_of_membership, Age)
visit(Museum_ID, visitor_ID, Num_of_Ticket, Total_spent)
Foreign keys:
visit.visitor_ID = visitor.ID
visit.Museum_ID = museum.Museum_ID
Question:
What are the opening year and staff number of the museum named Plaza Museum?
";SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum';medium
419;find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.;museum_visit;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
museum(Museum_ID, Name, Num_of_Staff, Open_Year)
visitor(ID, Name, Level_of_membership, Age)
visit(Museum_ID, visitor_ID, Num_of_Ticket, Total_spent)
Foreign keys:
visit.visitor_ID = visitor.ID
visit.Museum_ID = museum.Museum_ID
Question:
find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.
";SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010);hard
420;find the id, name and age for visitors who visited some museums more than once.;museum_visit;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
museum(Museum_ID, Name, Num_of_Staff, Open_Year)
visitor(ID, Name, Level_of_membership, Age)
visit(Museum_ID, visitor_ID, Num_of_Ticket, Total_spent)
Foreign keys:
visit.visitor_ID = visitor.ID
visit.Museum_ID = museum.Museum_ID
Question:
find the id, name and age for visitors who visited some museums more than once.
";SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1;medium
421;What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?;museum_visit;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
museum(Museum_ID, Name, Num_of_Staff, Open_Year)
visitor(ID, Name, Level_of_membership, Age)
visit(Museum_ID, visitor_ID, Num_of_Ticket, Total_spent)
Foreign keys:
visit.visitor_ID = visitor.ID
visit.Museum_ID = museum.Museum_ID
Question:
What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?
";SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1;extra
422;What are the id and name of the museum visited most times?;museum_visit;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
museum(Museum_ID, Name, Num_of_Staff, Open_Year)
visitor(ID, Name, Level_of_membership, Age)
visit(Museum_ID, visitor_ID, Num_of_Ticket, Total_spent)
Foreign keys:
visit.visitor_ID = visitor.ID
visit.Museum_ID = museum.Museum_ID
Question:
What are the id and name of the museum visited most times?
";SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1;extra
423;What is the name of the museum that had no visitor yet?;museum_visit;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
museum(Museum_ID, Name, Num_of_Staff, Open_Year)
visitor(ID, Name, Level_of_membership, Age)
visit(Museum_ID, visitor_ID, Num_of_Ticket, Total_spent)
Foreign keys:
visit.visitor_ID = visitor.ID
visit.Museum_ID = museum.Museum_ID
Question:
What is the name of the museum that had no visitor yet?
";SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit);hard
424;Find the name and age of the visitor who bought the most tickets at once.;museum_visit;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
museum(Museum_ID, Name, Num_of_Staff, Open_Year)
visitor(ID, Name, Level_of_membership, Age)
visit(Museum_ID, visitor_ID, Num_of_Ticket, Total_spent)
Foreign keys:
visit.visitor_ID = visitor.ID
visit.Museum_ID = museum.Museum_ID
Question:
Find the name and age of the visitor who bought the most tickets at once.
";SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1;hard
425;What are the average and maximum number of tickets bought in all visits?;museum_visit;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
museum(Museum_ID, Name, Num_of_Staff, Open_Year)
visitor(ID, Name, Level_of_membership, Age)
visit(Museum_ID, visitor_ID, Num_of_Ticket, Total_spent)
Foreign keys:
visit.visitor_ID = visitor.ID
visit.Museum_ID = museum.Museum_ID
Question:
What are the average and maximum number of tickets bought in all visits?
";SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit;medium
426;What is the total ticket expense of the visitors whose membership level is 1?;museum_visit;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
museum(Museum_ID, Name, Num_of_Staff, Open_Year)
visitor(ID, Name, Level_of_membership, Age)
visit(Museum_ID, visitor_ID, Num_of_Ticket, Total_spent)
Foreign keys:
visit.visitor_ID = visitor.ID
visit.Museum_ID = museum.Museum_ID
Question:
What is the total ticket expense of the visitors whose membership level is 1?
";SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1;medium
427;What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?;museum_visit;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
museum(Museum_ID, Name, Num_of_Staff, Open_Year)
visitor(ID, Name, Level_of_membership, Age)
visit(Museum_ID, visitor_ID, Num_of_Ticket, Total_spent)
Foreign keys:
visit.visitor_ID = visitor.ID
visit.Museum_ID = museum.Museum_ID
Question:
What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?
";SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011;extra
428;Find the number of visitors who did not visit any museum opened after 2010.;museum_visit;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
museum(Museum_ID, Name, Num_of_Staff, Open_Year)
visitor(ID, Name, Level_of_membership, Age)
visit(Museum_ID, visitor_ID, Num_of_Ticket, Total_spent)
Foreign keys:
visit.visitor_ID = visitor.ID
visit.Museum_ID = museum.Museum_ID
Question:
Find the number of visitors who did not visit any museum opened after 2010.
";SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010);extra
429;How many museums were opened after 2013 or before 2008?;museum_visit;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
museum(Museum_ID, Name, Num_of_Staff, Open_Year)
visitor(ID, Name, Level_of_membership, Age)
visit(Museum_ID, visitor_ID, Num_of_Ticket, Total_spent)
Foreign keys:
visit.visitor_ID = visitor.ID
visit.Museum_ID = museum.Museum_ID
Question:
How many museums were opened after 2013 or before 2008?
";SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008;medium
430;Find the total number of players.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the total number of players.
";SELECT count(*) FROM players;easy
431;How many players are there?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
How many players are there?
";SELECT count(*) FROM players;easy
432;Find the total number of matches.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the total number of matches.
";SELECT count(*) FROM matches;easy
433;Count the number of matches.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Count the number of matches.
";SELECT count(*) FROM matches;easy
434;List the first name and birth date of all players from the country with code USA.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
List the first name and birth date of all players from the country with code USA.
";SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA';medium
435;What are the first names and birth dates of players from the USA?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What are the first names and birth dates of players from the USA?
";SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA';medium
436;Find the average age of losers and winners of all matches.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the average age of losers and winners of all matches.
";SELECT avg(loser_age) ,  avg(winner_age) FROM matches;medium
437;What are the average ages of losers and winners across matches?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What are the average ages of losers and winners across matches?
";SELECT avg(loser_age) ,  avg(winner_age) FROM matches;medium
438;Find the average rank of winners in all matches.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the average rank of winners in all matches.
";SELECT avg(winner_rank) FROM matches;easy
439;What is the average rank for winners in all matches?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What is the average rank for winners in all matches?
";SELECT avg(winner_rank) FROM matches;easy
440;Find the highest rank of losers in all matches.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the highest rank of losers in all matches.
";SELECT min(loser_rank) FROM matches;easy
441;What is the best rank of losers across all matches?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What is the best rank of losers across all matches?
";SELECT min(loser_rank) FROM matches;easy
442;find the number of distinct country codes of all players.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
find the number of distinct country codes of all players.
";SELECT count(DISTINCT country_code) FROM players;easy
443;How many distinct countries do players come from?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
How many distinct countries do players come from?
";SELECT count(DISTINCT country_code) FROM players;easy
444;Find the number of distinct name of losers.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the number of distinct name of losers.
";SELECT count(DISTINCT loser_name) FROM matches;easy
445;How many different loser names are there?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
How many different loser names are there?
";SELECT count(DISTINCT loser_name) FROM matches;easy
446;Find the name of tourney that has more than 10 matches.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the name of tourney that has more than 10 matches.
";SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10;easy
447;What are the names of tournaments that have more than 10 matches?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What are the names of tournaments that have more than 10 matches?
";SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10;easy
448;List the names of all winners who played in both 2013 and 2016.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
List the names of all winners who played in both 2013 and 2016.
";SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016;hard
449;What are the names of players who won in both 2013 and 2016?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What are the names of players who won in both 2013 and 2016?
";SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016;hard
450;List the number of all matches who played in years of 2013 or 2016.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
List the number of all matches who played in years of 2013 or 2016.
";SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016;medium
451;How many matches were played in 2013 or 2016?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
How many matches were played in 2013 or 2016?
";SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016;medium
452;What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?
";SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open';extra
453;What are the first names and country codes for players who won both the WTA Championships and the Australian Open?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What are the first names and country codes for players who won both the WTA Championships and the Australian Open?
";SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open';extra
454;Find the first name and country code of the oldest player.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the first name and country code of the oldest player.
";SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1;medium
455;What is the first name and country code of the oldest player?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What is the first name and country code of the oldest player?
";SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1;medium
456;List the first and last name of all players in the order of birth date.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
List the first and last name of all players in the order of birth date.
";SELECT first_name ,  last_name FROM players ORDER BY birth_date;medium
457;What are the full names of all players, sorted by birth date?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What are the full names of all players, sorted by birth date?
";SELECT first_name ,  last_name FROM players ORDER BY birth_date;medium
458;List the first and last name of all players who are left / L hand in the order of birth date.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
List the first and last name of all players who are left / L hand in the order of birth date.
";SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date;medium
459;What are the full names of all left handed players, in order of birth date?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What are the full names of all left handed players, in order of birth date?
";SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date;medium
460;Find the first name and country code of the player who did the most number of tours.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the first name and country code of the player who did the most number of tours.
";SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1;hard
461;What is the first name and country code of the player with the most tours?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What is the first name and country code of the player with the most tours?
";SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1;hard
462;Find the year that has the most number of matches.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the year that has the most number of matches.
";SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1;hard
463;Which year had the most matches?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Which year had the most matches?
";SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1;hard
464;Find the name and rank points of the winner who won the most times.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the name and rank points of the winner who won the most times.
";SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1;hard
465;What is the name of the winner who has won the most matches, and how many rank points does this player have?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What is the name of the winner who has won the most matches, and how many rank points does this player have?
";SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1;hard
466;Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.
";SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1;hard
467;What is the name of the winner with the most rank points who participated in the Australian Open tournament?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What is the name of the winner with the most rank points who participated in the Australian Open tournament?
";SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1;hard
468;find the names of loser and winner who played in the match with greatest number of minutes.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
find the names of loser and winner who played in the match with greatest number of minutes.
";SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1;medium
469;What are the names of the winner and loser who played in the longest match?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What are the names of the winner and loser who played in the longest match?
";SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1;medium
470;Find the average ranking for each player and their first name.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the average ranking for each player and their first name.
";SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name;medium
471;What are the first names of all players, and their average rankings?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What are the first names of all players, and their average rankings?
";SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name;medium
472;Find the total ranking points for each player and their first name.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the total ranking points for each player and their first name.
";SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name;medium
473;What are the first names of all players, and their total ranking points?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What are the first names of all players, and their total ranking points?
";SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name;medium
474;find the number of players for each country.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
find the number of players for each country.
";SELECT count(*) ,  country_code FROM players GROUP BY country_code;medium
475;How many players are from each country?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
How many players are from each country?
";SELECT count(*) ,  country_code FROM players GROUP BY country_code;medium
476;find the code of the country where has the greatest number of players.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
find the code of the country where has the greatest number of players.
";SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1;hard
477;What is the code of the country with the most players?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What is the code of the country with the most players?
";SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1;hard
478;Find the codes of countries that have more than 50 players.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the codes of countries that have more than 50 players.
";SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50;easy
479;What are the codes of countries with more than 50 players?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What are the codes of countries with more than 50 players?
";SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50;easy
480;Find the total number of tours for each ranking date.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the total number of tours for each ranking date.
";SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date;medium
481;How many total tours were there for each ranking date?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
How many total tours were there for each ranking date?
";SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date;medium
482;Find the number of matches happened in each year.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the number of matches happened in each year.
";SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR;medium
483;How many matches were played in each year?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
How many matches were played in each year?
";SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR;medium
484;Find the name and rank of the 3 youngest winners across all matches.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the name and rank of the 3 youngest winners across all matches.
";SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3;medium
485;What are the names and ranks of the three youngest winners across all matches?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What are the names and ranks of the three youngest winners across all matches?
";SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3;medium
486;How many different winners both participated in the WTA Championships and were left handed?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
How many different winners both participated in the WTA Championships and were left handed?
";SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L';medium
487;Find the number of left handed winners who participated in the WTA Championships.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the number of left handed winners who participated in the WTA Championships.
";SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L';medium
488;Find the first name, country code and birth date of the winner who has the highest rank points in all matches.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the first name, country code and birth date of the winner who has the highest rank points in all matches.
";SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1;hard
489;What is the first name, country code, and birth date of the player with the most winner rank points across all matches?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
What is the first name, country code, and birth date of the player with the most winner rank points across all matches?
";SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1;hard
490;Find the number of players for each hand type.;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
Find the number of players for each hand type.
";SELECT count(*) ,  hand FROM players GROUP BY hand;medium
491;How many players are there for each hand type?;wta_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
players(player_id, first_name, last_name, hand, birth_date, country_code)
matches(best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year)
rankings(ranking_date, ranking, player_id, ranking_points, tours)
Foreign keys:
matches.winner_id = players.player_id
matches.loser_id = players.player_id
rankings.player_id = players.player_id
Question:
How many players are there for each hand type?
";SELECT count(*) ,  hand FROM players GROUP BY hand;medium
492;How many ships ended up being 'Captured'?;battle_death;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
battle(id, name, date, bulgarian_commander, latin_commander, result)
ship(lost_in_battle, id, name, tonnage, ship_type, location, disposition_of_ship)
death(caused_by_ship_id, id, note, killed, injured)
Foreign keys:
ship.lost_in_battle = battle.id
death.caused_by_ship_id = ship.id
Question:
How many ships ended up being 'Captured'?
";SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured';easy
493;List the name and tonnage ordered by in descending alphaetical order for the names.;battle_death;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
battle(id, name, date, bulgarian_commander, latin_commander, result)
ship(lost_in_battle, id, name, tonnage, ship_type, location, disposition_of_ship)
death(caused_by_ship_id, id, note, killed, injured)
Foreign keys:
ship.lost_in_battle = battle.id
death.caused_by_ship_id = ship.id
Question:
List the name and tonnage ordered by in descending alphaetical order for the names.
";SELECT name ,  tonnage FROM ship ORDER BY name DESC;medium
494;List the name, date and result of each battle.;battle_death;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
battle(id, name, date, bulgarian_commander, latin_commander, result)
ship(lost_in_battle, id, name, tonnage, ship_type, location, disposition_of_ship)
death(caused_by_ship_id, id, note, killed, injured)
Foreign keys:
ship.lost_in_battle = battle.id
death.caused_by_ship_id = ship.id
Question:
List the name, date and result of each battle.
";SELECT name ,  date FROM battle;medium
495;What is maximum and minimum death toll caused each time?;battle_death;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
battle(id, name, date, bulgarian_commander, latin_commander, result)
ship(lost_in_battle, id, name, tonnage, ship_type, location, disposition_of_ship)
death(caused_by_ship_id, id, note, killed, injured)
Foreign keys:
ship.lost_in_battle = battle.id
death.caused_by_ship_id = ship.id
Question:
What is maximum and minimum death toll caused each time?
";SELECT max(killed) ,  min(killed) FROM death;medium
496;What is the average number of injuries caused each time?;battle_death;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
battle(id, name, date, bulgarian_commander, latin_commander, result)
ship(lost_in_battle, id, name, tonnage, ship_type, location, disposition_of_ship)
death(caused_by_ship_id, id, note, killed, injured)
Foreign keys:
ship.lost_in_battle = battle.id
death.caused_by_ship_id = ship.id
Question:
What is the average number of injuries caused each time?
";SELECT avg(injured) FROM death;easy
497;What are the death and injury situations caused by the ship with tonnage 't'?;battle_death;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
battle(id, name, date, bulgarian_commander, latin_commander, result)
ship(lost_in_battle, id, name, tonnage, ship_type, location, disposition_of_ship)
death(caused_by_ship_id, id, note, killed, injured)
Foreign keys:
ship.lost_in_battle = battle.id
death.caused_by_ship_id = ship.id
Question:
What are the death and injury situations caused by the ship with tonnage 't'?
";SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't';medium
498;What are the name and results of the battles when the bulgarian commander is not 'Boril';battle_death;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
battle(id, name, date, bulgarian_commander, latin_commander, result)
ship(lost_in_battle, id, name, tonnage, ship_type, location, disposition_of_ship)
death(caused_by_ship_id, id, note, killed, injured)
Foreign keys:
ship.lost_in_battle = battle.id
death.caused_by_ship_id = ship.id
Question:
What are the name and results of the battles when the bulgarian commander is not 'Boril'
";SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril';medium
499;What are the different ids and names of the battles that lost any 'Brig' type shipes?;battle_death;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
battle(id, name, date, bulgarian_commander, latin_commander, result)
ship(lost_in_battle, id, name, tonnage, ship_type, location, disposition_of_ship)
death(caused_by_ship_id, id, note, killed, injured)
Foreign keys:
ship.lost_in_battle = battle.id
death.caused_by_ship_id = ship.id
Question:
What are the different ids and names of the battles that lost any 'Brig' type shipes?
";SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig';medium
500;What are the ids and names of the battles that led to more than 10 people killed in total.;battle_death;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
battle(id, name, date, bulgarian_commander, latin_commander, result)
ship(lost_in_battle, id, name, tonnage, ship_type, location, disposition_of_ship)
death(caused_by_ship_id, id, note, killed, injured)
Foreign keys:
ship.lost_in_battle = battle.id
death.caused_by_ship_id = ship.id
Question:
What are the ids and names of the battles that led to more than 10 people killed in total.
";SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10;hard
501;What is the ship id and name that caused most total injuries?;battle_death;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
battle(id, name, date, bulgarian_commander, latin_commander, result)
ship(lost_in_battle, id, name, tonnage, ship_type, location, disposition_of_ship)
death(caused_by_ship_id, id, note, killed, injured)
Foreign keys:
ship.lost_in_battle = battle.id
death.caused_by_ship_id = ship.id
Question:
What is the ship id and name that caused most total injuries?
";SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1;extra
502;What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?;battle_death;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
battle(id, name, date, bulgarian_commander, latin_commander, result)
ship(lost_in_battle, id, name, tonnage, ship_type, location, disposition_of_ship)
death(caused_by_ship_id, id, note, killed, injured)
Foreign keys:
ship.lost_in_battle = battle.id
death.caused_by_ship_id = ship.id
Question:
What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?
";SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I';medium
503;How many different results are there for the battles?;battle_death;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
battle(id, name, date, bulgarian_commander, latin_commander, result)
ship(lost_in_battle, id, name, tonnage, ship_type, location, disposition_of_ship)
death(caused_by_ship_id, id, note, killed, injured)
Foreign keys:
ship.lost_in_battle = battle.id
death.caused_by_ship_id = ship.id
Question:
How many different results are there for the battles?
";SELECT count(DISTINCT RESULT) FROM battle;easy
504;How many battles did not lose any ship with tonnage '225'?;battle_death;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
battle(id, name, date, bulgarian_commander, latin_commander, result)
ship(lost_in_battle, id, name, tonnage, ship_type, location, disposition_of_ship)
death(caused_by_ship_id, id, note, killed, injured)
Foreign keys:
ship.lost_in_battle = battle.id
death.caused_by_ship_id = ship.id
Question:
How many battles did not lose any ship with tonnage '225'?
";"SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );";extra
505;List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta';battle_death;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
battle(id, name, date, bulgarian_commander, latin_commander, result)
ship(lost_in_battle, id, name, tonnage, ship_type, location, disposition_of_ship)
death(caused_by_ship_id, id, note, killed, injured)
Foreign keys:
ship.lost_in_battle = battle.id
death.caused_by_ship_id = ship.id
Question:
List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'
";SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta';extra
506;Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.;battle_death;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
battle(id, name, date, bulgarian_commander, latin_commander, result)
ship(lost_in_battle, id, name, tonnage, ship_type, location, disposition_of_ship)
death(caused_by_ship_id, id, note, killed, injured)
Foreign keys:
ship.lost_in_battle = battle.id
death.caused_by_ship_id = ship.id
Question:
Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.
";SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel';extra
507;What are the notes of the death events which has substring 'East'?;battle_death;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
battle(id, name, date, bulgarian_commander, latin_commander, result)
ship(lost_in_battle, id, name, tonnage, ship_type, location, disposition_of_ship)
death(caused_by_ship_id, id, note, killed, injured)
Foreign keys:
ship.lost_in_battle = battle.id
death.caused_by_ship_id = ship.id
Question:
What are the notes of the death events which has substring 'East'?
";SELECT note FROM death WHERE note LIKE '%East%';medium
508;what are all the addresses including line 1 and line 2?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
what are all the addresses including line 1 and line 2?
";SELECT line_1 ,  line_2 FROM addresses;medium
509;What is the first and second line for all addresses?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the first and second line for all addresses?
";SELECT line_1 ,  line_2 FROM addresses;medium
510;How many courses in total are listed?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
How many courses in total are listed?
";SELECT count(*) FROM Courses;easy
511;How many courses are there?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
How many courses are there?
";SELECT count(*) FROM Courses;easy
512;How is the math course described?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
How is the math course described?
";SELECT course_description FROM Courses WHERE course_name  =  'math';easy
513;What are the descriptions for all the math courses?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What are the descriptions for all the math courses?
";SELECT course_description FROM Courses WHERE course_name  =  'math';easy
514;What is the zip code of the address in the city Port Chelsea?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the zip code of the address in the city Port Chelsea?
";SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea';easy
515;What is the zip code for Port Chelsea?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the zip code for Port Chelsea?
";SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea';easy
516;Which department offers the most number of degrees? List department name and id.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
Which department offers the most number of degrees? List department name and id.
";SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1;extra
517;What is the name and id of the department with the most number of degrees ?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the name and id of the department with the most number of degrees ?
";select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1;extra
518;How many departments offer any degree?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
How many departments offer any degree?
";SELECT count(DISTINCT department_id) FROM Degree_Programs;easy
519;How many different departments offer degrees?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
How many different departments offer degrees?
";SELECT count(DISTINCT department_id) FROM Degree_Programs;easy
520;How many different degree names are offered?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
How many different degree names are offered?
";SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs;easy
521;How many different degrees are offered?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
How many different degrees are offered?
";SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs;easy
522;How many degrees does the engineering department offer?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
How many degrees does the engineering department offer?
";SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer';medium
523;How many degrees does the engineering department have?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
How many degrees does the engineering department have?
";SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer';medium
524;What are the names and descriptions of all the sections?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What are the names and descriptions of all the sections?
";SELECT section_name ,  section_description FROM Sections;medium
525;What are the names and descriptions for all the sections?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What are the names and descriptions for all the sections?
";SELECT section_name ,  section_description FROM Sections;medium
526;What are the names and id of courses having at most 2 sections?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What are the names and id of courses having at most 2 sections?
";SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2;medium
527;What are the names and ids of every course with less than 2 sections?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What are the names and ids of every course with less than 2 sections?
";SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2;medium
528;List the section_name in reversed lexicographical order.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
List the section_name in reversed lexicographical order.
";SELECT section_name FROM Sections ORDER BY section_name DESC;easy
529;What are the names of the sections in reverse alphabetical order?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What are the names of the sections in reverse alphabetical order?
";SELECT section_name FROM Sections ORDER BY section_name DESC;easy
530;What is the semester which most student registered in? Show both the name and the id.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the semester which most student registered in? Show both the name and the id.
";SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1;extra
531;For each semester, what is the name and id of the one with the most students registered?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
For each semester, what is the name and id of the one with the most students registered?
";SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1;extra
532;What is the description of the department whose name has the substring the computer?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the description of the department whose name has the substring the computer?
";SELECT department_description FROM Departments WHERE department_name LIKE '%computer%';medium
533;What is the department description for the one whose name has the word computer?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the department description for the one whose name has the word computer?
";SELECT department_description FROM Departments WHERE department_name LIKE '%computer%';medium
534;Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.
";SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2;medium
535;What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?
";SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2;medium
536;Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.
";SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor';hard
537;What are the first, middle, and last names for everybody enrolled in a Bachelors program?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What are the first, middle, and last names for everybody enrolled in a Bachelors program?
";SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor';hard
538;Find the kind of program which most number of students are enrolled in?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
Find the kind of program which most number of students are enrolled in?
";SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1;extra
539;What is the degree summary name that has the most number of students enrolled?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the degree summary name that has the most number of students enrolled?
";SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1;extra
540;Find the program which most number of students are enrolled in. List both the id and the summary.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
Find the program which most number of students are enrolled in. List both the id and the summary.
";SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1;extra
541;What is the program id and the summary of the degree that has the most students enrolled?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the program id and the summary of the degree that has the most students enrolled?
";SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1;extra
542;Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.
";SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;extra
543;What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?
";SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;extra
544;Which semesters do not have any student enrolled? List the semester name.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
Which semesters do not have any student enrolled? List the semester name.
";SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment );hard
545;What is the name of the semester with no students enrolled?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the name of the semester with no students enrolled?
";SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment );hard
546;What are all the course names of the courses which ever have students enrolled in?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What are all the course names of the courses which ever have students enrolled in?
";SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id;easy
547;What are the names of all courses that have some students enrolled?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What are the names of all courses that have some students enrolled?
";SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id;easy
548;What's the name of the course with most number of enrollments?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What's the name of the course with most number of enrollments?
";SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1;extra
549;What is the name of the course with the most students enrolled?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the name of the course with the most students enrolled?
";SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1;extra
550;Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.
";SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id;extra
551;What are the last name of the students who live in North Carolina but have not registered in any degree programs?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What are the last name of the students who live in North Carolina but have not registered in any degree programs?
";SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id;extra
552;Show the date and id of the transcript with at least 2 course results.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
Show the date and id of the transcript with at least 2 course results.
";SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2;medium
553;What is the date and id of the transcript with at least 2 courses listed?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the date and id of the transcript with at least 2 courses listed?
";SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2;medium
554;What is the phone number of the man with the first name Timmothy and the last name Ward?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the phone number of the man with the first name Timmothy and the last name Ward?
";SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward';medium
555;What is the mobile phone number of the student named Timmothy Ward ?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the mobile phone number of the student named Timmothy Ward ?
";select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward';medium
556;Who is the first student to register? List the first name, middle name and last name.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
Who is the first student to register? List the first name, middle name and last name.
";SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1;medium
557;What is the first, middle, and last name of the first student to register?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the first, middle, and last name of the first student to register?
";SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1;medium
558;Who is the earliest graduate of the school? List the first name, middle name and last name.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
Who is the earliest graduate of the school? List the first name, middle name and last name.
";SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1;medium
559;What is the first, middle, and last name of the earliest school graduate?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the first, middle, and last name of the earliest school graduate?
";SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1;medium
560;Whose permanent address is different from his or her current address? List his or her first name.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
Whose permanent address is different from his or her current address? List his or her first name.
";SELECT first_name FROM Students WHERE current_address_id != permanent_address_id;easy
561;What is the first name of the student whose permanent address is different from his or her current one?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the first name of the student whose permanent address is different from his or her current one?
";SELECT first_name FROM Students WHERE current_address_id != permanent_address_id;easy
562;Which address holds the most number of students currently? List the address id and all lines.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
Which address holds the most number of students currently? List the address id and all lines.
";SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1;extra
563;What is the id, line 1, and line 2 of the address with the most students?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the id, line 1, and line 2 of the address with the most students?
";SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1;extra
564;On average, when were the transcripts printed?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
On average, when were the transcripts printed?
";SELECT avg(transcript_date) FROM Transcripts;easy
565;What is the average transcript date?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the average transcript date?
";SELECT avg(transcript_date) FROM Transcripts;easy
566;When is the first transcript released? List the date and details.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
When is the first transcript released? List the date and details.
";SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1;medium
567;What is the earliest date of a transcript release, and what details can you tell me?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the earliest date of a transcript release, and what details can you tell me?
";SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1;medium
568;How many transcripts are released?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
How many transcripts are released?
";SELECT count(*) FROM Transcripts;easy
569;How many transcripts are listed?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
How many transcripts are listed?
";SELECT count(*) FROM Transcripts;easy
570;What is the last transcript release date?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the last transcript release date?
";SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1;medium
571;When was the last transcript released?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
When was the last transcript released?
";SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1;medium
572;How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.
";SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1;hard
573;What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?
";SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1;hard
574;Show the date of the transcript which shows the least number of results, also list the id.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
Show the date of the transcript which shows the least number of results, also list the id.
";SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1;extra
575;What is the date and id of the transcript with the least number of results?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the date and id of the transcript with the least number of results?
";SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1;extra
576;Find the semester when both Master students and Bachelor students got enrolled in.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
Find the semester when both Master students and Bachelor students got enrolled in.
";SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor';extra
577;What is the id of the semester that had both Masters and Bachelors students enrolled?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the id of the semester that had both Masters and Bachelors students enrolled?
";SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor';extra
578;How many different addresses do the students currently live?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
How many different addresses do the students currently live?
";SELECT count(DISTINCT current_address_id) FROM Students;easy
579;What are the different addresses that have students living there?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What are the different addresses that have students living there?
";SELECT count(DISTINCT current_address_id) FROM Students;easy
580;List all the student details in reversed lexicographical order.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
List all the student details in reversed lexicographical order.
";SELECT other_student_details FROM Students ORDER BY other_student_details DESC;easy
581;What other details can you tell me about students in reverse alphabetical order?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What other details can you tell me about students in reverse alphabetical order?
";SELECT other_student_details FROM Students ORDER BY other_student_details DESC;easy
582;Describe the section h.;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
Describe the section h.
";SELECT section_description FROM Sections WHERE section_name  =  'h';easy
583;What is the description for the section named h?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What is the description for the section named h?
";SELECT section_description FROM Sections WHERE section_name  =  'h';easy
584;Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .
";select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582';hard
585;What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?;student_transcripts_tracking;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Addresses(address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details)
Courses(course_id, course_name, course_description, other_details)
Departments(department_id, department_name, department_description, other_details)
Degree_Programs(degree_program_id, department_id, degree_summary_name, degree_summary_description, other_details)
Sections(section_id, course_id, section_name, section_description, other_details)
Semesters(semester_id, semester_name, semester_description, other_details)
Students(student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details)
Student_Enrolment(student_enrolment_id, degree_program_id, semester_id, student_id, other_details)
Student_Enrolment_Courses(student_course_id, course_id, student_enrolment_id)
Transcripts(transcript_id, transcript_date, other_details)
Transcript_Contents(student_course_id, transcript_id)
Foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
Question:
What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?
";select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582';hard
586;List the title of all cartoons in alphabetical order.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
List the title of all cartoons in alphabetical order.
";SELECT Title FROM Cartoon ORDER BY title;easy
587;What are the titles of the cartoons sorted alphabetically?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What are the titles of the cartoons sorted alphabetically?
";SELECT Title FROM Cartoon ORDER BY title;easy
588;List all cartoon directed by 'Ben Jones'.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
List all cartoon directed by 'Ben Jones'.
";"SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';";easy
589;What are the names of all cartoons directed by Ben Jones?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What are the names of all cartoons directed by Ben Jones?
";"SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';";easy
590;How many cartoons were written by 'Joseph Kuhr'?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
How many cartoons were written by 'Joseph Kuhr'?
";"SELECT count(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';";easy
591;What is the number of cartoones written by Joseph Kuhr?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is the number of cartoones written by Joseph Kuhr?
";"SELECT count(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';";easy
592;list all cartoon titles and their directors ordered by their air date;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
list all cartoon titles and their directors ordered by their air date
";SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date;medium
593;What is the name and directors of all the cartoons that are ordered by air date?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is the name and directors of all the cartoons that are ordered by air date?
";SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date;medium
594;List the title of all cartoon directed by 'Ben Jones' or 'Brandon Vietti'.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
List the title of all cartoon directed by 'Ben Jones' or 'Brandon Vietti'.
";"SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';";medium
595;What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?
";"SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';";medium
596;Which country has the most of TV Channels? List the country and number of TV Channels it has.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
Which country has the most of TV Channels? List the country and number of TV Channels it has.
";"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;";hard
597;What is the country with the most number of TV Channels and how many does it have?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is the country with the most number of TV Channels and how many does it have?
";"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;";hard
598;List the number of different series names and contents in the TV Channel table.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
List the number of different series names and contents in the TV Channel table.
";"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;";medium
599;How many different series and contents are listed in the TV Channel table?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
How many different series and contents are listed in the TV Channel table?
";"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;";medium
600;What is the content of TV Channel with serial name 'Sky Radio'?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is the content of TV Channel with serial name 'Sky Radio'?
";"SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';";easy
601;What is the content of the series Sky Radio?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is the content of the series Sky Radio?
";"SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';";easy
602;What is the Package Option of TV Channel with serial name 'Sky Radio'?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is the Package Option of TV Channel with serial name 'Sky Radio'?
";"SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';";easy
603;What are the Package Options of the TV Channels whose series names are Sky Radio?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What are the Package Options of the TV Channels whose series names are Sky Radio?
";"SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';";easy
604;How many TV Channel using language English?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
How many TV Channel using language English?
";"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = 'English';";easy
605;How many TV Channels use the English language?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
How many TV Channels use the English language?
";"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = 'English';";easy
606;List the language used least number of TV Channel. List language and number of TV Channel.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
List the language used least number of TV Channel. List language and number of TV Channel.
";"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;";hard
607;What are the languages used by the least number of TV Channels and how many channels use it?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What are the languages used by the least number of TV Channels and how many channels use it?
";"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;";hard
608;List each language and the number of TV Channels using it.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
List each language and the number of TV Channels using it.
";SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE;medium
609;For each language, list the number of TV Channels that use it.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
For each language, list the number of TV Channels that use it.
";SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE;medium
610;What is the TV Channel that shows the cartoon 'The Rise of the Blue Beetle!'? List the TV Channel's series name.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is the TV Channel that shows the cartoon 'The Rise of the Blue Beetle!'? List the TV Channel's series name.
";"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = 'The Rise of the Blue Beetle!';";medium
611;What is the series name of the TV Channel that shows the cartoon 'The Rise of the Blue Beetle'?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is the series name of the TV Channel that shows the cartoon 'The Rise of the Blue Beetle'?
";"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = 'The Rise of the Blue Beetle!';";medium
612;List the title of all  Cartoons showed on TV Channel with series name 'Sky Radio'.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
List the title of all  Cartoons showed on TV Channel with series name 'Sky Radio'.
";"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio';";medium
613;What is the title of all the cartools that are on the TV Channel with the series name 'Sky Radio'?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is the title of all the cartools that are on the TV Channel with the series name 'Sky Radio'?
";"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio';";medium
614;List the Episode of all TV series sorted by rating.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
List the Episode of all TV series sorted by rating.
";SELECT Episode FROM TV_series ORDER BY rating;easy
615;What are all of the episodes ordered by ratings?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What are all of the episodes ordered by ratings?
";SELECT Episode FROM TV_series ORDER BY rating;easy
616;List top 3 highest Rating  TV series. List the TV series's Episode and Rating.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
List top 3 highest Rating  TV series. List the TV series's Episode and Rating.
";"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;";medium
617;What are 3 most highly rated episodes in the TV series table and what were those ratings?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What are 3 most highly rated episodes in the TV series table and what were those ratings?
";"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;";medium
618;What is minimum and maximum share of TV series?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is minimum and maximum share of TV series?
";"SELECT max(SHARE) , min(SHARE) FROM TV_series;";medium
619;What is the maximum and minimum share for the TV series?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is the maximum and minimum share for the TV series?
";"SELECT max(SHARE) , min(SHARE) FROM TV_series;";medium
620;What is the air date of TV series with Episode 'A Love of a Lifetime'?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is the air date of TV series with Episode 'A Love of a Lifetime'?
";"SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime';";easy
621;When did the episode 'A Love of a Lifetime' air?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
When did the episode 'A Love of a Lifetime' air?
";"SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime';";easy
622;What is Weekly Rank of TV series with Episode 'A Love of a Lifetime'?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is Weekly Rank of TV series with Episode 'A Love of a Lifetime'?
";"SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';";easy
623;What is the weekly rank for the episode 'A Love of a Lifetime'?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is the weekly rank for the episode 'A Love of a Lifetime'?
";"SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';";easy
624;What is the TV Channel of TV series with Episode 'A Love of a Lifetime'? List the TV Channel's series name.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is the TV Channel of TV series with Episode 'A Love of a Lifetime'? List the TV Channel's series name.
";"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = 'A Love of a Lifetime';";medium
625;What is the name of the series that has the episode 'A Love of a Lifetime'?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is the name of the series that has the episode 'A Love of a Lifetime'?
";"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = 'A Love of a Lifetime';";medium
626;List the Episode of all  TV series showed on TV Channel with series name 'Sky Radio'.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
List the Episode of all  TV series showed on TV Channel with series name 'Sky Radio'.
";"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio';";medium
627;What is the episode for the TV series named 'Sky Radio'?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is the episode for the TV series named 'Sky Radio'?
";"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio';";medium
628;Find the number of cartoons directed by each of the listed directors.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
Find the number of cartoons directed by each of the listed directors.
";SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by;medium
629;How many cartoons did each director create?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
How many cartoons did each director create?
";SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by;medium
630;Find the production code and channel of the most recently aired cartoon .;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
Find the production code and channel of the most recently aired cartoon .
";select production_code ,  channel from cartoon order by original_air_date desc limit 1;medium
631;What is the produdction code and channel of the most recent cartoon ?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is the produdction code and channel of the most recent cartoon ?
";select production_code ,  channel from cartoon order by original_air_date desc limit 1;medium
632;Find the package choice and series name of the TV channel that has high definition TV.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
Find the package choice and series name of the TV channel that has high definition TV.
";SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  'yes';medium
633;What are the package options and the name of the series for the TV Channel that supports high definition TV?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What are the package options and the name of the series for the TV Channel that supports high definition TV?
";SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  'yes';medium
634;which countries' tv channels are playing some cartoon written by Todd Casey?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
which countries' tv channels are playing some cartoon written by Todd Casey?
";SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey';medium
635;What are the countries that have cartoons on TV that were written by Todd Casey?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What are the countries that have cartoons on TV that were written by Todd Casey?
";SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey';medium
636;which countries' tv channels are not playing any cartoon written by Todd Casey?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
which countries' tv channels are not playing any cartoon written by Todd Casey?
";SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey';hard
637;What are the countries that are not playing cartoons written by Todd Casey?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What are the countries that are not playing cartoons written by Todd Casey?
";SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey';hard
638;Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?
";SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones';extra
639;What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?
";SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones';extra
640;find the pixel aspect ratio and nation of the tv channels that do not use English.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
find the pixel aspect ratio and nation of the tv channels that do not use English.
";SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English';medium
641;What is the pixel aspect ratio and country of origin for all TV channels that do not use English?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What is the pixel aspect ratio and country of origin for all TV channels that do not use English?
";SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English';medium
642;find id of the tv channels that from the countries where have more than two tv channels.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
find id of the tv channels that from the countries where have more than two tv channels.
";SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2;easy
643;What are the ids of all tv channels that have more than 2 TV channels?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What are the ids of all tv channels that have more than 2 TV channels?
";SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2;easy
644;find the id of tv channels that do not play any cartoon directed by Ben Jones.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
find the id of tv channels that do not play any cartoon directed by Ben Jones.
";SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones';hard
645;What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?
";SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones';hard
646;find the package option of the tv channel that do not have any cartoon directed by Ben Jones.;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
find the package option of the tv channel that do not have any cartoon directed by Ben Jones.
";SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones');hard
647;What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?;tvshow;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
TV_Channel(id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option)
TV_series(id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, Channel)
Cartoon(id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel)
Foreign keys:
TV_series.Channel = TV_Channel.id
Cartoon.Channel = TV_Channel.id
Question:
What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?
";SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones');hard
648;How many poker players are there?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
How many poker players are there?
";SELECT count(*) FROM poker_player;easy
649;Count the number of poker players.;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
Count the number of poker players.
";SELECT count(*) FROM poker_player;easy
650;List the earnings of poker players in descending order.;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
List the earnings of poker players in descending order.
";SELECT Earnings FROM poker_player ORDER BY Earnings DESC;easy
651;What are the earnings of poker players, ordered descending by value?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
What are the earnings of poker players, ordered descending by value?
";SELECT Earnings FROM poker_player ORDER BY Earnings DESC;easy
652;List the final tables made and the best finishes of poker players.;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
List the final tables made and the best finishes of poker players.
";SELECT Final_Table_Made ,  Best_Finish FROM poker_player;medium
653;What are the final tables made and best finishes for all poker players?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
What are the final tables made and best finishes for all poker players?
";SELECT Final_Table_Made ,  Best_Finish FROM poker_player;medium
654;What is the average earnings of poker players?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
What is the average earnings of poker players?
";SELECT avg(Earnings) FROM poker_player;easy
655;Return the average earnings across all poker players.;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
Return the average earnings across all poker players.
";SELECT avg(Earnings) FROM poker_player;easy
656;What is the money rank of the poker player with the highest earnings?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
What is the money rank of the poker player with the highest earnings?
";SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1;medium
657;Return the money rank of the player with the greatest earnings.;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
Return the money rank of the player with the greatest earnings.
";SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1;medium
658;What is the maximum number of final tables made among poker players with earnings less than 200000?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
What is the maximum number of final tables made among poker players with earnings less than 200000?
";SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000;easy
659;Return the maximum final tables made across all poker players who have earnings below 200000.;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
Return the maximum final tables made across all poker players who have earnings below 200000.
";SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000;easy
660;What are the names of poker players?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
What are the names of poker players?
";SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID;easy
661;Return the names of all the poker players.;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
Return the names of all the poker players.
";SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID;easy
662;What are the names of poker players whose earnings is higher than 300000?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
What are the names of poker players whose earnings is higher than 300000?
";SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000;medium
663;Give the names of poker players who have earnings above 300000.;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
Give the names of poker players who have earnings above 300000.
";SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000;medium
664;List the names of poker players ordered by the final tables made in ascending order.;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
List the names of poker players ordered by the final tables made in ascending order.
";SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made;medium
665;What are the names of poker players, ordered ascending by the number of final tables they have made?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
What are the names of poker players, ordered ascending by the number of final tables they have made?
";SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made;medium
666;What is the birth date of the poker player with the lowest earnings?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
What is the birth date of the poker player with the lowest earnings?
";SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1;hard
667;Return the birth date of the poker player with the lowest earnings.;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
Return the birth date of the poker player with the lowest earnings.
";SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1;hard
668;What is the money rank of the tallest poker player?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
What is the money rank of the tallest poker player?
";SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1;hard
669;Return the money rank of the poker player with the greatest height.;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
Return the money rank of the poker player with the greatest height.
";SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1;hard
670;What is the average earnings of poker players with height higher than 200?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
What is the average earnings of poker players with height higher than 200?
";SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200;medium
671;Give average earnings of poker players who are taller than 200.;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
Give average earnings of poker players who are taller than 200.
";SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200;medium
672;What are the names of poker players in descending order of earnings?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
What are the names of poker players in descending order of earnings?
";SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC;medium
673;Return the names of poker players sorted by their earnings descending.;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
Return the names of poker players sorted by their earnings descending.
";SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC;medium
674;What are different nationalities of people and the corresponding number of people from each nation?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
What are different nationalities of people and the corresponding number of people from each nation?
";SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality;medium
675;How many people are there of each nationality?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
How many people are there of each nationality?
";SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality;medium
676;What is the most common nationality of people?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
What is the most common nationality of people?
";SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1;hard
677;Give the nationality that is most common across all people.;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
Give the nationality that is most common across all people.
";SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1;hard
678;What are the nationalities that are shared by at least two people?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
What are the nationalities that are shared by at least two people?
";SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2;easy
679;Return the nationalities for which there are two or more people.;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
Return the nationalities for which there are two or more people.
";SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2;easy
680;List the names and birth dates of people in ascending alphabetical order of name.;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
List the names and birth dates of people in ascending alphabetical order of name.
";SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC;medium
681;What are the names and birth dates of people, ordered by their names in alphabetical order?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
What are the names and birth dates of people, ordered by their names in alphabetical order?
";SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC;medium
682;Show names of people whose nationality is not 'Russia'.;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
Show names of people whose nationality is not 'Russia'.
";SELECT Name FROM people WHERE Nationality != 'Russia';easy
683;What are the names of people who are not from Russia?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
What are the names of people who are not from Russia?
";SELECT Name FROM people WHERE Nationality != 'Russia';easy
684;List the names of people that are not poker players.;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
List the names of people that are not poker players.
";SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player);hard
685;What are the names of people who do not play poker?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
What are the names of people who do not play poker?
";SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player);hard
686;How many distinct nationalities are there?;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
How many distinct nationalities are there?
";SELECT count(DISTINCT Nationality) FROM people;easy
687;Count the number of different nationalities.;poker_player;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
poker_player(Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings)
people(People_ID, Nationality, Name, Birth_Date, Height)
Foreign keys:
poker_player.People_ID = people.People_ID
Question:
Count the number of different nationalities.
";SELECT count(DISTINCT Nationality) FROM people;easy
688;How many states are there?;voter_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
AREA_CODE_STATE(area_code, state)
CONTESTANTS(contestant_number, contestant_name)
VOTES(vote_id, phone_number, state, contestant_number, created)
Foreign keys:
VOTES.contestant_number = CONTESTANTS.contestant_number
VOTES.state = AREA_CODE_STATE.state
Question:
How many states are there?
";SELECT count(*) FROM area_code_state;easy
689;List the contestant numbers and names, ordered by contestant name descending.;voter_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
AREA_CODE_STATE(area_code, state)
CONTESTANTS(contestant_number, contestant_name)
VOTES(vote_id, phone_number, state, contestant_number, created)
Foreign keys:
VOTES.contestant_number = CONTESTANTS.contestant_number
VOTES.state = AREA_CODE_STATE.state
Question:
List the contestant numbers and names, ordered by contestant name descending.
";SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC;medium
690;List the vote ids, phone numbers and states of all votes.;voter_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
AREA_CODE_STATE(area_code, state)
CONTESTANTS(contestant_number, contestant_name)
VOTES(vote_id, phone_number, state, contestant_number, created)
Foreign keys:
VOTES.contestant_number = CONTESTANTS.contestant_number
VOTES.state = AREA_CODE_STATE.state
Question:
List the vote ids, phone numbers and states of all votes.
";SELECT vote_id ,  phone_number ,  state FROM votes;medium
691;What are the maximum and minimum values of area codes?;voter_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
AREA_CODE_STATE(area_code, state)
CONTESTANTS(contestant_number, contestant_name)
VOTES(vote_id, phone_number, state, contestant_number, created)
Foreign keys:
VOTES.contestant_number = CONTESTANTS.contestant_number
VOTES.state = AREA_CODE_STATE.state
Question:
What are the maximum and minimum values of area codes?
";SELECT max(area_code) ,  min(area_code) FROM area_code_state;medium
692;What is last date created of votes from the state 'CA'?;voter_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
AREA_CODE_STATE(area_code, state)
CONTESTANTS(contestant_number, contestant_name)
VOTES(vote_id, phone_number, state, contestant_number, created)
Foreign keys:
VOTES.contestant_number = CONTESTANTS.contestant_number
VOTES.state = AREA_CODE_STATE.state
Question:
What is last date created of votes from the state 'CA'?
";SELECT max(created) FROM votes WHERE state  =  'CA';easy
693;What are the names of the contestants whose names are not 'Jessie Alloway';voter_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
AREA_CODE_STATE(area_code, state)
CONTESTANTS(contestant_number, contestant_name)
VOTES(vote_id, phone_number, state, contestant_number, created)
Foreign keys:
VOTES.contestant_number = CONTESTANTS.contestant_number
VOTES.state = AREA_CODE_STATE.state
Question:
What are the names of the contestants whose names are not 'Jessie Alloway'
";SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway';easy
694;What are the distinct states and create time of all votes?;voter_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
AREA_CODE_STATE(area_code, state)
CONTESTANTS(contestant_number, contestant_name)
VOTES(vote_id, phone_number, state, contestant_number, created)
Foreign keys:
VOTES.contestant_number = CONTESTANTS.contestant_number
VOTES.state = AREA_CODE_STATE.state
Question:
What are the distinct states and create time of all votes?
";SELECT DISTINCT state ,  created FROM votes;medium
695;What are the contestant numbers and names of the contestants who had at least two votes?;voter_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
AREA_CODE_STATE(area_code, state)
CONTESTANTS(contestant_number, contestant_name)
VOTES(vote_id, phone_number, state, contestant_number, created)
Foreign keys:
VOTES.contestant_number = CONTESTANTS.contestant_number
VOTES.state = AREA_CODE_STATE.state
Question:
What are the contestant numbers and names of the contestants who had at least two votes?
";SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2;medium
696;Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?;voter_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
AREA_CODE_STATE(area_code, state)
CONTESTANTS(contestant_number, contestant_name)
VOTES(vote_id, phone_number, state, contestant_number, created)
Foreign keys:
VOTES.contestant_number = CONTESTANTS.contestant_number
VOTES.state = AREA_CODE_STATE.state
Question:
Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?
";SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1;extra
697;What are the number of votes from state 'NY' or 'CA'?;voter_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
AREA_CODE_STATE(area_code, state)
CONTESTANTS(contestant_number, contestant_name)
VOTES(vote_id, phone_number, state, contestant_number, created)
Foreign keys:
VOTES.contestant_number = CONTESTANTS.contestant_number
VOTES.state = AREA_CODE_STATE.state
Question:
What are the number of votes from state 'NY' or 'CA'?
";SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA';medium
698;How many contestants did not get voted?;voter_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
AREA_CODE_STATE(area_code, state)
CONTESTANTS(contestant_number, contestant_name)
VOTES(vote_id, phone_number, state, contestant_number, created)
Foreign keys:
VOTES.contestant_number = CONTESTANTS.contestant_number
VOTES.state = AREA_CODE_STATE.state
Question:
How many contestants did not get voted?
";SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes );extra
699;What is the area code in which the most voters voted?;voter_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
AREA_CODE_STATE(area_code, state)
CONTESTANTS(contestant_number, contestant_name)
VOTES(vote_id, phone_number, state, contestant_number, created)
Foreign keys:
VOTES.contestant_number = CONTESTANTS.contestant_number
VOTES.state = AREA_CODE_STATE.state
Question:
What is the area code in which the most voters voted?
";SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1;extra
700;What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?;voter_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
AREA_CODE_STATE(area_code, state)
CONTESTANTS(contestant_number, contestant_name)
VOTES(vote_id, phone_number, state, contestant_number, created)
Foreign keys:
VOTES.contestant_number = CONTESTANTS.contestant_number
VOTES.state = AREA_CODE_STATE.state
Question:
What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?
";SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling';medium
701;List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.;voter_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
AREA_CODE_STATE(area_code, state)
CONTESTANTS(contestant_number, contestant_name)
VOTES(vote_id, phone_number, state, contestant_number, created)
Foreign keys:
VOTES.contestant_number = CONTESTANTS.contestant_number
VOTES.state = AREA_CODE_STATE.state
Question:
List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.
";SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss';extra
702;Return the names of the contestants whose names contain the substring 'Al' .;voter_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
AREA_CODE_STATE(area_code, state)
CONTESTANTS(contestant_number, contestant_name)
VOTES(vote_id, phone_number, state, contestant_number, created)
Foreign keys:
VOTES.contestant_number = CONTESTANTS.contestant_number
VOTES.state = AREA_CODE_STATE.state
Question:
Return the names of the contestants whose names contain the substring 'Al' .
";select contestant_name from contestants where contestant_name like '%al%';medium
703;What are the names of all the countries that became independent after 1950?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the names of all the countries that became independent after 1950?
";SELECT Name FROM country WHERE IndepYear  >  1950;easy
704;Give the names of the nations that were founded after 1950.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Give the names of the nations that were founded after 1950.
";SELECT Name FROM country WHERE IndepYear  >  1950;easy
705;How many countries have a republic as their form of government?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
How many countries have a republic as their form of government?
";SELECT count(*) FROM country WHERE GovernmentForm  =  'Republic';easy
706;How many countries have governments that are republics?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
How many countries have governments that are republics?
";SELECT count(*) FROM country WHERE GovernmentForm  =  'Republic';easy
707;What is the total surface area of the countries in the Caribbean region?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the total surface area of the countries in the Caribbean region?
";SELECT sum(SurfaceArea) FROM country WHERE Region  =  'Caribbean';easy
708;How much surface area do the countires in the Carribean cover together?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
How much surface area do the countires in the Carribean cover together?
";SELECT sum(SurfaceArea) FROM country WHERE Region  =  'Caribbean';easy
709;Which continent is Anguilla in?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Which continent is Anguilla in?
";SELECT Continent FROM country WHERE Name  =  'Anguilla';easy
710;What is the continent name which Anguilla belongs to?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the continent name which Anguilla belongs to?
";SELECT Continent FROM country WHERE Name  =  'Anguilla';easy
711;Which region is the city Kabul located in?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Which region is the city Kabul located in?
";SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  'Kabul';medium
712;What region is Kabul in?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What region is Kabul in?
";SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  'Kabul';medium
713;Which language is the most popular in Aruba?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Which language is the most popular in Aruba?
";SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  'Aruba' ORDER BY Percentage DESC LIMIT 1;extra
714;What language is predominantly spoken in Aruba?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What language is predominantly spoken in Aruba?
";SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  'Aruba' ORDER BY Percentage DESC LIMIT 1;extra
715;What are the population and life expectancies in Brazil?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the population and life expectancies in Brazil?
";SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  'Brazil';medium
716;Give me Brazil’s population and life expectancies.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Give me Brazil’s population and life expectancies.
";SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  'Brazil';medium
717;What are the region and population of Angola?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the region and population of Angola?
";SELECT Population ,  Region FROM country WHERE Name  =  'Angola';medium
718;What region does Angola belong to and what is its population?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What region does Angola belong to and what is its population?
";SELECT Population ,  Region FROM country WHERE Name  =  'Angola';medium
719;What is the average expected life expectancy for countries in the region of Central Africa?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the average expected life expectancy for countries in the region of Central Africa?
";SELECT avg(LifeExpectancy) FROM country WHERE Region  =  'Central Africa';easy
720;How long is the people’s average life expectancy in Central Africa?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
How long is the people’s average life expectancy in Central Africa?
";SELECT avg(LifeExpectancy) FROM country WHERE Region  =  'Central Africa';easy
721;What is the name of country that has the shortest life expectancy in Asia?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the name of country that has the shortest life expectancy in Asia?
";SELECT Name FROM country WHERE Continent  =  'Asia' ORDER BY LifeExpectancy LIMIT 1;hard
722;Give the name of the country in Asia with the lowest life expectancy.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Give the name of the country in Asia with the lowest life expectancy.
";SELECT Name FROM country WHERE Continent  =  'Asia' ORDER BY LifeExpectancy LIMIT 1;hard
723;What is the total population and maximum GNP in Asia?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the total population and maximum GNP in Asia?
";SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  'Asia';medium
724;How many people live in Asia, and what is the largest GNP among them?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
How many people live in Asia, and what is the largest GNP among them?
";SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  'Asia';medium
725;What is the average life expectancy in African countries that are republics?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the average life expectancy in African countries that are republics?
";SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  'Africa' AND GovernmentForm  =  'Republic';medium
726;Give the average life expectancy for countries in Africa which are republics?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Give the average life expectancy for countries in Africa which are republics?
";SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  'Africa' AND GovernmentForm  =  'Republic';medium
727;What is the total surface area of the continents Asia and Europe?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the total surface area of the continents Asia and Europe?
";SELECT sum(SurfaceArea) FROM country WHERE Continent  =  'Asia' OR Continent  =  'Europe';medium
728;Give the total surface area covered by countries in Asia or Europe.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Give the total surface area covered by countries in Asia or Europe.
";SELECT sum(SurfaceArea) FROM country WHERE Continent  =  'Asia' OR Continent  =  'Europe';medium
729;How many people live in Gelderland district?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
How many people live in Gelderland district?
";SELECT sum(Population) FROM city WHERE District  =  'Gelderland';easy
730;What is the total population of Gelderland district?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the total population of Gelderland district?
";SELECT sum(Population) FROM city WHERE District  =  'Gelderland';easy
731;What is the average GNP and total population in all nations whose government is US territory?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the average GNP and total population in all nations whose government is US territory?
";SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  'US Territory';medium
732;Give the mean GNP and total population of nations which are considered US territory.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Give the mean GNP and total population of nations which are considered US territory.
";SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  'US Territory';medium
733;How many unique languages are spoken in the world?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
How many unique languages are spoken in the world?
";SELECT count(DISTINCT LANGUAGE) FROM countrylanguage;easy
734;What is the number of distinct languages used around the world?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the number of distinct languages used around the world?
";SELECT count(DISTINCT LANGUAGE) FROM countrylanguage;easy
735;How many type of governments are in Africa?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
How many type of governments are in Africa?
";SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  'Africa';easy
736;How many different forms of governments are there in Africa?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
How many different forms of governments are there in Africa?
";SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  'Africa';easy
737;What is the total number of languages used in Aruba?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the total number of languages used in Aruba?
";SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  'Aruba';medium
738;How many languages are spoken in Aruba?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
How many languages are spoken in Aruba?
";SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  'Aruba';medium
739;How many official languages does Afghanistan have?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
How many official languages does Afghanistan have?
";SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  'Afghanistan' AND IsOfficial  =  'T';medium
740;How many official languages are spoken in Afghanistan?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
How many official languages are spoken in Afghanistan?
";SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  'Afghanistan' AND IsOfficial  =  'T';medium
741;What is name of the country that speaks the largest number of languages?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is name of the country that speaks the largest number of languages?
";SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1;extra
742;Give the name of the nation that uses the greatest amount of languages.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Give the name of the nation that uses the greatest amount of languages.
";SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1;extra
743;Which continent has the most diverse languages?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Which continent has the most diverse languages?
";SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1;extra
744;Which continent speaks the most languages?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Which continent speaks the most languages?
";SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1;extra
745;How many countries speak both English and Dutch?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
How many countries speak both English and Dutch?
";SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Dutch');easy
746;What is the number of nations that use English and Dutch?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the number of nations that use English and Dutch?
";SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Dutch');easy
747;What are the names of nations speak both English and French?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the names of nations speak both English and French?
";SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'French';extra
748;Give the names of nations that speak both English and French.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Give the names of nations that speak both English and French.
";SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'French';extra
749;What are the names of nations where both English and French are official languages?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the names of nations where both English and French are official languages?
";SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' AND T2.IsOfficial  =  'T' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'French' AND T2.IsOfficial  =  'T';extra
750;Give the names of countries with English and French as official languages.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Give the names of countries with English and French as official languages.
";SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' AND T2.IsOfficial  =  'T' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'French' AND T2.IsOfficial  =  'T';extra
751;What is the number of distinct continents where Chinese is spoken?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the number of distinct continents where Chinese is spoken?
";SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Chinese';medium
752;How many continents speak Chinese?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
How many continents speak Chinese?
";SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Chinese';medium
753;What are the regions that use English or Dutch?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the regions that use English or Dutch?
";SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' OR T2.Language  =  'Dutch';hard
754;Which regions speak Dutch or English?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Which regions speak Dutch or English?
";SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' OR T2.Language  =  'Dutch';hard
755;What are the countries where either English or Dutch is the official language ?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the countries where either English or Dutch is the official language ?
";select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  'english' and isofficial  =  't' union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  'dutch' and isofficial  =  't';extra
756;Which countries have either English or Dutch as an official language?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Which countries have either English or Dutch as an official language?
";SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' AND IsOfficial  =  'T' UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Dutch' AND IsOfficial  =  'T';extra
757;Which language is the most popular on the Asian continent?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Which language is the most popular on the Asian continent?
";SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  'Asia' GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1;extra
758;What is the language that is used by the largest number of Asian nations?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the language that is used by the largest number of Asian nations?
";SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  'Asia' GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1;extra
759;Which languages are spoken by only one country in republic governments?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Which languages are spoken by only one country in republic governments?
";SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  'Republic' GROUP BY T2.Language HAVING COUNT(*)  =  1;hard
760;What languages are only used by a single country with a republic government?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What languages are only used by a single country with a republic government?
";SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  'Republic' GROUP BY T2.Language HAVING COUNT(*)  =  1;hard
761;Find the city with the largest population that uses English.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Find the city with the largest population that uses English.
";SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  'English' ORDER BY T1.Population DESC LIMIT 1;extra
762;What is the most populace city that speaks English?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the most populace city that speaks English?
";SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  'English' ORDER BY T1.Population DESC LIMIT 1;extra
763;Find the name, population and expected life length of asian country with the largest area?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Find the name, population and expected life length of asian country with the largest area?
";SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  'Asia' ORDER BY SurfaceArea DESC LIMIT 1;hard
764;What are the name, population, and life expectancy of the largest Asian country by land?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the name, population, and life expectancy of the largest Asian country by land?
";SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  'Asia' ORDER BY SurfaceArea DESC LIMIT 1;hard
765;What is average life expectancy in the countries where English is not the official language?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is average life expectancy in the countries where English is not the official language?
";SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' AND T2.IsOfficial  =  'T');extra
766;Give the mean life expectancy of countries in which English is not the official language.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Give the mean life expectancy of countries in which English is not the official language.
";SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' AND T2.IsOfficial  =  'T');extra
767;What is the total number of people living in the nations that do not use English?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the total number of people living in the nations that do not use English?
";SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English');extra
768;How many people live in countries that do not speak English?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
How many people live in countries that do not speak English?
";SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English');extra
769;What is the official language spoken in the country whose head of state is Beatrix?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the official language spoken in the country whose head of state is Beatrix?
";SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  'Beatrix' AND T2.IsOfficial  =  'T';medium
770;What is the official language used in the country the name of whose head of state is Beatrix.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the official language used in the country the name of whose head of state is Beatrix.
";SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  'Beatrix' AND T2.IsOfficial  =  'T';medium
771;What is the total number of unique official languages spoken in the countries that are founded before 1930?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the total number of unique official languages spoken in the countries that are founded before 1930?
";SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  'T';medium
772;For the countries founded before 1930, what is the total number of distinct official languages?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
For the countries founded before 1930, what is the total number of distinct official languages?
";SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  'T';medium
773;What are the countries that have greater surface area than any country in Europe?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the countries that have greater surface area than any country in Europe?
";SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  'Europe');hard
774;Which countries have greater area than that of any country in Europe?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Which countries have greater area than that of any country in Europe?
";SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  'Europe');hard
775;What are the African countries that have a  population less than any country in Asia?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the African countries that have a  population less than any country in Asia?
";SELECT Name FROM country WHERE Continent  =  'Africa'  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  'Asia');extra
776;Which African countries have a smaller population than that of any country in Asia?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Which African countries have a smaller population than that of any country in Asia?
";SELECT Name FROM country WHERE Continent  =  'Africa'  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  'Asia');extra
777;Which Asian countries have a population that is larger than any country in Africa?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Which Asian countries have a population that is larger than any country in Africa?
";SELECT Name FROM country WHERE Continent  =  'Asia'  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  'Africa');extra
778;What are the Asian countries which have a population larger than that of any country in Africa?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the Asian countries which have a population larger than that of any country in Africa?
";SELECT Name FROM country WHERE Continent  =  'Asia'  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  'Africa');extra
779;What are the country codes for countries that do not speak English?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the country codes for countries that do not speak English?
";SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  'English';hard
780;Return the country codes for countries that do not speak English.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Return the country codes for countries that do not speak English.
";SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  'English';hard
781;What are the country codes of countries where people use languages other than English?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the country codes of countries where people use languages other than English?
";SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != 'English';easy
782;Give the country codes for countries in which people speak langauges that are not English.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Give the country codes for countries in which people speak langauges that are not English.
";SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != 'English';easy
783;What are the codes of the countries that do not speak English and whose government forms are not Republic?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the codes of the countries that do not speak English and whose government forms are not Republic?
";SELECT Code FROM country WHERE GovernmentForm != 'Republic' EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  'English';hard
784;Return the codes of countries that do not speak English and do not have Republics for governments.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Return the codes of countries that do not speak English and do not have Republics for governments.
";SELECT Code FROM country WHERE GovernmentForm != 'Republic' EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  'English';hard
785;Which cities are in European countries where English is not the official language?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Which cities are in European countries where English is not the official language?
";SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English');extra
786;What are the names of cities in Europe for which English is not the official language?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the names of cities in Europe for which English is not the official language?
";SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English');extra
787;Which unique cities are in Asian countries where Chinese is the official language ?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Which unique cities are in Asian countries where Chinese is the official language ?
";select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  'asia';hard
788;Return the different names of cities that are in Asia and for which Chinese is the official language.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Return the different names of cities that are in Asia and for which Chinese is the official language.
";SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  'Asia';hard
789;What are the name, independence year, and surface area of the country with the smallest population?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the name, independence year, and surface area of the country with the smallest population?
";SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1;medium
790;Give the name, year of independence, and surface area of the country that has the lowest population.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Give the name, year of independence, and surface area of the country that has the lowest population.
";SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1;medium
791;What are the population, name and leader of the country with the largest area?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the population, name and leader of the country with the largest area?
";SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1;medium
792;Give the name, population, and head of state for the country that has the largest area.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Give the name, population, and head of state for the country that has the largest area.
";SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1;medium
793;Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.
";SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2;medium
794;What are the names of countries that speak more than 2 languages, as well as how many languages they speak?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the names of countries that speak more than 2 languages, as well as how many languages they speak?
";SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2;medium
795;Find the number of cities in each district whose population is greater than the average population of cities?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Find the number of cities in each district whose population is greater than the average population of cities?
";SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District;extra
796;How many cities in each district have a population that is above the average population across all cities?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
How many cities in each district have a population that is above the average population across all cities?
";SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District;extra
797;Find the government form name and total population for each government form whose average life expectancy is longer than 72.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Find the government form name and total population for each government form whose average life expectancy is longer than 72.
";SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72;medium
798;What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?
";SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72;medium
799;Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?
";SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72;medium
800;What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?
";SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72;medium
801;What are the names and areas of countries with the top 5 largest area?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the names and areas of countries with the top 5 largest area?
";SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;medium
802;Return the names and surface areas of the 5 largest countries.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Return the names and surface areas of the 5 largest countries.
";SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;medium
803;What are names of countries with the top 3 largest population?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are names of countries with the top 3 largest population?
";SELECT Name FROM country ORDER BY Population DESC LIMIT 3;medium
804;Return the names of the 3 most populated countries.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Return the names of the 3 most populated countries.
";SELECT Name FROM country ORDER BY Population DESC LIMIT 3;medium
805;What are the names of the nations with the 3 lowest populations?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the names of the nations with the 3 lowest populations?
";SELECT Name FROM country ORDER BY Population ASC LIMIT 3;medium
806;Return the names of the 3 countries with the fewest people.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Return the names of the 3 countries with the fewest people.
";SELECT Name FROM country ORDER BY Population ASC LIMIT 3;medium
807;how many countries are in Asia?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
how many countries are in Asia?
";SELECT count(*) FROM country WHERE continent  =  'Asia';easy
808;Count the number of countries in Asia.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Count the number of countries in Asia.
";SELECT count(*) FROM country WHERE continent  =  'Asia';easy
809;What are the names of the countries that are in the continent of Europe and have a population of 80000?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the names of the countries that are in the continent of Europe and have a population of 80000?
";SELECT Name FROM country WHERE continent  =  'Europe' AND Population  =  '80000';medium
810;Give the names of countries that are in Europe and have a population equal to 80000.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Give the names of countries that are in Europe and have a population equal to 80000.
";SELECT Name FROM country WHERE continent  =  'Europe' AND Population  =  '80000';medium
811;What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?
";select sum(population) ,  avg(surfacearea) from country where continent  =  'north america' and surfacearea  >  3000;hard
812;Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .
";select sum(population) ,  avg(surfacearea) from country where continent  =  'north america' and surfacearea  >  3000;hard
813;What are the cities whose population is between 160000 and 900000?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the cities whose population is between 160000 and 900000?
";SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000;easy
814;Return the names of cities that have a population between 160000 and 900000 .;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Return the names of cities that have a population between 160000 and 900000 .
";select name from city where population between 160000 and 900000;easy
815;Which language is spoken by the largest number of countries?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Which language is spoken by the largest number of countries?
";SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1;hard
816;Give the language that is spoken in the most countries.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Give the language that is spoken in the most countries.
";SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1;hard
817;What is the language spoken by the largest percentage of people in each country?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the language spoken by the largest percentage of people in each country?
";SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode;medium
818;What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?
";SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode;medium
819;What is the total number of countries where Spanish is spoken by the largest percentage of people?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What is the total number of countries where Spanish is spoken by the largest percentage of people?
";SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  'Spanish' GROUP BY CountryCode;extra
820;Count the number of countries for which Spanish is the predominantly spoken language.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Count the number of countries for which Spanish is the predominantly spoken language.
";SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  'Spanish' GROUP BY CountryCode;extra
821;What are the codes of countries where Spanish is spoken by the largest percentage of people?;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
What are the codes of countries where Spanish is spoken by the largest percentage of people?
";SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  'Spanish' GROUP BY CountryCode;medium
822;Return the codes of countries for which Spanish is the predominantly spoken language.;world_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
city(ID, Name, CountryCode, District, Population)
sqlite_sequence(name, seq)
country(Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2)
countrylanguage(CountryCode, Language, IsOfficial, Percentage)
Foreign keys:
city.CountryCode = country.Code
countrylanguage.CountryCode = country.Code
Question:
Return the codes of countries for which Spanish is the predominantly spoken language.
";SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  'Spanish' GROUP BY CountryCode;medium
823;How many conductors are there?;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
How many conductors are there?
";SELECT count(*) FROM conductor;easy
824;Count the number of conductors.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
Count the number of conductors.
";SELECT count(*) FROM conductor;easy
825;List the names of conductors in ascending order of age.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
List the names of conductors in ascending order of age.
";SELECT Name FROM conductor ORDER BY Age ASC;easy
826;What are the names of conductors, ordered by age?;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
What are the names of conductors, ordered by age?
";SELECT Name FROM conductor ORDER BY Age ASC;easy
827;What are the names of conductors whose nationalities are not 'USA'?;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
What are the names of conductors whose nationalities are not 'USA'?
";SELECT Name FROM conductor WHERE Nationality != 'USA';easy
828;Return the names of conductors that do not have the nationality 'USA'.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
Return the names of conductors that do not have the nationality 'USA'.
";SELECT Name FROM conductor WHERE Nationality != 'USA';easy
829;What are the record companies of orchestras in descending order of years in which they were founded?;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
What are the record companies of orchestras in descending order of years in which they were founded?
";SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;easy
830;Return the record companies of orchestras, sorted descending by the years in which they were founded.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
Return the record companies of orchestras, sorted descending by the years in which they were founded.
";SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;easy
831;What is the average attendance of shows?;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
What is the average attendance of shows?
";SELECT avg(Attendance) FROM SHOW;easy
832;Return the average attendance across all shows.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
Return the average attendance across all shows.
";SELECT avg(Attendance) FROM SHOW;easy
833;What are the maximum and minimum share of performances whose type is not 'Live final'.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
What are the maximum and minimum share of performances whose type is not 'Live final'.
";SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != 'Live final';medium
834;Return the maximum and minimum shares for performances that do not have the type 'Live final'.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
Return the maximum and minimum shares for performances that do not have the type 'Live final'.
";SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != 'Live final';medium
835;How many different nationalities do conductors have?;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
How many different nationalities do conductors have?
";SELECT count(DISTINCT Nationality) FROM conductor;easy
836;Count the number of different nationalities of conductors.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
Count the number of different nationalities of conductors.
";SELECT count(DISTINCT Nationality) FROM conductor;easy
837;List names of conductors in descending order of years of work.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
List names of conductors in descending order of years of work.
";SELECT Name FROM conductor ORDER BY Year_of_Work DESC;easy
838;What are the names of conductors, sorted descending by the number of years they have worked?;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
What are the names of conductors, sorted descending by the number of years they have worked?
";SELECT Name FROM conductor ORDER BY Year_of_Work DESC;easy
839;List the name of the conductor with the most years of work.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
List the name of the conductor with the most years of work.
";SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1;medium
840;What is the name of the conductor who has worked the greatest number of years?;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
What is the name of the conductor who has worked the greatest number of years?
";SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1;medium
841;Show the names of conductors and the orchestras they have conducted.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
Show the names of conductors and the orchestras they have conducted.
";SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID;medium
842;What are the names of conductors as well as the corresonding orchestras that they have conducted?;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
What are the names of conductors as well as the corresonding orchestras that they have conducted?
";SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID;medium
843;Show the names of conductors that have conducted more than one orchestras.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
Show the names of conductors that have conducted more than one orchestras.
";SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1;medium
844;What are the names of conductors who have conducted at more than one orchestra?;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
What are the names of conductors who have conducted at more than one orchestra?
";SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1;medium
845;Show the name of the conductor that has conducted the most number of orchestras.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
Show the name of the conductor that has conducted the most number of orchestras.
";SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1;extra
846;What is the name of the conductor who has conducted the most orchestras?;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
What is the name of the conductor who has conducted the most orchestras?
";SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1;extra
847;Please show the name of the conductor that has conducted orchestras founded after 2008.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
Please show the name of the conductor that has conducted orchestras founded after 2008.
";SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008;medium
848;What are the names of conductors who have conducted orchestras founded after the year 2008?;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
What are the names of conductors who have conducted orchestras founded after the year 2008?
";SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008;medium
849;Please show the different record companies and the corresponding number of orchestras.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
Please show the different record companies and the corresponding number of orchestras.
";SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company;medium
850;How many orchestras does each record company manage?;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
How many orchestras does each record company manage?
";SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company;medium
851;Please show the record formats of orchestras in ascending order of count.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
Please show the record formats of orchestras in ascending order of count.
";SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC;medium
852;What are the major record formats of orchestras, sorted by their frequency?;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
What are the major record formats of orchestras, sorted by their frequency?
";SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC;medium
853;List the record company shared by the most number of orchestras.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
List the record company shared by the most number of orchestras.
";SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1;hard
854;What is the record company used by the greatest number of orchestras?;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
What is the record company used by the greatest number of orchestras?
";SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1;hard
855;List the names of orchestras that have no performance.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
List the names of orchestras that have no performance.
";SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance);hard
856;What are the orchestras that do not have any performances?;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
What are the orchestras that do not have any performances?
";SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance);hard
857;Show the record companies shared by orchestras founded before 2003 and after 2003.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
Show the record companies shared by orchestras founded before 2003 and after 2003.
";SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003;hard
858;What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?
";SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003;hard
859;Find the number of orchestras whose record format is 'CD' or 'DVD'.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
Find the number of orchestras whose record format is 'CD' or 'DVD'.
";SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  'CD' OR Major_Record_Format  =  'DVD';medium
860;Count the number of orchestras that have CD or DVD as their record format.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
Count the number of orchestras that have CD or DVD as their record format.
";SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  'CD' OR Major_Record_Format  =  'DVD';medium
861;Show the years in which orchestras that have given more than one performance are founded.;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
Show the years in which orchestras that have given more than one performance are founded.
";SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1;medium
862;What are years of founding for orchestras that have had more than a single performance?;orchestra;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
conductor(Conductor_ID, Name, Age, Nationality, Year_of_Work)
orchestra(Orchestra_ID, Orchestra, Conductor_ID, Record_Company, Year_of_Founded, Major_Record_Format)
performance(Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share)
show(Show_ID, Performance_ID, If_first_show, Result, Attendance)
Foreign keys:
orchestra.Conductor_ID = conductor.Conductor_ID
performance.Orchestra_ID = orchestra.Orchestra_ID
show.Performance_ID = performance.Performance_ID
Question:
What are years of founding for orchestras that have had more than a single performance?
";SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1;medium
863;How many high schoolers are there?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
How many high schoolers are there?
";SELECT count(*) FROM Highschooler;easy
864;Count the number of high schoolers.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Count the number of high schoolers.
";SELECT count(*) FROM Highschooler;easy
865;Show the names and grades of each high schooler.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Show the names and grades of each high schooler.
";SELECT name ,  grade FROM Highschooler;medium
866;What are the names and grades for each high schooler?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
What are the names and grades for each high schooler?
";SELECT name ,  grade FROM Highschooler;medium
867;Show all the grades of the high schoolers.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Show all the grades of the high schoolers.
";SELECT grade FROM Highschooler;easy
868;What is the grade of each high schooler?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
What is the grade of each high schooler?
";SELECT grade FROM Highschooler;easy
869;What grade is Kyle in?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
What grade is Kyle in?
";SELECT grade FROM Highschooler WHERE name  =  'Kyle';easy
870;Return the grade for the high schooler named Kyle.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Return the grade for the high schooler named Kyle.
";SELECT grade FROM Highschooler WHERE name  =  'Kyle';easy
871;Show the names of all high schoolers in grade 10.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Show the names of all high schoolers in grade 10.
";SELECT name FROM Highschooler WHERE grade  =  10;easy
872;What are the names of all high schoolers in grade 10?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
What are the names of all high schoolers in grade 10?
";SELECT name FROM Highschooler WHERE grade  =  10;easy
873;Show the ID of the high schooler named Kyle.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Show the ID of the high schooler named Kyle.
";SELECT ID FROM Highschooler WHERE name  =  'Kyle';easy
874;What is Kyle's id?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
What is Kyle's id?
";SELECT ID FROM Highschooler WHERE name  =  'Kyle';easy
875;How many high schoolers are there in grade 9 or 10?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
How many high schoolers are there in grade 9 or 10?
";SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10;medium
876;Count the number of high schoolers in grades 9 or 10.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Count the number of high schoolers in grades 9 or 10.
";SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10;medium
877;Show the number of high schoolers for each grade.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Show the number of high schoolers for each grade.
";SELECT grade ,  count(*) FROM Highschooler GROUP BY grade;medium
878;How many high schoolers are in each grade?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
How many high schoolers are in each grade?
";SELECT grade ,  count(*) FROM Highschooler GROUP BY grade;medium
879;Which grade has the most high schoolers?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Which grade has the most high schoolers?
";SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1;hard
880;Return the grade that has the greatest number of high schoolers.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Return the grade that has the greatest number of high schoolers.
";SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1;hard
881;Show me all grades that have at least 4 students.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Show me all grades that have at least 4 students.
";SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4;easy
882;Which grades have 4 or more high schoolers?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Which grades have 4 or more high schoolers?
";SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4;easy
883;Show the student IDs and numbers of friends corresponding to each.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Show the student IDs and numbers of friends corresponding to each.
";SELECT student_id ,  count(*) FROM Friend GROUP BY student_id;medium
884;How many friends does each student have?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
How many friends does each student have?
";SELECT student_id ,  count(*) FROM Friend GROUP BY student_id;medium
885;Show the names of high school students and their corresponding number of friends.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Show the names of high school students and their corresponding number of friends.
";SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id;medium
886;What are the names of the high schoolers and how many friends does each have?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
What are the names of the high schoolers and how many friends does each have?
";SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id;medium
887;What is the name of the high schooler who has the greatest number of friends?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
What is the name of the high schooler who has the greatest number of friends?
";SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;extra
888;Return the name of the high school student with the most friends.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Return the name of the high school student with the most friends.
";SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;extra
889;Show the names of high schoolers who have at least 3 friends.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Show the names of high schoolers who have at least 3 friends.
";SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3;medium
890;What are the names of high schoolers who have 3 or more friends?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
What are the names of high schoolers who have 3 or more friends?
";SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3;medium
891;Show the names of all of the high schooler Kyle's friends.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Show the names of all of the high schooler Kyle's friends.
";SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  'Kyle';hard
892;Return the names of friends of the high school student Kyle.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Return the names of friends of the high school student Kyle.
";SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  'Kyle';hard
893;How many friends does the high school student Kyle have?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
How many friends does the high school student Kyle have?
";SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  'Kyle';medium
894;Count the number of friends Kyle has.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Count the number of friends Kyle has.
";SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  'Kyle';medium
895;Show ids of all students who do not have any friends.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Show ids of all students who do not have any friends.
";SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend;hard
896;What are the ids of high school students who do not have friends?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
What are the ids of high school students who do not have friends?
";SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend;hard
897;Show names of all high school students who do not have any friends.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Show names of all high school students who do not have any friends.
";SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id;hard
898;What are the names of students who have no friends?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
What are the names of students who have no friends?
";SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id;hard
899;Show the ids of high schoolers who have friends and are also liked by someone else.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Show the ids of high schoolers who have friends and are also liked by someone else.
";SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes;hard
900;What are the ids of students who both have friends and are liked?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
What are the ids of students who both have friends and are liked?
";SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes;hard
901;Show name of all students who have some friends and also are liked by someone else.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Show name of all students who have some friends and also are liked by someone else.
";SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id;hard
902;What are the names of high schoolers who both have friends and are liked?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
What are the names of high schoolers who both have friends and are liked?
";SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id;hard
903;Count the number of likes for each student id.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Count the number of likes for each student id.
";SELECT student_id ,  count(*) FROM Likes GROUP BY student_id;medium
904;How many likes correspond to each student id?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
How many likes correspond to each student id?
";SELECT student_id ,  count(*) FROM Likes GROUP BY student_id;medium
905;Show the names of high schoolers who have likes, and numbers of likes for each.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Show the names of high schoolers who have likes, and numbers of likes for each.
";SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id;medium
906;What are the names of high schoolers who have likes, and how many likes does each have?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
What are the names of high schoolers who have likes, and how many likes does each have?
";SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id;medium
907;What is the name of the high schooler who has the greatest number of likes?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
What is the name of the high schooler who has the greatest number of likes?
";SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;extra
908;Give the name of the student with the most likes.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Give the name of the student with the most likes.
";SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;extra
909;Show the names of students who have at least 2 likes.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Show the names of students who have at least 2 likes.
";SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2;medium
910;What are the names of students who have 2 or more likes?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
What are the names of students who have 2 or more likes?
";SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2;medium
911;Show the names of students who have a grade higher than 5 and have at least 2 friends.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Show the names of students who have a grade higher than 5 and have at least 2 friends.
";SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2;hard
912;What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?
";SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2;hard
913;How many likes does Kyle have?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
How many likes does Kyle have?
";SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  'Kyle';medium
914;Return the number of likes that the high schooler named Kyle has.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Return the number of likes that the high schooler named Kyle has.
";SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  'Kyle';medium
915;Find the average grade of all students who have some friends.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Find the average grade of all students who have some friends.
";SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id);hard
916;What is the average grade of students who have friends?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
What is the average grade of students who have friends?
";SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id);hard
917;Find the minimum grade of students who have no friends.;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
Find the minimum grade of students who have no friends.
";SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id);extra
918;What is the lowest grade of students who do not have any friends?;network_1;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Highschooler(ID, name, grade)
Friend(student_id, friend_id)
Likes(student_id, liked_id)
Foreign keys:
Friend.friend_id = Highschooler.ID
Friend.student_id = Highschooler.ID
Likes.student_id = Highschooler.ID
Likes.liked_id = Highschooler.ID
Question:
What is the lowest grade of students who do not have any friends?
";SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id);extra
919;Which states have both owners and professionals living there?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Which states have both owners and professionals living there?
";SELECT state FROM Owners INTERSECT SELECT state FROM Professionals;hard
920;Find the states where both owners and professionals live.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Find the states where both owners and professionals live.
";SELECT state FROM Owners INTERSECT SELECT state FROM Professionals;hard
921;What is the average age of the dogs who have gone through any treatments?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What is the average age of the dogs who have gone through any treatments?
";SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments );hard
922;Find the average age of the dogs who went through treatments.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Find the average age of the dogs who went through treatments.
";SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments );hard
923;Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.
";SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2;extra
924;Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.
";SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2;extra
925;Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .
";select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 );hard
926;What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?
";select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 );hard
927;Which first names are used for professionals or owners but are not used as dog names?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Which first names are used for professionals or owners but are not used as dog names?
";SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs;hard
928;Find the first names that are used for professionals or owners but are not used as dog names.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Find the first names that are used for professionals or owners but are not used as dog names.
";SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs;hard
929;Which professional did not operate any treatment on dogs? List the professional's id, role and email.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Which professional did not operate any treatment on dogs? List the professional's id, role and email.
";SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id;extra
930;Give me the id, role and email of the professionals who did not perform any treatment on dogs.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Give me the id, role and email of the professionals who did not perform any treatment on dogs.
";SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id;extra
931;Which owner owns the most dogs? List the owner id, first name and last name.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Which owner owns the most dogs? List the owner id, first name and last name.
";SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1;extra
932;Return the owner id, first name and last name of the owner who has the most dogs.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Return the owner id, first name and last name of the owner who has the most dogs.
";SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1;extra
933;Which professionals have done at least two treatments? List the professional's id, role, and first name.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Which professionals have done at least two treatments? List the professional's id, role, and first name.
";SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2;medium
934;What are the id, role, and first name of the professionals who have performed two or more treatments?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What are the id, role, and first name of the professionals who have performed two or more treatments?
";SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2;medium
935;What is the name of the breed with the most dogs?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What is the name of the breed with the most dogs?
";SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1;extra
936;Which breed do the most dogs have? Give me the breed name.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Which breed do the most dogs have? Give me the breed name.
";SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1;extra
937;Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.
";SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1;extra
938;Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.
";SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1;extra
939;What is the description of the treatment type that costs the least money in total?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What is the description of the treatment type that costs the least money in total?
";SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1;extra
940;Give me the description of the treatment type whose total cost is the lowest.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Give me the description of the treatment type whose total cost is the lowest.
";SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1;extra
941;Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.
";SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1;extra
942;Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.
";SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1;extra
943;Which professionals have done at least two types of treatments? List the professional id and cell phone.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Which professionals have done at least two types of treatments? List the professional id and cell phone.
";SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2;medium
944;Find the id and cell phone of the professionals who operate two or more types of treatments.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Find the id and cell phone of the professionals who operate two or more types of treatments.
";SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2;medium
945;What are the first name and last name of the professionals who have done treatment with cost below average?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What are the first name and last name of the professionals who have done treatment with cost below average?
";SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments );extra
946;Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.
";SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments );extra
947;List the date of each treatment, together with the first name of the professional who operated it.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
List the date of each treatment, together with the first name of the professional who operated it.
";SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id;medium
948;What are the date and the operating professional's first name of each treatment?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What are the date and the operating professional's first name of each treatment?
";SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id;medium
949;List the cost of each treatment and the corresponding treatment type description.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
List the cost of each treatment and the corresponding treatment type description.
";SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code;medium
950;What are the cost and treatment type description of each treatment?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What are the cost and treatment type description of each treatment?
";SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code;medium
951;List each owner's first name, last name, and the size of his for her dog.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
List each owner's first name, last name, and the size of his for her dog.
";SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id;medium
952;What are each owner's first name, last name, and the size of their dog?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What are each owner's first name, last name, and the size of their dog?
";SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id;medium
953;List pairs of the owner's first name and the dogs's name.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
List pairs of the owner's first name and the dogs's name.
";SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id;medium
954;What are each owner's first name and their dogs's name?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What are each owner's first name and their dogs's name?
";SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id;medium
955;List the names of the dogs of the rarest breed and the treatment dates of them.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
List the names of the dogs of the rarest breed and the treatment dates of them.
";SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 );extra
956;Which dogs are of the rarest breed? Show their names and treatment dates.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Which dogs are of the rarest breed? Show their names and treatment dates.
";SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 );extra
957;Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.
";SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia';medium
958;Find the first names of owners living in Virginia and the names of dogs they own.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Find the first names of owners living in Virginia and the names of dogs they own.
";SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia';medium
959;What are the arriving date and the departing date of the dogs who have gone through a treatment?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What are the arriving date and the departing date of the dogs who have gone through a treatment?
";SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id;medium
960;Find the arriving date and the departing date of the dogs that received a treatment.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Find the arriving date and the departing date of the dogs that received a treatment.
";SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id;medium
961;List the last name of the owner owning the youngest dog.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
List the last name of the owner owning the youngest dog.
";SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs );extra
962;Who owns the youngest dog? Give me his or her last name.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Who owns the youngest dog? Give me his or her last name.
";SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs );extra
963;List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.
";SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin';medium
964;What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?
";SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin';medium
965;What are the arriving date and the departing date of all the dogs?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What are the arriving date and the departing date of all the dogs?
";SELECT date_arrived ,  date_departed FROM Dogs;medium
966;List the arrival date and the departure date for all the dogs.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
List the arrival date and the departure date for all the dogs.
";SELECT date_arrived ,  date_departed FROM Dogs;medium
967;How many dogs went through any treatments?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
How many dogs went through any treatments?
";SELECT count(DISTINCT dog_id) FROM Treatments;easy
968;Count the number of dogs that went through a treatment.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Count the number of dogs that went through a treatment.
";SELECT count(DISTINCT dog_id) FROM Treatments;easy
969;How many professionals have performed any treatment to dogs?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
How many professionals have performed any treatment to dogs?
";SELECT count(DISTINCT professional_id) FROM Treatments;easy
970;Find the number of professionals who have ever treated dogs.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Find the number of professionals who have ever treated dogs.
";SELECT count(DISTINCT professional_id) FROM Treatments;easy
971;Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.
";SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%';medium
972;Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.
";SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%';medium
973;Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.
";SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%';medium
974;Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.
";SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%';medium
975;How many dogs have an age below the average?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
How many dogs have an age below the average?
";SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs );hard
976;Count the number of dogs of an age below the average.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Count the number of dogs of an age below the average.
";SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs );hard
977;How much does the most recent treatment cost?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
How much does the most recent treatment cost?
";SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;medium
978;Show me the cost of the most recently performed treatment.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Show me the cost of the most recently performed treatment.
";SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;medium
979;How many dogs have not gone through any treatment?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
How many dogs have not gone through any treatment?
";SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments );extra
980;Tell me the number of dogs that have not received any treatment .;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Tell me the number of dogs that have not received any treatment .
";select count(*) from dogs where dog_id not in ( select dog_id from treatments );extra
981;How many owners temporarily do not have any dogs?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
How many owners temporarily do not have any dogs?
";SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs );extra
982;Find the number of owners who do not own any dogs at this moment.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Find the number of owners who do not own any dogs at this moment.
";SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs );extra
983;How many professionals did not operate any treatment on dogs?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
How many professionals did not operate any treatment on dogs?
";SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments );extra
984;Find the number of professionals who have not treated any dogs.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Find the number of professionals who have not treated any dogs.
";SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments );extra
985;List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.
";SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1;medium
986;What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.
";SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1;medium
987;What is the average age of all the dogs?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What is the average age of all the dogs?
";SELECT avg(age) FROM Dogs;easy
988;Compute the average age of all the dogs.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Compute the average age of all the dogs.
";SELECT avg(age) FROM Dogs;easy
989;What is the age of the oldest dog?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What is the age of the oldest dog?
";SELECT max(age) FROM Dogs;easy
990;Tell me the age of the oldest dog.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Tell me the age of the oldest dog.
";SELECT max(age) FROM Dogs;easy
991;How much does each charge type costs? List both charge type and amount.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
How much does each charge type costs? List both charge type and amount.
";SELECT charge_type ,  charge_amount FROM Charges;medium
992;List each charge type and its amount.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
List each charge type and its amount.
";SELECT charge_type ,  charge_amount FROM Charges;medium
993;How much does the most expensive charge type costs?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
How much does the most expensive charge type costs?
";SELECT max(charge_amount) FROM Charges;easy
994;What is the charge amount of the most expensive charge type?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What is the charge amount of the most expensive charge type?
";SELECT max(charge_amount) FROM Charges;easy
995;List the email, cell phone and home phone of all the professionals.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
List the email, cell phone and home phone of all the professionals.
";SELECT email_address ,  cell_number ,  home_phone FROM professionals;medium
996;What are the email, cell phone and home phone of each professional?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What are the email, cell phone and home phone of each professional?
";SELECT email_address ,  cell_number ,  home_phone FROM professionals;medium
997;What are all the possible breed type and size type combinations?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What are all the possible breed type and size type combinations?
";SELECT DISTINCT breed_code ,  size_code FROM dogs;medium
998;Find the distinct breed type and size type combinations for dogs.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
Find the distinct breed type and size type combinations for dogs.
";SELECT DISTINCT breed_code ,  size_code FROM dogs;medium
999;List the first name of all the professionals along with the description of the treatment they have done.;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
List the first name of all the professionals along with the description of the treatment they have done.
";SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code;medium
1000;What are each professional's first name and description of the treatment they have performed?;dog_kennels;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Breeds(breed_code, breed_name)
Charges(charge_id, charge_type, charge_amount)
Sizes(size_code, size_description)
Treatment_Types(treatment_type_code, treatment_type_description)
Owners(owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number)
Dogs(dog_id, owner_id, abandoned_yn, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed)
Professionals(professional_id, role_code, first_name, street, city, state, zip_code, last_name, email_address, home_phone, cell_number)
Treatments(treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment)
Foreign keys:
Dogs.owner_id = Owners.owner_id
Dogs.owner_id = Owners.owner_id
Dogs.size_code = Sizes.size_code
Dogs.breed_code = Breeds.breed_code
Treatments.dog_id = Dogs.dog_id
Treatments.professional_id = Professionals.professional_id
Treatments.treatment_type_code = Treatment_Types.treatment_type_code
Question:
What are each professional's first name and description of the treatment they have performed?
";SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code;medium
1001;How many singers are there?;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
How many singers are there?
";SELECT count(*) FROM singer;easy
1002;What is the count of singers?;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
What is the count of singers?
";SELECT count(*) FROM singer;easy
1003;List the name of singers in ascending order of net worth.;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
List the name of singers in ascending order of net worth.
";SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;easy
1004;What are the names of singers ordered by ascending net worth?;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
What are the names of singers ordered by ascending net worth?
";SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;easy
1005;What are the birth year and citizenship of singers?;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
What are the birth year and citizenship of singers?
";SELECT Birth_Year ,  Citizenship FROM singer;medium
1006;What are the birth years and citizenships of the singers?;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
What are the birth years and citizenships of the singers?
";SELECT Birth_Year ,  Citizenship FROM singer;medium
1007;List the name of singers whose citizenship is not 'France'.;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
List the name of singers whose citizenship is not 'France'.
";SELECT Name FROM singer WHERE Citizenship != 'France';easy
1008;What are the names of the singers who are not French citizens?;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
What are the names of the singers who are not French citizens?
";SELECT Name FROM singer WHERE Citizenship != 'France';easy
1009;Show the name of singers whose birth year is either 1948 or 1949?;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
Show the name of singers whose birth year is either 1948 or 1949?
";SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949;medium
1010;What are the names of the singers whose birth years are either 1948 or 1949?;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
What are the names of the singers whose birth years are either 1948 or 1949?
";SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949;medium
1011;What is the name of the singer with the largest net worth?;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
What is the name of the singer with the largest net worth?
";SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;medium
1012;What is the name of the singer who is worth the most?;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
What is the name of the singer who is worth the most?
";SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;medium
1013;Show different citizenship of singers and the number of singers of each citizenship.;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
Show different citizenship of singers and the number of singers of each citizenship.
";SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship;medium
1014;For each citizenship, how many singers are from that country?;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
For each citizenship, how many singers are from that country?
";SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship;medium
1015;Please show the most common citizenship of singers.;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
Please show the most common citizenship of singers.
";SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1;hard
1016;What is the most common singer citizenship ?;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
What is the most common singer citizenship ?
";select citizenship from singer group by citizenship order by count(*) desc limit 1;hard
1017;Show different citizenships and the maximum net worth of singers of each citizenship.;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
Show different citizenships and the maximum net worth of singers of each citizenship.
";SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship;medium
1018;For each citizenship, what is the maximum net worth?;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
For each citizenship, what is the maximum net worth?
";SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship;medium
1019;Show titles of songs and names of singers.;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
Show titles of songs and names of singers.
";SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID;medium
1020;What are the song titles and singer names?;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
What are the song titles and singer names?
";SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID;medium
1021;Show distinct names of singers that have songs with sales more than 300000.;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
Show distinct names of singers that have songs with sales more than 300000.
";SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000;medium
1022;what are the different names of the singers that have sales more than 300000?;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
what are the different names of the singers that have sales more than 300000?
";SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000;medium
1023;Show the names of singers that have more than one song.;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
Show the names of singers that have more than one song.
";SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1;medium
1024;What are the names of the singers that have more than one songs?;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
What are the names of the singers that have more than one songs?
";SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1;medium
1025;Show the names of singers and the total sales of their songs.;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
Show the names of singers and the total sales of their songs.
";SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name;medium
1026;For each singer name, what is the total sales for their songs?;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
For each singer name, what is the total sales for their songs?
";SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name;medium
1027;List the name of singers that do not have any song.;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
List the name of singers that do not have any song.
";SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);hard
1028;What is the sname of every sing that does not have any song?;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
What is the sname of every sing that does not have any song?
";SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);hard
1029;Show the citizenship shared by singers with birth year before 1945 and after 1955.;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
Show the citizenship shared by singers with birth year before 1945 and after 1955.
";SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955;hard
1030;What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?;singer;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
singer(Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship)
song(Song_ID, Title, Singer_ID, Sales, Highest_Position)
Foreign keys:
song.Singer_ID = singer.Singer_ID
Question:
What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?
";SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955;hard
1031;How many available features are there in total?;real_estate_properties;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Feature_Types(feature_type_code, feature_type_name)
Ref_Property_Types(property_type_code, property_type_description)
Other_Available_Features(feature_id, feature_type_code, feature_name, feature_description)
Properties(property_id, property_type_code, date_on_market, date_sold, property_name, property_address, room_count, vendor_requested_price, buyer_offered_price, agreed_selling_price, apt_feature_1, apt_feature_2, apt_feature_3, fld_feature_1, fld_feature_2, fld_feature_3, hse_feature_1, hse_feature_2, hse_feature_3, oth_feature_1, oth_feature_2, oth_feature_3, shp_feature_1, shp_feature_2, shp_feature_3, other_property_details)
Other_Property_Features(property_id, feature_id, property_feature_description)
Foreign keys:
Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code
Properties.property_type_code = Ref_Property_Types.property_type_code
Other_Property_Features.property_id = Properties.property_id
Other_Property_Features.feature_id = Other_Available_Features.feature_id
Question:
How many available features are there in total?
";SELECT count(*) FROM Other_Available_Features;easy
1032;What is the feature type name of feature AirCon?;real_estate_properties;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Feature_Types(feature_type_code, feature_type_name)
Ref_Property_Types(property_type_code, property_type_description)
Other_Available_Features(feature_id, feature_type_code, feature_name, feature_description)
Properties(property_id, property_type_code, date_on_market, date_sold, property_name, property_address, room_count, vendor_requested_price, buyer_offered_price, agreed_selling_price, apt_feature_1, apt_feature_2, apt_feature_3, fld_feature_1, fld_feature_2, fld_feature_3, hse_feature_1, hse_feature_2, hse_feature_3, oth_feature_1, oth_feature_2, oth_feature_3, shp_feature_1, shp_feature_2, shp_feature_3, other_property_details)
Other_Property_Features(property_id, feature_id, property_feature_description)
Foreign keys:
Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code
Properties.property_type_code = Ref_Property_Types.property_type_code
Other_Property_Features.property_id = Properties.property_id
Other_Property_Features.feature_id = Other_Available_Features.feature_id
Question:
What is the feature type name of feature AirCon?
";SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  'AirCon';medium
1033;Show the property type descriptions of properties belonging to that code.;real_estate_properties;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Feature_Types(feature_type_code, feature_type_name)
Ref_Property_Types(property_type_code, property_type_description)
Other_Available_Features(feature_id, feature_type_code, feature_name, feature_description)
Properties(property_id, property_type_code, date_on_market, date_sold, property_name, property_address, room_count, vendor_requested_price, buyer_offered_price, agreed_selling_price, apt_feature_1, apt_feature_2, apt_feature_3, fld_feature_1, fld_feature_2, fld_feature_3, hse_feature_1, hse_feature_2, hse_feature_3, oth_feature_1, oth_feature_2, oth_feature_3, shp_feature_1, shp_feature_2, shp_feature_3, other_property_details)
Other_Property_Features(property_id, feature_id, property_feature_description)
Foreign keys:
Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code
Properties.property_type_code = Ref_Property_Types.property_type_code
Other_Property_Features.property_id = Properties.property_id
Other_Property_Features.feature_id = Other_Available_Features.feature_id
Question:
Show the property type descriptions of properties belonging to that code.
";SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code;medium
1034;What are the names of properties that are either houses or apartments with more than 1 room?;real_estate_properties;"Write only the SQL with no explanation for the query using the following schema. Do not select extra columns and do not use 'AS' statements that are not explicitly requested.
Schema:
Ref_Feature_Types(feature_type_code, feature_type_name)
Ref_Property_Types(property_type_code, property_type_description)
Other_Available_Features(feature_id, feature_type_code, feature_name, feature_description)
Properties(property_id, property_type_code, date_on_market, date_sold, property_name, property_address, room_count, vendor_requested_price, buyer_offered_price, agreed_selling_price, apt_feature_1, apt_feature_2, apt_feature_3, fld_feature_1, fld_feature_2, fld_feature_3, hse_feature_1, hse_feature_2, hse_feature_3, oth_feature_1, oth_feature_2, oth_feature_3, shp_feature_1, shp_feature_2, shp_feature_3, other_property_details)
Other_Property_Features(property_id, feature_id, property_feature_description)
Foreign keys:
Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code
Properties.property_type_code = Ref_Property_Types.property_type_code
Other_Property_Features.property_id = Properties.property_id
Other_Property_Features.feature_id = Other_Available_Features.feature_id
Question:
What are the names of properties that are either houses or apartments with more than 1 room?
";SELECT property_name FROM Properties WHERE property_type_code  =  'House' UNION SELECT property_name FROM Properties WHERE property_type_code  =  'Apartment' AND room_count  >  1;hard
